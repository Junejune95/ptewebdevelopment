{"version":3,"sources":["src/app/modules/questions/question-board/question-board.component.html","src/app/modules/questions/question-list/question-list.component.html","src/app/modules/questions/question/question.component.html","src/app/modules/questions/question-board/question-board.component.css","src/app/modules/questions/question-board/question-board.component.ts","src/app/modules/questions/question-list/question-list.component.css","src/app/modules/questions/question-list/question-list.component.ts","src/app/modules/questions/question/question.component.css","src/app/modules/questions/question/question.component.ts","src/app/modules/questions/questions-routing.module.ts","src/app/modules/questions/questions.module.ts","src/app/modules/questions/reslovers/question.reslover.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-xl-4 col-xl-3\\\" *ngFor=\\\"let qb of questionbank.questionBank\\\">\\n        <question-card [questionBank]=\\\"qb\\\" (click)=\\\"goToTablelist(qb)\\\"></question-card>\\n    </div>\\n</div>\\n\"","export default \",<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 p-0\\\">\\n        <show-entries></show-entries>\\n    </div>\\n    <div class=\\\"col-md-6 p-0\\\">\\n        <search-box [hint]=\\\"'Search'\\\"></search-box>\\n    </div>\\n</div>\\n<ng-container *ngIf=\\\"isLoading==true; else showData\\\">\\n    <div>\\n        <table-loading [tType]=\\\"'c4-1'\\\"></table-loading>\\n    </div>\\n\\n</ng-container>\\n<ng-template #showData>\\n    <table role=\\\"table\\\" class=\\\"table-responsive\\\">\\n        <thead role=\\\"rowgroup\\\">\\n            <tr role=\\\"row\\\">\\n                <ng-container\\n                    *ngIf=\\\"currentModule.moduleName=='WRITING' || currentModule.moduleName=='SPEAKING' || currentModule.moduleName=='LISTENING'\\\">\\n                    <th role=\\\"columnheader\\\">Status</th>\\n                </ng-container>\\n\\n                <th role=\\\"columnheader\\\" class=\\\"fitter-able\\\" (click)=\\\"fitter('name')\\\"\\n                    [class.fitter-active]='tableFilter.sortColumn==\\\"name\\\"'>Name</th>\\n\\n                <th role=\\\"columnheader\\\">Question Type</th>\\n\\n                <th role=\\\"columnheader\\\" *ngIf=\\\"currentModule.moduleName=='READING'\\\">Result</th>\\n\\n                <th role=\\\"columnheader\\\">Action</th>\\n            </tr>\\n        </thead>\\n\\n\\n        <tbody role=\\\"rowgroup\\\" [class]=\\\"currentModule.moduleName\\\">\\n            <ng-container *ngFor=\\\"let data of questionList\\\">\\n                <tr role=\\\"row\\\">\\n                    <ng-container\\n                        *ngIf=\\\"currentModule.moduleName=='WRITING' || currentModule.moduleName=='SPEAKING' ||  currentModule.moduleName=='LISTENING'\\\">\\n                        <td role=\\\"cell\\\">\\n                            <div class=\\\"show-overall\\\" [class.passed]=\\\"data.status==true\\\">\\n                            </div>\\n                            {{ data.result }}\\n                        </td>\\n                    </ng-container>\\n                    <td role=\\\"cell\\\">{{data.name}}</td>\\n                    <td role=\\\"cell\\\">{{data.questionName}}</td>\\n                    <td *ngIf=\\\"currentModule.moduleName=='READING'\\\">\\n                        <div class=\\\"show-overall\\\"\\n                            [ngClass]=\\\"{'passed': data.status=='PASSED','failed': data.status=='FAILED'}\\\"></div>\\n                        {{data.result}}\\n                    </td>\\n                    <td>\\n                        <action-btn-gp [btnName]=\\\"'enter'\\\" [directLink]=\\\"'AI-score/practise/'+data.evaluateUrl\\\"\\n                            [isDisable]=\\\"data.status === 'INACTIVE' ? true : false\\\"></action-btn-gp>\\n                    </td>\\n\\n            </ng-container>\\n\\n            <tr *ngIf=\\\"tableFilter.totalCount == 0\\\" role=\\\"row\\\">\\n                <td colspan=\\\"4\\\" class=\\\"text-center\\\">\\n                    No Data Exit\\n                </td>\\n            </tr>\\n        </tbody>\\n\\n    </table>\\n\\n    <pagination [totalCount]='tableFilter.totalCount'>\\n    </pagination>\\n\\n</ng-template>\"","export default \"<header-route-menu [currentPageName]=\\\"'Question Bank'\\\"></header-route-menu>\\n\\n<div class=\\\"container-fluid mt--6\\\">\\n    <header-route-menu-light [currentPageName]=\\\"'Question Bank'\\\"\\n     [moduleName]=\\\"currentRouteModule\\\" [prevUrl]=\\\"'../'+currentRouteModule.toLowerCase()\\\">\\n    </header-route-menu-light>\\n    <router-outlet></router-outlet>\\n</div>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcXVlc3Rpb25zL3F1ZXN0aW9uLWJvYXJkL3F1ZXN0aW9uLWJvYXJkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CheckProgress } from '@app/shared/models/check-progress';\nimport { QuestionBank } from '@app/shared/models/question-bank';\n\n@Component({\n  selector: 'app-question-board',\n  templateUrl: './question-board.component.html',\n  styleUrls: ['./question-board.component.css']\n})\nexport class QuestionBoardComponent implements OnInit {\n  public questionbank: CheckProgress;\n\n  constructor(private activeRoute: ActivatedRoute, private router: Router) {\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n  }\n\n\n  ngOnInit() {\n    this.questionbank = this.activeRoute.snapshot.data[\"questionBank\"];\n  }\n\n  goToTablelist(data) {\n    // if (this.questionbank.moduleType == 'READING')\n    //   this.router.navigateByUrl(`AI-score/practise/reading/${data.questionType}/reading-practise`);\n    // else\n      this.router.navigate([data.moduleType, data.questionType], { relativeTo: this.activeRoute });\n  }\n}\n","export default \"\\n/* table responsive */\\n\\n@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {\\n    /*\\n                      Label the data\\n                  You could also use a data-* attribute and content for this. That way \\\"bloats\\\" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.\\n                      */\\n    .WRITING>tr>td:nth-of-type(1):before {\\n        content: \\\"Status\\\";\\n    }\\n    .WRITING>tr>td:nth-of-type(2):before {\\n        content: \\\"Name\\\";\\n    }\\n    .WRITING>tr>td:nth-of-type(3):before {\\n        content: \\\"Question Type\\\";\\n    }\\n    .WRITING>tr>td:nth-of-type(4):before {\\n        content: \\\"Action\\\";\\n    }\\n    td:nth-of-type(1):before {\\n        content: \\\"Status\\\";\\n    }\\n    td:nth-of-type(2):before {\\n        content: \\\"Name\\\";\\n    }\\n    td:nth-of-type(3):before {\\n        content: \\\"Question Type\\\";\\n    }\\n    td:nth-of-type(4):before {\\n        content: \\\"Action\\\";\\n    }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9xdWVzdGlvbnMvcXVlc3Rpb24tbGlzdC9xdWVzdGlvbi1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLHFCQUFxQjs7QUFFckI7SUFDSTs7O3VCQUdtQjtJQUNuQjtRQUNJLGlCQUFpQjtJQUNyQjtJQUNBO1FBQ0ksZUFBZTtJQUNuQjtJQUNBO1FBQ0ksd0JBQXdCO0lBQzVCO0lBQ0E7UUFDSSxpQkFBaUI7SUFDckI7SUFDQTtRQUNJLGlCQUFpQjtJQUNyQjtJQUNBO1FBQ0ksZUFBZTtJQUNuQjtJQUNBO1FBQ0ksd0JBQXdCO0lBQzVCO0lBQ0E7UUFDSSxpQkFBaUI7SUFDckI7QUFDSiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcXVlc3Rpb25zL3F1ZXN0aW9uLWxpc3QvcXVlc3Rpb24tbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKiB0YWJsZSByZXNwb25zaXZlICovXG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzYwcHgpLCAobWluLWRldmljZS13aWR0aDogNzY4cHgpIGFuZCAobWF4LWRldmljZS13aWR0aDogMTAyNHB4KSB7XG4gICAgLypcbiAgICAgICAgICAgICAgICAgICAgICBMYWJlbCB0aGUgZGF0YVxuICAgICAgICAgICAgICAgICAgWW91IGNvdWxkIGFsc28gdXNlIGEgZGF0YS0qIGF0dHJpYnV0ZSBhbmQgY29udGVudCBmb3IgdGhpcy4gVGhhdCB3YXkgXCJibG9hdHNcIiB0aGUgSFRNTCwgdGhpcyB3YXkgbWVhbnMgeW91IG5lZWQgdG8ga2VlcCBIVE1MIGFuZCBDU1MgaW4gc3luYy4gTGVhIFZlcm91IGhhcyBhIGNsZXZlciB3YXkgdG8gaGFuZGxlIHdpdGggdGV4dC1zaGFkb3cuXG4gICAgICAgICAgICAgICAgICAgICAgKi9cbiAgICAuV1JJVElORz50cj50ZDpudGgtb2YtdHlwZSgxKTpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIlN0YXR1c1wiO1xuICAgIH1cbiAgICAuV1JJVElORz50cj50ZDpudGgtb2YtdHlwZSgyKTpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIk5hbWVcIjtcbiAgICB9XG4gICAgLldSSVRJTkc+dHI+dGQ6bnRoLW9mLXR5cGUoMyk6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJRdWVzdGlvbiBUeXBlXCI7XG4gICAgfVxuICAgIC5XUklUSU5HPnRyPnRkOm50aC1vZi10eXBlKDQpOmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiQWN0aW9uXCI7XG4gICAgfVxuICAgIHRkOm50aC1vZi10eXBlKDEpOmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiU3RhdHVzXCI7XG4gICAgfVxuICAgIHRkOm50aC1vZi10eXBlKDIpOmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiTmFtZVwiO1xuICAgIH1cbiAgICB0ZDpudGgtb2YtdHlwZSgzKTpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIlF1ZXN0aW9uIFR5cGVcIjtcbiAgICB9XG4gICAgdGQ6bnRoLW9mLXR5cGUoNCk6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJBY3Rpb25cIjtcbiAgICB9XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TableListService } from '@app/core/http/table-list.service';\nimport {  QuestionPractise } from '@app/shared/models/question';\nimport { PractiseQuestionsList } from '@app/shared/models/question-list';\nimport { TableFilter } from '@app/shared/models/table-filter';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-question-list',\n  templateUrl: './question-list.component.html',\n  styleUrls: ['./question-list.component.css']\n})\nexport class QuestionListComponent implements OnInit {\n  private currentModule:any={};\n\n  public questionList:QuestionPractise[];\n  public tableFilter=<TableFilter>{};\n\n  private subscription:Subscription;\n\n  public isLoading:boolean=true;\n  public isAsc: boolean = true;\n\n  constructor(private _activeRoute:ActivatedRoute,private _tableService:TableListService) { }\n\n  ngOnInit() {\n    this.isLoading=true;\n    this.currentModule=this._activeRoute.snapshot.params;\n\n    this._activeRoute.queryParams.subscribe(\n      (params) => {\n        if (params.page) {\n          this.tableFilter.page = params.page;\n          this.tableFilter.limit = params.limit;\n        } else if (params.search) {\n          this.tableFilter.search = params.search;\n        }else{\n          this.tableFilter.page = 1;\n          this.tableFilter.limit = 10;\n          this.tableFilter.sortDirection = 'asc';\n          this.tableFilter.sortColumn = 'name';\n          this.tableFilter.search='';\n        }\n        this.getQuestionList();\n      }\n    )\n\n\n  }\n\n  getQuestionList(){\n    this.subscription=this._tableService.getQuestionList(this.tableFilter,this.currentModule)\n    .subscribe((res:PractiseQuestionsList)=>{\n      this.questionList=res.questions;\n      this.tableFilter=res.filter;\n      this.isLoading=false;\n    })\n  }\n\n\n  fitter(sortColumn) {\n    this.isAsc = !this.isAsc ? this.isAsc = true : this.isAsc = false;\n    this.tableFilter.sortDirection = this.isAsc ? 'asc' : 'desc';\n    this.tableFilter.sortColumn = sortColumn;\n    this.getQuestionList();\n  }\n\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    if(this.subscription) this.subscription.unsubscribe();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcXVlc3Rpb25zL3F1ZXN0aW9uL3F1ZXN0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuestionBank } from '@app/shared/models/question-bank';\nimport { SpeakingIconPathName } from '@app/enum/app_enum';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.css']\n})\nexport class QuestionComponent implements OnInit {\n  public currentRouteModule:string;\n\n  constructor(private activeRoute:ActivatedRoute) {\n   }\n\n  ngOnInit() {\n      this.currentRouteModule=this.activeRoute.snapshot.paramMap.get(\"module-name\");\n  }\n\n\n\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule, Route } from \"@angular/router\";\nimport { QuestionResolver } from \"@app/modules/questions/reslovers/question.reslover\";\nimport { QuestionBoardComponent } from \"@app/modules/questions/question-board/question-board.component\";\nimport { QuestionListComponent } from \"@app/modules/questions/question-list/question-list.component\";\nimport { QuestionComponent } from \"@app/modules/questions/question/question.component\";\n\n\n\n\nconst routes: Routes = [\n  {\n    path: \":module-name\",\n    component: QuestionComponent,\n    children: [\n      {\n        path: \"\",\n        component: QuestionBoardComponent,\n        resolve: {\n          questionBank: QuestionResolver\n        }\n      },\n      {\n        path: \":moduleName/:questionType\",\n        component: QuestionListComponent,\n      }\n    ],\n\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    QuestionResolver\n  ]\n})\n\nexport class QuestionRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { QuestionComponent } from './question/question.component';\nimport { QuestionRoutingModule } from '@app/modules/questions/questions-routing.module';\nimport { BasicModule } from '@app/shared/basic-components/basic.module';\nimport { QuestionBoardComponent } from './question-board/question-board.component';\nimport { QuestionListComponent } from './question-list/question-list.component';\n\n\n\n@NgModule({\n  declarations: [\n    QuestionComponent,\n    QuestionBoardComponent,\n    QuestionListComponent,\n  ],\n  imports: [\n    CommonModule,\n    QuestionRoutingModule,\n    BasicModule\n  ],\n  exports: [\n    QuestionRoutingModule\n  ]\n})\nexport class QuestionsModule { }\n","import {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport { QuestionService } from '@app/core/http/question.service';\nimport { CheckProgress } from '@app/shared/models/check-progress';\n\n@Injectable()\nexport class QuestionResolver implements Resolve<CheckProgress[]> {\n\n    constructor(private question: QuestionService) {\n\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n        Observable<CheckProgress[]> {\n\n        const questionUrl = route.paramMap.get(\"module-name\");\n\n        return this.question.getQuestionProgess(questionUrl);\n    }\n\n}"],"sourceRoot":"webpack:///","file":"modules-questions-questions-module-es5.f84fecc14bfae881a382.js"}