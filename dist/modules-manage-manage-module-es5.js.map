{"version":3,"sources":["src/app/modules/manage/manage-board/manage-board.component.html","src/app/modules/manage/manage/manage.component.html","src/app/modules/manage/manage-board/manage-board.component.css","src/app/modules/manage/manage-board/manage-board.component.ts","src/app/modules/manage/manage-routing.module.ts","src/app/modules/manage/manage.module.ts","src/app/modules/manage/manage/manage.component.css","src/app/modules/manage/manage/manage.component.ts","src/app/modules/manage/reslovers/manage-progress.reslover.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<header-route-menu-light [currentPageName]=\\\"'Manage'\\\" [moduleName]=\\\"currentRouteModule\\\"></header-route-menu-light>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-xl-4\\\" *ngFor=\\\"let qb of questionbank.questionBank\\\">\\n        <question-card [questionBank]=\\\"qb\\\" (click)=\\\"goToQuestion(qb)\\\" [isManage]=\\\"true\\\"></question-card>\\n    </div>\\n</div>\\n\"","export default \"<header-route-menu [currentPageName]=\\\"'Mange'\\\"></header-route-menu>\\n\\n<div class=\\\"container-fluid mt--6\\\">\\n       <router-outlet></router-outlet>\\n</div>\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1ib2FyZC9tYW5hZ2UtYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuestionBank } from '@app/shared/models/question-bank';\n\n@Component({\n  selector: 'app-manage-board',\n  templateUrl: './manage-board.component.html',\n  styleUrls: ['./manage-board.component.css']\n})\nexport class ManageBoardComponent implements OnInit {\n\n  public questionbank: QuestionBank[];\n\n  public currentRouteModule: string;\n\n  constructor(private activeRoute: ActivatedRoute, private router: Router) {\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n  }\n\n  ngOnInit() {\n    this.questionbank = this.activeRoute.snapshot.data[\"questionBank\"];\n    this.currentRouteModule = this.activeRoute.snapshot.paramMap.get(\"module-name\");\n  }\n\n  goToQuestion(data) {\n    if (data.questionType == 'Essay Structure & Coherence' || data.questionType == 'Essay Comment' || data.questionType == 'Summary Comment')\n      this.router.navigate([data.routeUrl], { relativeTo: this.activeRoute });\n\n    else\n      this.router.navigate([data.moduleType, data.questionType], { relativeTo: this.activeRoute });\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule, Route } from \"@angular/router\";\nimport { ManageProgressResolver } from \"@app/modules/manage/reslovers/manage-progress.reslover\";\nimport { ManageBoardComponent } from \"@app/modules/manage/manage-board/manage-board.component\";\nimport { ManageComponent } from \"@app/modules/manage/manage/manage.component\";\n\n\nconst routes: Routes = [\n  {\n    path: \"question-bank/:module-name\",\n    component: ManageComponent,\n    children: [\n      {\n        path: \"\",\n        component: ManageBoardComponent,\n        resolve: {\n          questionBank: ManageProgressResolver\n        },\n      },\n      {\n        path:\":moduleType\",\n        loadChildren: '@app/modules/manage/manage-questions/manage-questions.module#ManageQuestionsModule',\n      }\n    ],\n\n  },\n  {\n    path:\"full-mock-test\",\n    loadChildren: '@modules/manage/mock-test/mock-test.module#MockTestModule',\n  },\n  {\n    path:\"individual-mock-test\",\n    loadChildren: '@app/modules/manage/individual-mock/individual-mock.module#IndividualMockModule',\n  },\n  {\n    path:\"predictions\",\n    loadChildren: '@app/modules/manage/predictions/predictions.module#PredictionsModule',\n  },\n\n  {\n    path:\"study-plans\",\n    loadChildren: '@app/modules/manage/study-plans/study-plans.module#StudyPlansModule',\n  },\n  {\n    path:\"packages\",\n    loadChildren: '@app/modules/manage/packages/packages.module#PackagesModule',\n  },\n  {\n    path:\"practise\",\n    loadChildren: '@app/modules/manage/practise/practise.module#PractiseModule',\n  },\n  {\n    path:\"users\",\n    loadChildren: '@app/modules/manage/users/user.module#UserModule',\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    ManageProgressResolver\n  ]\n})\n\nexport class ManageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ManageBoardComponent } from './manage-board/manage-board.component';\nimport { ManageComponent } from './manage/manage.component';\nimport { ManageRoutingModule } from '@app/modules/manage/manage-routing.module';\nimport { BasicModule } from '@app/shared/basic-components/basic.module';\n\n\n\n@NgModule({\n  declarations: [ManageBoardComponent, ManageComponent],\n  imports: [\n    CommonModule,\n    ManageRoutingModule,\n    BasicModule\n  ],\n  exports:[\n    ManageRoutingModule\n  ]\n})\nexport class ManageModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS9tYW5hZ2UuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-manage',\n  templateUrl: './manage.component.html',\n  styleUrls: ['./manage.component.css']\n})\nexport class ManageComponent implements OnInit {\n\n  constructor(private _router:Router) {\n    // this._router.routeReuseStrategy.shouldReuseRoute = () => true;\n   }\n\n  ngOnInit() {\n\n  }\n\n}\n","import {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport { QuestionService } from '@app/core/http/question.service';\nimport { CheckProgress } from '@app/shared/models/check-progress';\n\n@Injectable()\nexport class ManageProgressResolver implements Resolve<CheckProgress[]> {\n\n    constructor(private question: QuestionService) {\n\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n        Observable<CheckProgress[]> {\n\n        const questionUrl = route.paramMap.get(\"module-name\");\n\n        return this.question.getMangeProgess(questionUrl);\n    }\n\n}"],"sourceRoot":"webpack:///","file":"modules-manage-manage-module-es5.js"}