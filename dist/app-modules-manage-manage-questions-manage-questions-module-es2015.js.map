{"version":3,"sources":["./src/app/modules/manage/manage-questions/comment/comment.component.html","./src/app/modules/manage/manage-questions/questions/questions.component.html","./src/app/modules/manage/manage-questions/structure/structure.component.html","./src/app/modules/manage/manage-questions/comment/comment.component.css","./src/app/modules/manage/manage-questions/comment/comment.component.ts","./src/app/modules/manage/manage-questions/manage-questions-routing.ts","./src/app/modules/manage/manage-questions/manage-questions.module.ts","./src/app/modules/manage/manage-questions/questions/questions.component.css","./src/app/modules/manage/manage-questions/questions/questions.component.ts","./src/app/modules/manage/manage-questions/reslovers/comment.reslover.ts","./src/app/modules/manage/manage-questions/reslovers/essay-structure.reslover.ts","./src/app/modules/manage/manage-questions/structure/structure.component.css","./src/app/modules/manage/manage-questions/structure/structure.component.ts","./src/app/shared/models/WritingModel.ts"],"names":[],"mappings":"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","file":"app-modules-manage-manage-questions-manage-questions-module-es2015.js","sourcesContent":["export default \"<header-route-menu-light [currentPageName]=\\\"'Comments'\\\" [moduleName]=\\\"questionName\\\">\\n</header-route-menu-light>\\n\\n\\n<form [formGroup]=\\\"essayCommentForm\\\" class=\\\"create-form\\\">\\n\\n    <div class=\\\"container mb-3\\\">\\n        <!-- Evaluation Comment 1 start-->\\n        <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <group-title> Evaluation Comment 1</group-title>\\n                <label-text>Comment</label-text>\\n                <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" formControlName=\\\"comment1\\\"\\n                    (input)=\\\"str = $event.target.value\\\"></textarea>\\n            </div>\\n        </div>\\n        <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col-sm-6\\\">\\n                <label-text>Min Score</label-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" formControlName=\\\"minValue1\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && wrong1 }\\\"\\n                    oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\" />\\n                <div *ngIf=\\\"wrong1\\\" class=\\\"invalid-feedback\\\">\\n                    <div>Min Value must not greater than Max Value</div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"col-sm-6\\\">\\n                <label-text>Max Score</label-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" formControlName=\\\"maxValue1\\\"\\n                    oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\" />\\n            </div>\\n        </div>\\n        <!-- Evaluation Comment 1 End-->\\n\\n        <!-- Evaluation Comment 2 start-->\\n        <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <group-title> Evaluation Comment 2</group-title>\\n                <label-text>Comment</label-text>\\n                <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" formControlName=\\\"comment2\\\"\\n                    (input)=\\\"str = $event.target.value\\\"></textarea>\\n            </div>\\n        </div>\\n        <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col-sm-6\\\">\\n                <label-text>Min Score</label-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" formControlName=\\\"minValue2\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && wrong2 }\\\"\\n                    oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\" />\\n                <div *ngIf=\\\"wrong2\\\" class=\\\"invalid-feedback\\\">\\n                    <div>Min Value must not greater than Max Value</div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-6\\\">\\n                <label-text>Max Score</label-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" formControlName=\\\"maxValue2\\\"\\n                    oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\" />\\n            </div>\\n        </div>\\n        <!-- Evaluation Comment 2 End-->\\n\\n        <!-- Evaluation Comment 3 start-->\\n        <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <group-title> Evaluation Comment 3</group-title>\\n                <label-text>Comment</label-text>\\n                <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" formControlName=\\\"comment3\\\"\\n                    (input)=\\\"str = $event.target.value\\\"></textarea>\\n            </div>\\n        </div>\\n        <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col-sm-6\\\">\\n                <label-text>Min Score</label-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" formControlName=\\\"minValue3\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && wrong3 }\\\"\\n                    oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\" />\\n                <div *ngIf=\\\"wrong3\\\" class=\\\"invalid-feedback\\\">\\n                    <div>Max Value must not greater than Min Value</div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-6\\\">\\n                <label-text>Max Score</label-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" formControlName=\\\"maxValue3\\\"\\n                    oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\" />\\n            </div>\\n        </div>\\n        <!-- Evaluation Comment 3 End-->\\n\\n        <!-- Evaluation Comment 4 start-->\\n        <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <group-title> Evaluation Comment 4</group-title>\\n                <label-text>Comment</label-text>\\n                <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" formControlName=\\\"comment4\\\"\\n                    (input)=\\\"str = $event.target.value\\\"></textarea>\\n            </div>\\n        </div>\\n        <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col-sm-6\\\">\\n                <label-text>Min Score</label-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" formControlName=\\\"minValue4\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && wrong4 }\\\"\\n                    oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\" />\\n                <div *ngIf=\\\"wrong4\\\" class=\\\"invalid-feedback\\\">\\n                    <div>Min Value must not greater than Max Value</div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-6\\\">\\n                <label-text>Max Score</label-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" formControlName=\\\"maxValue4\\\"\\n                    oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\" />\\n            </div>\\n        </div>\\n  \\n    </div>\\n    <button-footer>\\n        <cancel-btn>Cancel</cancel-btn>\\n        <submit-btn (onClick)=\\\"onSaveOrUpdateEssayComment()\\\">Save</submit-btn>\\n    </button-footer>\\n</form>\"","export default \"<header-route-menu-light [currentPageName]=\\\"currentModule.moduleType\\\" [moduleName]=\\\"questionName\\\"\\n    [createRoute]=\\\"currentModule.questionType\\\" [isPractise]=\\\"true\\\" (practiseEmit)=\\\"onPractise($event)\\\"\\n    [prevUrl]=\\\"'../../../'+currentModule.moduleType.toLowerCase()\\\"></header-route-menu-light>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 p-0\\\">\\n        <show-entries></show-entries>\\n    </div>\\n    <div class=\\\"col-md-6 p-0\\\">\\n        <search-box [hint]=\\\"'Search'\\\"></search-box>\\n    </div>\\n</div>\\n<ng-container *ngIf=\\\"isLoading; else showData\\\">\\n    <div>\\n        <table-loading [tType]=\\\"'c4-1'\\\"></table-loading>\\n    </div>\\n\\n</ng-container>\\n<ng-template #showData>\\n    <table role=\\\"table\\\" class=\\\"table-responsive\\\">\\n        <thead role=\\\"rowgroup\\\">\\n            <tr role=\\\"row\\\">\\n                <th role=\\\"columnheader\\\" class=\\\"fitter-able\\\" (click)=\\\"fitter('createdDate')\\\"\\n                    [class.fitter-active]='tableFilter.sortColumn==\\\"createdDate\\\"'>Create Date</th>\\n\\n                <th role=\\\"columnheader\\\" (click)=\\\"fitter('name')\\\" class=\\\"fitter-able\\\"\\n                    [class.fitter-active]='tableFilter.sortColumn==\\\"name\\\"'>Name</th>\\n\\n                <th role=\\\"columnheader\\\" style=\\\"width: 20%;\\\">Action</th>\\n            </tr>\\n        </thead>\\n\\n\\n        <tbody role=\\\"rowgroup\\\">\\n            <ng-container *ngFor=\\\"let data of questionList\\\">\\n                <tr role=\\\"row\\\" [class.table-selected]=\\\"isPractise==true && selectedId.includes(data.questionId)\\\"\\n                    (click)=\\\"onSelectedQuestion(data.questionId)\\\">\\n                    <td role=\\\"cell\\\">{{data.createdDate | defaultDate }}</td>\\n                    <td role=\\\"cell\\\">{{data.name}}</td>\\n                    <td>\\n                        <action-btn-gp [btnName]=\\\"'duplicate'\\\" [data]=\\\"data\\\" (onSubmit)=\\\"duplicateWord($event)\\\"\\n                            *ngIf=\\\"currentModule.moduleType=='SPEAKING'\\\"></action-btn-gp>\\n                        <action-btn-gp [btnName]=\\\"'evaluate'\\\" [directLink]=\\\"'AI-score/evaluate/'+data.evaluateUrl\\\">\\n                        </action-btn-gp>\\n                        <action-btn-gp [btnName]=\\\"'edit'\\\" [editId]=\\\"data.questionId\\\">\\n                        </action-btn-gp>\\n                        <action-btn-gp [btnName]=\\\"'delete'\\\" [data]=\\\"data\\\" (onSubmit)=\\\"deleteList($event)\\\">\\n                        </action-btn-gp>\\n                    </td>\\n            </ng-container>\\n            <tr *ngIf=\\\"tableFilter.totalCount == 0\\\" role=\\\"row\\\">\\n                <td colspan=\\\"4\\\" class=\\\"text-center\\\">\\n                    No Data Exit\\n                </td>\\n            </tr>\\n        </tbody>\\n\\n    </table>\\n\\n    <div class=\\\"d-flex justify-content-center my-2\\\">\\n        <pagination [totalCount]='tableFilter.totalCount'>\\n        </pagination>\\n    </div>\\n\\n</ng-template>\"","export default \"<header-route-menu-light [currentPageName]=\\\"'Essay Structure & Coherence'\\\" [moduleName]=\\\"'Essay'\\\">\\n</header-route-menu-light>\\n\\n<form [formGroup]=\\\"essayForm\\\" class=\\\"create-form\\\">\\n\\n    <div class=\\\"container mb-3\\\">\\n        <div class=\\\"row\\\">\\n            <!-- Introduction start-->\\n            <div class=\\\"col-md-12 mb-2\\\">\\n                <group-title> Introduction</group-title>\\n                <label-text>Content Keyword </label-text>\\n                <warning-text>(SEPARATE EACH WORD USING SEMICOLON (;) )</warning-text>\\n                <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\"\\n                    formControlName=\\\"answer\\\" (input)=\\\"str = $event.target.value\\\"></textarea>\\n            </div>\\n            <div class=\\\"col-md-12 mb-2\\\">\\n                <label-text>Maximum Keyword match</label-text>\\n                <warning-text>(TO GET FULL MARKS)</warning-text>\\n                <input type=\\\"text\\\" oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\"\\n                    formControlName=\\\"answer_number\\\" class=\\\"form-control pb_height-50 reverse;\\\" />\\n            </div>\\n            <!-- Introduction End-->\\n\\n         \\n\\n            <!-- Coherence/Connecting Words start-->\\n            <div class=\\\"col-md-12 mb-2\\\">\\n                <group-title> Coherence/Connecting</group-title>\\n                <label-text>Content Keyword</label-text>\\n                <warning-text>(SEPARATE EACH WORD USING SEMICOLON (;) )</warning-text>\\n                <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" formControlName=\\\"Coherence\\\"\\n                    (input)=\\\"str = $event.target.value\\\"></textarea>\\n            </div>\\n            <div class=\\\"col-md-12 mb-2\\\">\\n                <label-text>Maximum Keyword match</label-text>\\n                <warning-text>(TO GET FULL MARKS)</warning-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\"\\n                    oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\"\\n                    formControlName=\\\"Coherence_number\\\" />\\n            </div>\\n            <!-- Conclusion End-->\\n        </div>\\n    \\n    </div>\\n    <button-footer>\\n        <cancel-btn>Cancel</cancel-btn>\\n        <submit-btn (onClick)=\\\"onSaveOrUpdate()\\\">Save</submit-btn>\\n    </button-footer>\\n</form>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvY29tbWVudC9jb21tZW50LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonService, SaveService } from '@app/core/http/serviceIndex';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css']\n})\nexport class CommentComponent implements OnInit {\n  essayCommentForm: FormGroup=this.formBuilder.group({\n    comment1: [\"\", [Validators.required]],\n    minValue1: [\"\", [Validators.required]],\n    maxValue1: [\"\", [Validators.required]],\n    comment2: [\"\", [Validators.required]],\n    minValue2: [\"\", [Validators.required]],\n    maxValue2: [\"\", [Validators.required]],\n    comment3: [\"\", [Validators.required]],\n    minValue3: [\"\", [Validators.required]],\n    maxValue3: [\"\", [Validators.required]],\n    comment4: [\"\", [Validators.required]],\n    minValue4: [\"\", [Validators.required]],\n    maxValue4: [\"\", [Validators.required]],\n  });\n  \n  essayCommentIds: any[] = [];\n  public isProgress: boolean = false;\n  public submitted: boolean = false;\n  public check: boolean = false;\n  public wrong1: boolean = false;\n  public wrong2: boolean = false;\n  public wrong3: boolean = false;\n  public wrong4: boolean = false;\n  public subscription: Subscription;\n  public questionType:string;\n  public questionName:string;\n  constructor(\n    private formBuilder: FormBuilder,\n    private dataService: SaveService,\n    private _activeRoute:ActivatedRoute,\n    private _cservice:CommonService\n  ) { }\n\n  ngOnInit() {\n    this.questionType=this._activeRoute.snapshot.params['questionType'];\n    this.questionName=this._cservice.getquestionName(this.questionType);\n\n    this.getEssayComment(this._activeRoute.snapshot['data'].data);\n  }\n  get f() {\n    return this.essayCommentForm.controls;\n  }\n\n  goBack() {\n    this.dataService.goBackPrev();\n  }\n  public comments: Array<any> = [];\n  public mySentences: Array<object> = [\n    { id: 1, text: \"Sentence 1\" },\n    { id: 2, text: \"Sentence 2\" },\n    { id: 3, text: \"Sentence 3\" },\n    { id: 4, text: \"Sentenc4 \" },\n  ];\n\n  onSaveOrUpdateEssayComment() {\n    this.isProgress = true;\n    this.submitted = true;\n    let array = [];\n    if (this.essayCommentIds.length > 0) {\n      for (let i = 1; i <= 4; i++) {\n        array.push({\n          comment: this.essayCommentForm.get(`comment${i}`).value,\n          _id: this.essayCommentIds[i - 1],\n          minScore: Number(this.essayCommentForm.get(`minValue${i}`).value),\n          maxScore: Number(this.essayCommentForm.get(`maxValue${i}`).value),\n          commentType: \"ESSAY\",\n          order: i,\n        });\n      }\n    } else {\n      for (let i = 1; i <= 4; i++) {\n        array.push({\n          comment: this.essayCommentForm.get(`comment${i}`).value,\n          minScore: Number(this.essayCommentForm.get(`minValue${i}`).value),\n          maxScore: Number(this.essayCommentForm.get(`maxValue${i}`).value),\n          commentType: \"ESSAY\",\n          order: i,\n        });\n      }\n    }\n    let min1 = this.essayCommentForm.controls.minValue1.value;\n    let max1 = this.essayCommentForm.controls.maxValue1.value;\n    if (min1 > max1) {\n      this.wrong1 = true;\n      this.isProgress = false;\n    }\n    let min2 = this.essayCommentForm.controls.minValue2.value;\n    let max2 = this.essayCommentForm.controls.maxValue2.value;\n\n    if (min2 > max2) {\n      this.wrong2 = true;\n      this.isProgress = false;\n    }\n    let min3 = this.essayCommentForm.controls.minValue3.value;\n    let max3 = this.essayCommentForm.controls.maxValue3.value;\n    if (min3 > max3) {\n      this.wrong3 = true;\n      this.isProgress = false;\n    }\n    let min4 = this.essayCommentForm.controls.minValue4.value;\n    let max4 = this.essayCommentForm.controls.maxValue4.value;\n    if (min4 > max4) {\n      this.wrong4 = true;\n      this.isProgress = false;\n    }\n    if (this.wrong1 || this.wrong2 || this.wrong3 || this.wrong4) {\n      return;\n    }\n\n    let obj = { comments: array };\n\n    this.subscription = this.dataService.onSaveComment(obj,this.questionType).subscribe(() => {\n      this.goBack();\n    });\n  }\n\n  getEssayComment(res) {\n        if (res.length == 0) {\n          this.isProgress = false;\n        } else {\n          if (res.length > 0) {\n            for (let i = 0; i < 4; i++) {\n              this.essayCommentIds.push(res[i]._id);\n            }\n\n            this.essayCommentForm = this.formBuilder.group({\n              comment1: [res[0].comment, [Validators.required]],\n              minValue1: [res[0].minScore, [Validators.required]],\n              maxValue1: [res[0].maxScore, [Validators.required]],\n              comment2: [res[1].comment, [Validators.required]],\n              minValue2: [res[1].minScore, [Validators.required]],\n              maxValue2: [res[1].maxScore, [Validators.required]],\n              comment3: [res[2].comment, [Validators.required]],\n              minValue3: [res[2].minScore, [Validators.required]],\n              maxValue3: [res[2].maxScore, [Validators.required]],\n              comment4: [res[3].comment, [Validators.required]],\n              minValue4: [res[3].minScore, [Validators.required]],\n              maxValue4: [res[3].maxScore, [Validators.required]],\n            });\n          }\n        }\n       \n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule, Route } from \"@angular/router\";\nimport { CommentComponent } from \"@app/modules/manage/manage-questions/comment/comment.component\";\nimport { QuestionsComponent } from \"@app/modules/manage/manage-questions/questions/questions.component\";\nimport { CommentResolver } from \"@app/modules/manage/manage-questions/reslovers/comment.reslover\";\nimport { EssayStructureResolver } from \"@app/modules/manage/manage-questions/reslovers/essay-structure.reslover\";\nimport { StructureComponent } from \"@app/modules/manage/manage-questions/structure/structure.component\";\n\n\n\n\n\nconst routes: Routes = [\n  {\n    path: \":questionType\",\n    component: QuestionsComponent,\n  },\n  {\n    path: \":questionType/essay-structure-coherence\",\n    component: StructureComponent,\n    resolve: {\n      data: EssayStructureResolver\n    }\n  },\n  {\n    path: \":questionType/comments\",\n    component: CommentComponent,\n    resolve: {\n      data: CommentResolver\n    },\n    data: {\n      name: 'essays/essay-comments'\n    }\n  },\n\n  {\n    path: \":questionType/create\",\n    loadChildren: \"@app/modules/manage/manage-questions/question-create/question-create.module#QuestionCreateModule\"\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    EssayStructureResolver,\n    CommentResolver\n  ]\n})\n\nexport class ManageQuestionsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { QuestionsComponent } from './questions/questions.component';\nimport { ManageQuestionsRoutingModule } from '@app/modules/manage/manage-questions/manage-questions-routing';\nimport { BasicModule } from '@app/shared/basic-components/basic.module';\nimport { CommentComponent } from './comment/comment.component';\nimport { StructureComponent } from './structure/structure.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    QuestionsComponent,\n    CommentComponent,\n    StructureComponent,\n   \n  ],\n  imports: [\n    CommonModule,\n    ManageQuestionsRoutingModule,\n    BasicModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports:[\n    ManageQuestionsRoutingModule\n  ]\n})\nexport class ManageQuestionsModule { }\n","export default \"/* table responsive */\\n\\n@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {\\n    /*\\n                      Label the data\\n                  You could also use a data-* attribute and content for this. That way \\\"bloats\\\" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.\\n                      */\\n    td:nth-of-type(1):before {\\n        content: \\\"Create Date\\\";\\n    }\\n    td:nth-of-type(2):before {\\n        content: \\\"Name\\\";\\n    }\\n    td:nth-of-type(3):before {\\n        content: \\\"Action\\\";\\n    }\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9tYW5hZ2UvbWFuYWdlLXF1ZXN0aW9ucy9xdWVzdGlvbnMvcXVlc3Rpb25zLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEscUJBQXFCOztBQUVyQjtJQUNJOzs7dUJBR21CO0lBQ25CO1FBQ0ksc0JBQXNCO0lBQzFCO0lBQ0E7UUFDSSxlQUFlO0lBQ25CO0lBQ0E7UUFDSSxpQkFBaUI7SUFDckI7QUFDSiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb25zL3F1ZXN0aW9ucy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogdGFibGUgcmVzcG9uc2l2ZSAqL1xuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2MHB4KSwgKG1pbi1kZXZpY2Utd2lkdGg6IDc2OHB4KSBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDEwMjRweCkge1xuICAgIC8qXG4gICAgICAgICAgICAgICAgICAgICAgTGFiZWwgdGhlIGRhdGFcbiAgICAgICAgICAgICAgICAgIFlvdSBjb3VsZCBhbHNvIHVzZSBhIGRhdGEtKiBhdHRyaWJ1dGUgYW5kIGNvbnRlbnQgZm9yIHRoaXMuIFRoYXQgd2F5IFwiYmxvYXRzXCIgdGhlIEhUTUwsIHRoaXMgd2F5IG1lYW5zIHlvdSBuZWVkIHRvIGtlZXAgSFRNTCBhbmQgQ1NTIGluIHN5bmMuIExlYSBWZXJvdSBoYXMgYSBjbGV2ZXIgd2F5IHRvIGhhbmRsZSB3aXRoIHRleHQtc2hhZG93LlxuICAgICAgICAgICAgICAgICAgICAgICovXG4gICAgdGQ6bnRoLW9mLXR5cGUoMSk6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJDcmVhdGUgRGF0ZVwiO1xuICAgIH1cbiAgICB0ZDpudGgtb2YtdHlwZSgyKTpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIk5hbWVcIjtcbiAgICB9XG4gICAgdGQ6bnRoLW9mLXR5cGUoMyk6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJBY3Rpb25cIjtcbiAgICB9XG59XG4iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CommonService, TableListService } from '@app/core/http/serviceIndex';\nimport { HeaderRouteMenuLightComponent } from '@app/shared/basic-components/components/header-route-menu-light/header-route-menu-light.component';\nimport { HeaderRouteMenuComponent } from '@app/shared/basic-components/components/header-route-menu/header-route-menu.component';\nimport { Question } from '@app/shared/models/question';\nimport { QuestionsList } from '@app/shared/models/question-list';\nimport { TableFilter } from '@app/shared/models/table-filter';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html',\n  styleUrls: ['./questions.component.css']\n})\nexport class QuestionsComponent implements OnInit {\n  @ViewChild(HeaderRouteMenuLightComponent, { static: false }) private header: HeaderRouteMenuLightComponent;\n\n\n  private currentModule: any = {};\n  public questionName: string;\n\n  public questionList: Question[];\n  public tableFilter = <TableFilter>{};\n\n  private subscription: Subscription;\n  public isAsc: boolean = false;\n\n  public isLoading: boolean;\n  public selectedId: string[] = [];\n\n  public isPractise: boolean = false;\n\n  constructor(\n    private _activeRoute: ActivatedRoute, private _tableService: TableListService,\n    private _cservice: CommonService, private _router: Router\n  ) {\n    // this._router.routeReuseStrategy.shouldReuseRoute = () => true;\n  }\n\n  ngOnInit() {\n    this.currentModule = this._activeRoute.snapshot.params;\n    this.questionName = this._cservice.getquestionName(this.currentModule.questionType)\n    this._activeRoute.queryParams.subscribe(\n      (params) => {\n\n        this.isPractise = params.isPractise ? Boolean(params.isPractise) : false;\n        console.log(this.isPractise)\n        if (params.page) {\n          this.tableFilter.page = params.page;\n          this.tableFilter.limit = params.limit;\n        } else if (params.search) {\n          this.tableFilter.search = params.search;\n        } else {\n          this.tableFilter.page = 1;\n          this.tableFilter.limit = 10;\n          this.tableFilter.sortColumn = 'createdDate';\n          this.tableFilter.sortDirection = 'asc';\n        }\n        this.getQuestionList();\n      }\n    )\n  }\n\n  getQuestionList() {\n    this.isLoading = true;\n    this.subscription = this._tableService.getManageQuestionList(this.tableFilter, this.currentModule)\n      .subscribe((res: QuestionsList) => {\n        this.questionList = res.questions;\n        this.tableFilter = res.filter;\n        this.isLoading = false;\n        if (this.currentModule.moduleType == 'READING')\n          for (const obj of this.questionList) {\n            if (obj.isPractise) this.selectedId.push(obj.questionId);\n          }\n      })\n  }\n\n\n  fitter(sortColumn) {\n    this.isAsc = !this.isAsc ? this.isAsc = true : this.isAsc = false;\n    this.tableFilter.sortDirection = this.isAsc ? 'asc' : 'desc';\n    this.tableFilter.sortColumn = sortColumn;\n    this.getQuestionList();\n  }\n\n  deleteList(data) {\n    this.subscription = this._tableService.onDeleteQuestion(data.questionId, this.currentModule.moduleType.toLowerCase(), data.questionType)\n      .subscribe((res) => {\n        this.getQuestionList();\n      })\n  }\n\n\n  onPractise(emit) {\n    this.isPractise = emit;\n    this._router.navigate([],\n      {\n        queryParams: { isPractise: emit },\n        queryParamsHandling: 'merge',\n      });\n\n    if (this.selectedId.length != 0 && this.isPractise == false) {\n      let tempObj = {\n        \"idList\": this.selectedId\n      }\n      this.subscription = this._tableService.onReadingPractise(this.currentModule.questionType, tempObj)\n        .subscribe(() => {\n          // this.getQuestionList();\n          // this._router.navigate([],\n          //   {\n          //     queryParams: { isPractise: false },\n          //     queryParamsHandling: 'merge',\n          //   });\n          this.isPractise = false;\n          // this.header.setPractise=false;\n        })\n    }\n  }\n\n  onSelectedQuestion(id: string) {\n    if (this.isPractise) {\n      let index = this.selectedId.indexOf(id);\n      if (this.selectedId.includes(id)) {\n        this.selectedId.splice(index, 1)\n      } else {\n        this.selectedId.push(id);\n      }\n    }\n  }\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    if (this.subscription) this.subscription.unsubscribe();\n  }\n}\n","import { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DetailService } from '@app/core/http/detail.service';\n\n@Injectable()\nexport class CommentResolver implements Resolve<any> {\n\n    constructor(private question: DetailService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot):\n        Observable<any> {\n        let url = `writing/${route.params['questionType']}/comments`\n        return this.question.getDetail(url);\n    }\n}","import { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DetailService } from '@app/core/http/detail.service';\n\n@Injectable()\nexport class EssayStructureResolver implements Resolve<any> {\n\n    constructor(private question: DetailService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot):\n        Observable<any> {\n        let url='essays/essay-structure-coherence';\n        return this.question.getDetail(url);\n    }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvc3RydWN0dXJlL3N0cnVjdHVyZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/save.service';\nimport { EssaySubStructure, Essay_Structure } from '@app/shared/models/WritingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-structure',\n  templateUrl: './structure.component.html',\n  styleUrls: ['./structure.component.css']\n})\nexport class StructureComponent implements OnInit {\n\n  essayForm: FormGroup = this.formBuilder.group({\n    answer: [\"\", [Validators.required]],\n    answer_number: [\"\", [Validators.required]],\n    Coherence: [\"\", [Validators.required]],\n    Coherence_number: [\"\", [Validators.required]],\n  });\n\n  essayStructureID: any = \"\";\n  isProgress: boolean = false;\n  public subscription: Subscription;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private _activeRoute: ActivatedRoute,\n    private _saveService: SaveService\n  ) { }\n\n\n  essay_structure: Essay_Structure;\n  ngOnInit() {\n    this.isProgress = true;\n    this.getEssayStructure(this._activeRoute.snapshot.data['data'])\n  }\n\n  getEssayStructure(res) {\n    this.essayStructureID = res._id;\n    this.essayForm = this.formBuilder.group({\n      answer: [\n        res.answer.structureKeywords,\n        [Validators.required],\n      ],\n      answer_number: [\n        res.answer.maxKeyword,\n        [Validators.required],\n      ],\n   \n      Coherence: [res.coherence.structureKeywords, [Validators.required]],\n      Coherence_number: [res.coherence.maxKeyword, [Validators.required]],\n    });\n\n  }\n\n  onSaveOrUpdate() {\n    this.isProgress = true;\n    this.essay_structure = new Essay_Structure();\n    // this.essay_structure.i = EssaySubStructure.create(string , number)\n    this.essay_structure._id = this.essayStructureID;\n    // For Introduction..\n    this.essay_structure.answer = EssaySubStructure.create(\n      this.essayForm.get(\"answer\").value\n        ? this.essayForm.get(\"answer\").value\n        : \"\",\n      this.essayForm.get(\"answer_number\").value\n        ? Number(this.essayForm.get(\"answer_number\").value)\n        : 0\n    );\n  \n\n    this.subscription = this._saveService\n      .onSaveStructure(this.essay_structure)\n      .subscribe(() => {\n        this.goBack();\n      });\n  }\n\n  goBack() {\n    this._saveService.goBackPrev();\n  }\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n","export class EssayDetail{\n  essayId: string;\n  essayName: EssaySubStructure;\n  questionType: string;\n}\nexport class Essay_Structure {\n  _id: string;\n  answer: EssaySubStructure;\n  // body1: EssaySubStructure;\n  // body2: EssaySubStructure;\n  // conclusion: EssaySubStructure;\n  // coherence: EssaySubStructure;\n}\n\nexport class EssayEvaluation {\n  essayId: string;\n  version: String;\n  userAnswer: EssaySubEvaluate;\n  // body1: EssaySubEvaluate;\n  // body2: EssaySubEvaluate;\n  // conclusion: EssaySubEvaluate;\n  questionType:string;\n}\n\n\nexport class EssaySubStructure {\n  structureKeywords: string;\n  maxKeyword: number;\n\n  constructor(sk, mk) {\n    this.structureKeywords = sk;\n    this.maxKeyword = mk;\n  }\n  static create(sk, mk) {\n    return new EssaySubStructure(sk, mk);\n  }\n}\n\nexport class EssaySubEvaluate {\n  contents: string;\n  wordCount: number;\n\n  constructor(sk, mk) {\n    this.contents = sk;\n    this.wordCount = mk;\n  }\n  static create(sk, mk) {\n    return new EssaySubEvaluate(sk, mk);\n  }\n}\n\n\nexport class EssayWriting {\n  essayId: string;\n  name: String;\n  answer: EssaySubWriting;\n\n  adviseContent: String;\n}\n\nexport class EssaySubWriting {\n  contentKeywords: string;\n  maxKeyword: number;\n  maxWordLimit: number;\n\n  constructor(contentKeywords, maxWordLimit, maxKeyword) {\n    this.contentKeywords = contentKeywords;\n    this.maxKeyword = maxKeyword;\n    this.maxWordLimit = maxWordLimit\n  }\n  static create(ck, max, mk) {\n    return new EssaySubWriting(ck, max, mk);\n  }\n}\n\n\nexport class SummaryEvaluation {\n  version: string;\n  yoursummary: string;\n  totalWordCount: number;\n  summaryId: string;\n  totalMinutes: number;\n  isSubmit: boolean;\n  questionType:string;\n}\n\n\nexport class SummaryWriting {\n  summaryId: string;\n  name: string;\n  type: string;\n  question: string;\n  contentKeywords: string;\n  vocabularyWords: string;\n  unwantedContentKeywords: string;\n  maxContentKeywords: number;\n  maxWordLimit: number;\n  maxVocabularyWords: number;\n  adviseContent: string;\n}\n\n\nexport class SummaryDetail {\n  summaryId: string;\n  summaryName: string;\n  summaryQuestion: string;\n  questionType: string;\n  audioFile:\"\"\n}\n"],"sourceRoot":"webpack:///"}