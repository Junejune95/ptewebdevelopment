{"version":3,"sources":["./src/app/modules/manage/manage-questions/question-create/listening/dictation/dictation.component.html","./src/app/modules/manage/manage-questions/question-create/listening/fib/fib.component.html","./src/app/modules/manage/manage-questions/question-create/listening/highlight-correct-summary/highlight-correct-summary.component.html","./src/app/modules/manage/manage-questions/question-create/listening/highlight-incorrect-words/highlight-incorrect-words.component.html","./src/app/modules/manage/manage-questions/question-create/listening/mcq-multiple/mcq-multiple.component.html","./src/app/modules/manage/manage-questions/question-create/listening/mcq-single/mcq-single.component.html","./src/app/modules/manage/manage-questions/question-create/listening/select-missing-words/select-missing-words.component.html","./src/app/modules/manage/manage-questions/question-create/listening/summary-spoken-text/summary-spoken-text.component.html","./src/app/modules/manage/manage-questions/question-create/question-create/question-create.component.html","./src/app/modules/manage/manage-questions/question-create/reading/fib-bank/fib-bank.component.html","./src/app/modules/manage/manage-questions/question-create/reading/fib-drop-down/fib-drop-down.component.html","./src/app/modules/manage/manage-questions/question-create/reading/mcq-multiple/mcq-multiple.component.html","./src/app/modules/manage/manage-questions/question-create/reading/mcq-single/mcq-single.component.html","./src/app/modules/manage/manage-questions/question-create/reading/reorder-paragraph/reorder-paragraph.component.html","./src/app/modules/manage/manage-questions/question-create/speaking/answer-short-question/answer-short-question.component.html","./src/app/modules/manage/manage-questions/question-create/speaking/describe-image/describe-image.component.html","./src/app/modules/manage/manage-questions/question-create/speaking/read-aloud/read-aloud.component.html","./src/app/modules/manage/manage-questions/question-create/speaking/repeat-sentence/repeat-sentence.component.html","./src/app/modules/manage/manage-questions/question-create/speaking/retell-lecture/retell-lecture.component.html","./src/app/modules/manage/manage-questions/question-create/speaking/word-checker/word-checker.component.html","./src/app/modules/manage/manage-questions/question-create/writing/essay-writing/essay-writing.component.html","./src/app/modules/manage/manage-questions/question-create/writing/summarize-written-text/summarize-written-text.component.html","./src/app/modules/manage/manage-questions/question-create/listening/dictation/dictation.component.css","./src/app/modules/manage/manage-questions/question-create/listening/dictation/dictation.component.ts","./src/app/modules/manage/manage-questions/question-create/listening/fib/fib.component.css","./src/app/modules/manage/manage-questions/question-create/listening/fib/fib.component.ts","./src/app/modules/manage/manage-questions/question-create/listening/highlight-correct-summary/highlight-correct-summary.component.css","./src/app/modules/manage/manage-questions/question-create/listening/highlight-correct-summary/highlight-correct-summary.component.ts","./src/app/modules/manage/manage-questions/question-create/listening/highlight-incorrect-words/highlight-incorrect-words.component.css","./src/app/modules/manage/manage-questions/question-create/listening/highlight-incorrect-words/highlight-incorrect-words.component.ts","./src/app/modules/manage/manage-questions/question-create/listening/mcq-multiple/mcq-multiple.component.css","./src/app/modules/manage/manage-questions/question-create/listening/mcq-multiple/mcq-multiple.component.ts","./src/app/modules/manage/manage-questions/question-create/listening/mcq-single/mcq-single.component.css","./src/app/modules/manage/manage-questions/question-create/listening/mcq-single/mcq-single.component.ts","./src/app/modules/manage/manage-questions/question-create/listening/select-missing-words/select-missing-words.component.css","./src/app/modules/manage/manage-questions/question-create/listening/select-missing-words/select-missing-words.component.ts","./src/app/modules/manage/manage-questions/question-create/listening/summary-spoken-text/summary-spoken-text.component.css","./src/app/modules/manage/manage-questions/question-create/listening/summary-spoken-text/summary-spoken-text.component.ts","./src/app/modules/manage/manage-questions/question-create/question-create-routing.module.ts","./src/app/modules/manage/manage-questions/question-create/question-create.module.ts","./src/app/modules/manage/manage-questions/question-create/question-create/question-create.component.css","./src/app/modules/manage/manage-questions/question-create/question-create/question-create.component.ts","./src/app/modules/manage/manage-questions/question-create/reading/fib-bank/fib-bank.component.css","./src/app/modules/manage/manage-questions/question-create/reading/fib-bank/fib-bank.component.ts","./src/app/modules/manage/manage-questions/question-create/reading/fib-drop-down/fib-drop-down.component.css","./src/app/modules/manage/manage-questions/question-create/reading/fib-drop-down/fib-drop-down.component.ts","./src/app/modules/manage/manage-questions/question-create/reading/mcq-multiple/mcq-multiple.component.css","./src/app/modules/manage/manage-questions/question-create/reading/mcq-multiple/mcq-multiple.component.ts","./src/app/modules/manage/manage-questions/question-create/reading/mcq-single/mcq-single.component.css","./src/app/modules/manage/manage-questions/question-create/reading/mcq-single/mcq-single.component.ts","./src/app/modules/manage/manage-questions/question-create/reading/reorder-paragraph/reorder-paragraph.component.css","./src/app/modules/manage/manage-questions/question-create/reading/reorder-paragraph/reorder-paragraph.component.ts","./src/app/modules/manage/manage-questions/question-create/speaking/answer-short-question/answer-short-question.component.css","./src/app/modules/manage/manage-questions/question-create/speaking/answer-short-question/answer-short-question.component.ts","./src/app/modules/manage/manage-questions/question-create/speaking/describe-image/describe-image.component.css","./src/app/modules/manage/manage-questions/question-create/speaking/describe-image/describe-image.component.ts","./src/app/modules/manage/manage-questions/question-create/speaking/read-aloud/read-aloud.component.css","./src/app/modules/manage/manage-questions/question-create/speaking/read-aloud/read-aloud.component.ts","./src/app/modules/manage/manage-questions/question-create/speaking/repeat-sentence/repeat-sentence.component.css","./src/app/modules/manage/manage-questions/question-create/speaking/repeat-sentence/repeat-sentence.component.ts","./src/app/modules/manage/manage-questions/question-create/speaking/retell-lecture/retell-lecture.component.css","./src/app/modules/manage/manage-questions/question-create/speaking/retell-lecture/retell-lecture.component.ts","./src/app/modules/manage/manage-questions/question-create/speaking/word-checker/word-checker.component.css","./src/app/modules/manage/manage-questions/question-create/speaking/word-checker/word-checker.component.ts","./src/app/modules/manage/manage-questions/question-create/writing/essay-writing/essay-writing.component.css","./src/app/modules/manage/manage-questions/question-create/writing/essay-writing/essay-writing.component.ts","./src/app/modules/manage/manage-questions/question-create/writing/summarize-written-text/summarize-written-text.component.css","./src/app/modules/manage/manage-questions/question-create/writing/summarize-written-text/summarize-written-text.component.ts","./src/app/modules/manage/manage-questions/reslovers/question-detail.reslover.ts"],"names":[],"mappings":"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","file":"app-modules-manage-manage-questions-question-create-question-create-module-es2015.57c10ce5ea899d6d291c.js","sourcesContent":["export default \"<form [formGroup]=\\\"createDictionForm\\\">\\n  <div class=\\\"container create-form\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Dictation Title</label-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" placeholder=\\\"Write Dictation Title\\\" />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Dictation Duration</label-text>\\n        <warning-text>(IN SECONDS)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"duration\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\" placeholder=\\\"Write Dictation Duration\\\"\\n            OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <file-uploader acceptFile='audio' formControlName=\\\"audioFile\\\"></file-uploader>\\n        <div *ngIf=\\\"submitted && f.audioFile.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.audioFile.errors.required\\\">\\n            You must upload audio file\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>CORRECT ANSWER</label-text>\\n        <warning-text>{{ answerWarningText }}</warning-text>\\n        <textarea class=\\\"form-control\\\" cols=\\\"30\\\" rows=\\\"4\\\" [ngClass]=\\\"{\\n              'is-invalid': submitted && f.answer.errors\\n            }\\\" formControlName=\\\"answer\\\" placeholder=\\\"Write answer\\\"></textarea>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"footer-button-block\\\">\\n      <cancel-btn>Cancel</cancel-btn>\\n      <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n    </div>\\n  </div>\\n</form>\"","export default \"<form [formGroup]=\\\"creatFIBForm\\\">\\n    <div class=\\\"container create-form\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <label-text>Title</label-text>\\n          <div class=\\\"d-flex\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" placeholder=\\\"Write Title\\\" />\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row divider\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <label-text>Duration</label-text>\\n          <warning-text>(IN SECONDS)</warning-text>\\n          <div class=\\\"d-flex\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"duration\\\" class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\" placeholder=\\\"Write Duration\\\" OnlyNumber />\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row divider\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <file-uploader acceptFile='audio' formControlName=\\\"audioFile\\\"></file-uploader>\\n          <div *ngIf=\\\"submitted && f.audioFile.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.audioFile.errors.required\\\">\\n              You must upload audio file\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row divider\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <label-text>Blanks Words Paragraph</label-text>\\n          <warning-text>{{ answerWarningText }}</warning-text>\\n          <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" [ngClass]=\\\"{\\n              'is-invalid': submitted && f.paragraph.errors\\n            }\\\" formControlName=\\\"paragraph\\\" placeholder=\\\"Write answer\\\"></textarea>\\n        </div>\\n      </div>\\n      <div class=\\\"footer-button-block\\\">\\n        <cancel-btn>Cancel</cancel-btn>\\n        <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n      </div>\\n    </div>\\n  </form>\"","export default \"<form [formGroup]=\\\"createCorrectSummaryForm\\\">\\n    <div class=\\\"container create-form\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Title</label-text>\\n          <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" placeholder=\\\"Write Title\\\" />\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Duration</label-text>\\n          <warning-text>(IN SECONDS)</warning-text>\\n          <input type=\\\"text\\\" formControlName=\\\"duration\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\" placeholder=\\\"Write Duration\\\"\\n            OnlyNumber />\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <file-uploader acceptFile='audio' formControlName=\\\"audioFile\\\"></file-uploader>\\n          <div *ngIf=\\\"submitted && f.audioFile.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.audioFile.errors.required\\\">\\n              You must upload audio file\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Question</label-text>\\n          <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" [ngClass]=\\\"{\\n                    'is-invalid': submitted && f.question.errors }\\\" formControlName=\\\"question\\\"\\n            placeholder=\\\"Write Question\\\"></textarea>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Give Single Answer</label-text>\\n          <input type=\\\"text\\\" formControlName=\\\"answer\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.answer.errors }\\\" placeholder=\\\"Write Single Answer\\\" />\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Give Options</label-text>\\n          <warning-text>(SEPARATE BY(;))</warning-text>\\n          <input type=\\\"text\\\" formControlName=\\\"options\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.options.errors }\\\" placeholder=\\\"Write Options\\\" />\\n        </div>\\n      </div>\\n\\n      <div class=\\\"footer-button-block\\\">\\n        <cancel-btn>Cancel</cancel-btn>\\n        <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n      </div>\\n    </div>\\n  </form>\\n\"","export default \"<form [formGroup]=\\\"createIncorrectWordForm\\\">\\n\\n  <div class=\\\"container create-form\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Title</label-text>\\n        <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\"\\n          [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" placeholder=\\\"Write Title\\\" />\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Duration</label-text>\\n        <warning-text>(IN SECONDS)</warning-text>\\n        <input type=\\\"text\\\" formControlName=\\\"duration\\\" class=\\\"form-control\\\"\\n          [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\" placeholder=\\\"Write Duration\\\" OnlyNumber />\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <file-uploader acceptFile='audio' formControlName=\\\"audioFile\\\"></file-uploader>\\n        <div *ngIf=\\\"submitted && f.audioFile.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.audioFile.errors.required\\\">\\n            You must upload audio file\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Words Paragraph</label-text>\\n        <warning-text>{{ answerWarningText }}</warning-text>\\n        <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" [ngClass]=\\\"{\\n                    'is-invalid': submitted && f.paragraph.errors }\\\" formControlName=\\\"paragraph\\\"\\n          placeholder=\\\"Write Question\\\"></textarea>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"footer-button-block\\\">\\n      <cancel-btn>Cancel</cancel-btn>\\n      <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n    </div>\\n  </div>\\n</form>\"","export default \"<form [formGroup]=\\\"creatMCQForm\\\">\\n  <div class=\\\"container create-form\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Title</label-text>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Write Title\\\"\\n          [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" formControlName=\\\"title\\\" />\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Duration</label-text>\\n        <warning-text>(IN SECONDS)</warning-text>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\"\\n          formControlName=\\\"duration\\\" placeholder=\\\"Write Duration\\\" OnlyNumber />\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <file-uploader acceptFile='audio' formControlName=\\\"audioFile\\\"></file-uploader>\\n        <div *ngIf=\\\"submitted && f.audioFile.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.audioFile.errors.required\\\">\\n            You must upload audio file\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Question</label-text>\\n        <div class=\\\"d-flex\\\">\\n          <textarea [ngClass]=\\\"{ 'is-invalid': submitted && f.question.errors }\\\" formControlName=\\\"question\\\"\\n            placeholder=\\\"Question\\\" class=\\\"form-control\\\" cols=\\\"30\\\" rows=\\\"4\\\"\\n            (input)=\\\"str = $event.target.value\\\"></textarea>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Give Answer</label-text>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.answers.errors }\\\"\\n          formControlName=\\\"answers\\\" placeholder=\\\"Write Answer\\\" />\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Give Options</label-text>\\n        <warning-text>(SEPARATE BY(;))</warning-text>\\n          <textarea [ngClass]=\\\"{ 'is-invalid': submitted && f.options.errors }\\\" formControlName=\\\"options\\\"\\n          placeholder=\\\"Write Option\\\" class=\\\"form-control\\\" cols=\\\"30\\\" rows=\\\"4\\\"></textarea>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"footer-button-block\\\">\\n      <cancel-btn>Cancel</cancel-btn>\\n      <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n    </div>\\n  </div>\\n</form>\"","export default \"<form [formGroup]=\\\"creatMCQForm\\\">\\n  <div class=\\\"container create-form\\\">\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Title</label-text>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Write Title\\\"\\n          [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" formControlName=\\\"title\\\" />\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Duration</label-text>\\n        <warning-text>(IN SECONDS)</warning-text>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\"\\n          formControlName=\\\"duration\\\" placeholder=\\\"Write Duration\\\" OnlyNumber />\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <file-uploader acceptFile='audio' formControlName=\\\"audioFile\\\"></file-uploader>\\n        <div *ngIf=\\\"submitted && f.audioFile.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.audioFile.errors.required\\\">\\n            You must upload audio file\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Question</label-text>\\n        <textarea [ngClass]=\\\"{ 'is-invalid': submitted && f.question.errors }\\\" formControlName=\\\"question\\\"\\n          placeholder=\\\"Question\\\" class=\\\"form-control\\\" cols=\\\"30\\\" rows=\\\"4\\\"></textarea>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Give Answer</label-text>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.answers.errors }\\\"\\n          formControlName=\\\"answers\\\" placeholder=\\\"Write Answer\\\" />\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Give Options</label-text>\\n        <warning-text>(SEPARATE BY(;))</warning-text>\\n        <textarea [ngClass]=\\\"{ 'is-invalid': submitted && f.options.errors }\\\" formControlName=\\\"options\\\"\\n          placeholder=\\\"Write Option\\\" class=\\\"form-control\\\" cols=\\\"30\\\" rows=\\\"4\\\"></textarea>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"footer-button-block\\\">\\n      <cancel-btn>Cancel</cancel-btn>\\n      <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n    </div>\\n  </div>\\n</form>\"","export default \"<form [formGroup]=\\\"creatMissingWordForm\\\">\\n    <div class=\\\"container create-form\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Title</label-text>\\n          <div class=\\\"d-flex\\\">\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              placeholder=\\\"Write Title\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\"\\n              formControlName=\\\"title\\\"\\n            />\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Duration</label-text>\\n          <warning-text>(IN SECONDS)</warning-text>\\n          <div class=\\\"d-flex\\\">\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\"\\n              formControlName=\\\"duration\\\"\\n              placeholder=\\\"Write Duration\\\"\\n              OnlyNumber\\n            />\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <file-uploader\\n            acceptFile='audio'\\n            formControlName=\\\"audioFile\\\"\\n          ></file-uploader>\\n\\n          <div *ngIf=\\\"submitted && f.audioFile.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.audioFile.errors.required\\\">\\n              You must upload audio file\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Question</label-text>\\n          <div class=\\\"d-flex\\\">\\n            <textarea\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.question.errors }\\\"\\n              formControlName=\\\"question\\\"\\n              placeholder=\\\"Question\\\"\\n              class=\\\"form-control\\\"\\n              cols=\\\"30\\\"\\n              rows=\\\"4\\\"\\n            ></textarea>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Give Single Answer</label-text>\\n          <div class=\\\"d-flex\\\">\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.answer.errors }\\\"\\n              formControlName=\\\"answer\\\"\\n              placeholder=\\\"Write Single Answer\\\"\\n            />\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Give Options</label-text>\\n          <warning-text>(SEPARATE BY(;))</warning-text>\\n          <div class=\\\"d-flex\\\">\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.option.errors }\\\"\\n              formControlName=\\\"option\\\"\\n              placeholder=\\\"Write Option\\\"\\n            />\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"footer-button-block\\\">\\n        <cancel-btn>Cancel</cancel-btn>\\n        <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n      </div>\\n    </div>\\n  </form>\\n\"","export default \"<form [formGroup]=\\\"createSummary\\\" class=\\\"bg-d25 h-100 overLay\\\">\\n\\n    <div class=\\\"container pb-5\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12 mb-2\\\">\\n                <label-text>Summary Name</label-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" formControlName=\\\"name\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\" placeholder=\\\"Write Summary Name\\\" />\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12 mb-2\\\">\\n                <div class=\\\"divider\\\"></div>\\n                <label-text>Summmary Type</label-text>\\n                <select class=\\\"select-box form-control\\\" formControlName=\\\"type\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && f.type.errors }\\\">\\n                    <option value=\\\"\\\" disabled selected hidden>Select Summary Type</option>\\n                    <option *ngFor=\\\"let type of typeList\\\" [ngValue]=\\\"type._id\\\">\\n                        {{ type.name }}\\n                    </option>\\n                </select>\\n            </div>\\n        </div>\\n        <div class=\\\"row mt-2\\\" *ngIf=\\\"!isProgress\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Summary Question</label-text>\\n                <editor [index]=\\\"1\\\" (getData)=\\\"getMarkDownForSummaryQuestion($event)\\\" [data]=\\\"editorDataQestion\\\">\\n                </editor>\\n            </div>\\n        </div>\\n        <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col-md-12 mb-2\\\">\\n                <file-uploader acceptFile='audio' formControlName=\\\"audioFile\\\"></file-uploader>\\n                <div *ngIf=\\\"submitted && f.audioFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.audioFile.errors.required\\\">\\n                        You must upload audio file\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n        <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <label-text>Content Keyword</label-text>\\n                <warning-text>(SEPARATE EACH WORD USING SEMICOLON (;))</warning-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" placeholder=\\\"Write Content Keyword...\\\"\\n                    formControlName=\\\"contentKeywords\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && f.contentKeywords.errors }\\\" />\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <label-text>Vocabulary Word</label-text>\\n                <warning-text>(SEPARATE EACH WORD USING SEMICOLON (;))</warning-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" placeholder=\\\"Write Vocabulary Word...\\\"\\n                    formControlName=\\\"vocabularyWords\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && f.vocabularyWords.errors }\\\" />\\n            </div>\\n        </div>\\n        <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <label-text>Content Keyword Limit</label-text>\\n                <warning-text>(LIMIT TO GET MAXIMUN SCORE)</warning-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" placeholder=\\\"0\\\" OnlyNumber\\n                    formControlName=\\\"maxContentKeywords\\\" [ngClass]=\\\"{\\n              'is-invalid': submitted && f.maxContentKeywords.errors\\n            }\\\" />\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <label-text>Maximum Word Limit</label-text>\\n                <warning-text>(NUMBER OF WORDS STUDENT CAN WRITE)</warning-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" placeholder=\\\"0\\\" OnlyNumber\\n                    formControlName=\\\"maxWordLimit\\\" [ngClass]=\\\"{\\n              'is-invalid': submitted && f.maxWordLimit.errors\\n            }\\\" />\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row mt-2\\\" *ngIf=\\\"!isProgress\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Advise Summary Content</label-text>\\n                <warning-text>(SAMPLE SUMMARY TO GET HIGHEST MARK)</warning-text>\\n                <editor [index]=\\\"2\\\" (getData)=\\\"getMarkDownForAdviseSummary($event)\\\" [data]=\\\"editorDataAdvise\\\"></editor>\\n            </div>\\n        </div>\\n        <div class=\\\"footer-button-block\\\">\\n            <cancel-btn>Cancel</cancel-btn>\\n            <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n        </div>\\n\\n    </div>\\n</form>\"","export default \"<header-route-menu-light [currentPageName]=\\\"currentModule.moduleType\\\"\\n [moduleName]=\\\"questionName\\\">\\n</header-route-menu-light>\\n\\n<ng-container [ngSwitch]=\\\"currentModule.questionType\\\">\\n    <!-- LISTENING -->\\n    <dictation *ngSwitchCase=\\\"'L001'\\\"></dictation>\\n\\n    <fib *ngSwitchCase=\\\"'L002'\\\"></fib>\\n\\n    <highlight-incorrect-words *ngSwitchCase=\\\"'L003'\\\"></highlight-incorrect-words>\\n\\n    <mcq-single-listening *ngSwitchCase=\\\"'L004'\\\"></mcq-single-listening>\\n\\n    <mcq-multiple-listening *ngSwitchCase=\\\"'L005'\\\"></mcq-multiple-listening>\\n\\n    <select-missing-words *ngSwitchCase=\\\"'L006'\\\"></select-missing-words>\\n\\n    <highlight-correct-summary *ngSwitchCase=\\\"'L007'\\\"></highlight-correct-summary>\\n\\n    <summary-spoken-text *ngSwitchCase=\\\"'L008'\\\"></summary-spoken-text>\\n    <!-- READING -->\\n    <reorder-paragraph *ngSwitchCase=\\\"'R001'\\\"></reorder-paragraph>\\n\\n    <fib-drop-down *ngSwitchCase=\\\"'R002'\\\"></fib-drop-down>\\n\\n    <fib-bank *ngSwitchCase=\\\"'R003'\\\"></fib-bank>\\n\\n    <mcq-single *ngSwitchCase=\\\"'R004'\\\"></mcq-single>\\n\\n    <mcq-multiple *ngSwitchCase=\\\"'R005'\\\"></mcq-multiple>\\n\\n    <!--SPEAKING -->\\n    <read-aloud *ngSwitchCase=\\\"'S001'\\\"></read-aloud>\\n\\n    <repeat-sentence *ngSwitchCase=\\\"'S002'\\\"></repeat-sentence>\\n\\n    <describe-image *ngSwitchCase=\\\"'S003'\\\"></describe-image>\\n\\n    <retell-lecture *ngSwitchCase=\\\"'S004'\\\"></retell-lecture>\\n\\n    <answer-short-question *ngSwitchCase=\\\"'S005'\\\"></answer-short-question>\\n\\n    <!-- WRITING -->\\n    <essay-writing *ngSwitchCase=\\\"'W001'\\\"></essay-writing>\\n\\n    <summarize-written-text *ngSwitchCase=\\\"'W002'\\\"></summarize-written-text>\\n</ng-container>\"","export default \"<form [formGroup]=\\\"dragForm\\\">\\n    <div class=\\\"container create-form\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Name</label-text>\\n                <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\" placeholder=\\\"Write Paragraph Name\\\" />\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"!isProgress\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Blank Word Paragraph</label-text>\\n                <warning-text>{{warmingTxt}}</warning-text>\\n                <editor (getData)=\\\"getMarkDown($event)\\\" [data]=\\\"editorData\\\" [index]=\\\"1\\\"></editor>\\n\\n                <div *ngIf=\\\"submitted && f.paragraph.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.paragraph.errors.required\\\">\\n                        You must fill blank word paragraph!\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Give Option</label-text>\\n                <warning-text>(SEPARETED BY “;” )</warning-text>\\n\\n                <input type=\\\"text\\\" formControlName=\\\"options\\\" class=\\\"form-control\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && f.options.errors }\\\" placeholder=\\\"Write Option\\\" />\\n            </div>\\n        </div>\\n        <button-footer>\\n            <cancel-btn>Cancel</cancel-btn>\\n            <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n        </button-footer>\\n    </div>\\n</form>\"","export default \"<form [formGroup]=\\\"dropForm\\\">\\n    <div class=\\\"container create-form\\\">\\n        <div class=\\\"row mb-2\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Name</label-text>\\n                <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\" placeholder=\\\"Write Paragraph Name\\\" />\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\" *ngIf=\\\"!isProgress\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Blank Word Paragraph</label-text>\\n                <warning-text>{{warmingTxt}}</warning-text>\\n                <editor (getData)=\\\"getMarkDown($event)\\\" [data]=\\\"editorData\\\" [index]=\\\"1\\\"></editor>\\n\\n                <div *ngIf=\\\"submitted && f.paragraph.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.paragraph.errors.required\\\">\\n                        You must fill blank word paragraph!\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <button-footer>\\n            <cancel-btn>Cancel</cancel-btn>\\n            <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n          </button-footer>\\n    </div>\\n</form>\\n\"","export default \"<form [formGroup]=\\\"mcqForm\\\">\\n    <div class=\\\"container create-form\\\">\\n        <div class=\\\"row\\\" *ngIf=\\\"!isProgress\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Question</label-text>\\n                <editor (getData)=\\\"getMarkDown($event)\\\" [data]=\\\"editorData\\\" [index]=\\\"1\\\"></editor>\\n                <div *ngIf=\\\"submitted && f.paragraph.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.paragraph.errors.required\\\">\\n                        You must fill question!\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Answer</label-text>\\n                <warning-text>{{warmingTxt}}</warning-text>\\n                <div class=\\\"d-flex\\\">\\n                    <input type=\\\"text\\\" formControlName=\\\"answers\\\" class=\\\"form-control\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.answers.errors }\\\" placeholder=\\\"Write Answer\\\" />\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Option</label-text>\\n                <warning-text>{{warmingTxt}}</warning-text>\\n                <div class=\\\"d-flex\\\">\\n                    <input type=\\\"text\\\" formControlName=\\\"options\\\" class=\\\"form-control\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.options.errors }\\\" placeholder=\\\"Write Options\\\" />\\n                </div>\\n            </div>\\n        </div>\\n\\n        <button-footer>\\n            <cancel-btn>Cancel</cancel-btn>\\n            <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n        </button-footer>\\n    </div>\\n</form>\\n\"","export default \"<form [formGroup]=\\\"mcqForm\\\">\\n    <div class=\\\"container create-form\\\">\\n        <div class=\\\"row\\\" *ngIf=\\\"!isProgress\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Question</label-text>\\n                <editor (getData)=\\\"getMarkDown($event)\\\" [data]=\\\"editorData\\\" [index]=\\\"1\\\"></editor>\\n                <div *ngIf=\\\"submitted && !editorData.innerHTML\\\" class=\\\"invalid-feedback\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && !editorData.innerHTML }\\\">\\n                    <div *ngIf=\\\"!editorData.innerHTML\\\" class=\\\"bold\\\">*Paragraph is required</div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Answer</label-text>\\n                <warning-text>{{warmingTxt}}</warning-text>\\n                <div class=\\\"d-flex\\\">\\n                    <input type=\\\"text\\\" formControlName=\\\"answers\\\" class=\\\"form-control\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.answers.errors }\\\" placeholder=\\\"Write Answer\\\" />\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Option</label-text>\\n                <warning-text>{{warmingTxt}}</warning-text>\\n                <div class=\\\"d-flex\\\">\\n                    <input type=\\\"text\\\" formControlName=\\\"options\\\" class=\\\"form-control\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.options.errors }\\\" placeholder=\\\"Write Options\\\" />\\n                </div>\\n            </div>\\n        </div>\\n\\n        <button-footer>\\n            <cancel-btn>Cancel</cancel-btn>\\n            <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n        </button-footer>\\n    </div>\\n</form>\\n\\n\"","export default \"<form [formGroup]=\\\"createReorderForm\\\">\\n    <div class=\\\"container create-form\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Paragraph Name</label-text>\\n                <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\" placeholder=\\\"Write Paragraph Name\\\" />\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\" *ngIf=\\\"!isProgress\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Paragraph Order</label-text>\\n                <warning-text>(GIVE ORIGINAL ORDER, SEPARTED BY “;”)</warning-text>\\n                <editor (getData)=\\\"getMarkDown($event)\\\" [data]=\\\"editorData\\\"  [index]=\\\"1\\\"></editor>\\n                <div *ngIf=\\\"submitted && !editorData.innerHTML\\\" class=\\\"invalid-feedback\\\"\\n                [ngClass]=\\\"{ 'is-invalid': submitted && !editorData.innerHTML }\\\">\\n                <div *ngIf=\\\"!editorData.innerHTML\\\" class=\\\"bold\\\">*Paragraph is required</div>\\n            </div>\\n            </div>\\n        </div>\\n        <button-footer>\\n            <cancel-btn>Cancel</cancel-btn>\\n            <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n        </button-footer>\\n    </div>\\n</form>\"","export default \"<form [formGroup]=\\\"createansShortForm\\\">\\n    <div class=\\\"container create-form\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Question Title</label-text>\\n          <div class=\\\"d-flex\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" placeholder=\\\"Write Question Title\\\" />\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"!isCreate\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <button class=\\\"btn btn-link demi-bold pl-0\\\" (click)=\\\"isCheckAudio=!isCheckAudio;\\\">\\n            {{isCheckAudio ? 'Hide' : 'View'}}\\n            Exiting Audio</button>\\n          <div class=\\\"audio-box\\\" [ngClass]=\\\"{ 'setheight': isCheckAudio == true}\\\">\\n            <audio-player [audioLink]=\\\"exitaudioLink\\\" *ngIf=\\\"isCheckAudio\\\"></audio-player>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <file-uploader acceptFile='audio' formControlName=\\\"audioFile\\\"></file-uploader>\\n          <div *ngIf=\\\"submitted && f.audioFile.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.audioFile.errors.required\\\">\\n              You must upload audio file!\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <label-text>Duration</label-text>\\n          <warning-text>(DURATION FOR THE CLOCK /TIMER)</warning-text>\\n          <div class=\\\"d-flex\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"duration\\\" class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\" placeholder=\\\"Write Duration\\\" OnlyNumber />\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <label-text>Record Duration</label-text>\\n          <warning-text>(DURATION FOR THE CLOCK /TIMER)</warning-text>\\n          <div class=\\\"d-flex\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"recordDuration\\\" class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.recordDuration.errors }\\\" placeholder=\\\"Write Record Duration\\\"\\n              OnlyNumber />\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row divider\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Answer</label-text>\\n          <div class=\\\"d-flex\\\">\\n            <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" [ngClass]=\\\"{\\n              'is-invalid': submitted && f.answer.errors\\n            }\\\" formControlName=\\\"answer\\\" placeholder=\\\"Write Answer\\\"></textarea>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Content Score</label-text>\\n          <div class=\\\"d-flex\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"contentScore\\\" class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.contentScore.errors }\\\" placeholder=\\\"Write Content Score\\\"\\n              NumWithSpecialChar />\\n          </div>\\n        </div>\\n      </div>\\n      <button-footer>\\n        <cancel-btn>Cancel</cancel-btn>\\n        <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n      </button-footer>\\n    </div>\\n  </form>\\n\"","export default \"<form [formGroup]=\\\"createDescribeForm\\\">\\n\\n  <div class=\\\"container create-form\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12 mb-4\\\">\\n        <label-text>Question Title</label-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" placeholder=\\\"Write Question Title\\\" />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <file-uploader acceptFile='image' formControlName=\\\"imageFile\\\"></file-uploader>\\n        <div *ngIf=\\\"submitted && f.imageFile.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.imageFile.errors.required\\\">\\n            You must upload image!\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <label-text>Duration</label-text>\\n        <warning-text>(DURATION FOR THE CLOCK /TIMER)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"duration\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\" placeholder=\\\"Write Duration\\\" OnlyNumber />\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <label-text>Record Duration</label-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"recordDuration\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.recordDuration.errors }\\\" placeholder=\\\"Write Record Duration\\\"\\n            OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Number Of Keyword Match</label-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"keywordMatch\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.keywordMatch.errors }\\\" placeholder=\\\"Write Number Of Keyword Match\\\"\\n            OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Keywords</label-text>\\n        <warning-text>(PLEASE SEPARATE USING \\\";\\\")</warning-text>\\n        <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" formControlName=\\\"keywords\\\" [ngClass]=\\\"{\\n              'is-invalid': submitted && f.keywords.errors\\n            }\\\" placeholder=\\\"Write Keywords\\\"></textarea>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Fluency Grace</label-text>\\n        <warning-text>(GRACE NUMBER FOR FLUENCY)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"fluentGrade\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.fluentGrade.errors }\\\" placeholder=\\\"Write Fluency Grace\\\" OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Pronounciation Grace</label-text>\\n        <warning-text>(GRACE NUMBER FOR PRONUNCIATION)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"pronounciationGrade\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.pronounciationGrade.errors }\\\"\\n            placeholder=\\\"Write Pronunciation Grace\\\" OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Simple Answer</label-text>\\n        <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" formControlName=\\\"sampleAnswer\\\" [ngClass]=\\\"{\\n              'is-invalid': submitted && f.keywords.errors\\n            }\\\" placeholder=\\\"Write Simple Answer\\\"></textarea>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Content Score</label-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"contentScore\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.contentScore.errors }\\\" placeholder=\\\"Write Content Score\\\"\\n            NumWithSpecialChar />\\n        </div>\\n      </div>\\n    </div>\\n    <button-footer>\\n      <cancel-btn>Cancel</cancel-btn>\\n      <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n    </button-footer>\\n  </div>\\n</form>\"","export default \"<form [formGroup]=\\\"createReadAloudForm\\\">\\n    <div class=\\\"container create-form\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <label-text>Question Title</label-text>\\n          <div class=\\\"d-flex\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" placeholder=\\\"Write Question title\\\" />\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row divider\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <label-text>Question Paragraph</label-text>\\n          <warning-text>(WRITE WHAT YOU WANT THIS STUDENT TO SPEAK)</warning-text>\\n          <textarea class=\\\"form-control\\\" cols=\\\"30\\\" rows=\\\"4\\\" formControlName=\\\"paragraph\\\"\\n            [ngClass]=\\\"{\\n              'is-invalid': submitted && f.paragraph.errors\\n            }\\\" placeholder=\\\"Write Question Paragraph\\\"></textarea>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row divider\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <label-text>Count Max</label-text>\\n          <warning-text>(COUNT THAT WILL BE CHECKED TO GIVE MAX MARK)</warning-text>\\n          <div class=\\\"d-flex\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"countMax\\\" class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.countMax.errors }\\\" placeholder=\\\"Write Count Max\\\" OnlyNumber />\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row divider\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <label-text>Duration</label-text>\\n          <warning-text>(DURATION FOR THE CLOCK/TIMER)</warning-text>\\n          <div class=\\\"d-flex\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"duration\\\" class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\" placeholder=\\\"Write Duration\\\" OnlyNumber />\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row divider\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <label-text>Record Duration</label-text>\\n          <warning-text>(Record DURATION FOR THE CLOCK/TIMER)</warning-text>\\n          <div class=\\\"d-flex\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"recordDuration\\\" class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.recordDuration.errors }\\\" placeholder=\\\"Write Record Duration\\\"\\n              OnlyNumber />\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row divider\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <label-text>Fluency Grace</label-text>\\n          <warning-text>(GRACE NUMBER FOR FLUENCY)</warning-text>\\n          <div class=\\\"d-flex\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"fluencyGrace\\\" class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.fluencyGrace.errors }\\\" placeholder=\\\"Write Fluency Grace\\\"\\n              OnlyNumber/>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row divider\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <label-text>Pronunciation Grace</label-text>\\n          <warning-text>(GRACE NUMBER FOR PRONUNCIATION)</warning-text>\\n          <div class=\\\"d-flex\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"pronunciationGrace\\\" class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.pronunciationGrace.errors }\\\"\\n              placeholder=\\\"Write Pronunciation Grace\\\" OnlyNumber />\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Content Score</label-text>\\n          <div class=\\\"d-flex\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"contentScore\\\" class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.contentScore.errors }\\\"\\n              placeholder=\\\"Write Content Score\\\"  NumWithSpecialChar/>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div class=\\\"row divider\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <word-checker [wordGroup]='createReadAloudForm' [submitted]=\\\"submitted\\\" [wordsArray]=\\\"words\\\"></word-checker>\\n        </div>\\n      </div> -->\\n      <button-footer>\\n        <cancel-btn>Cancel</cancel-btn>\\n        <submit-btn (onClick)=\\\"onSave()\\\">Save</submit-btn>\\n      </button-footer>\\n    </div>\\n  </form>\\n\"","export default \"<form [formGroup]=\\\"createRepeatSentenceForm\\\">\\n  <div class=\\\"container create-form\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Question Title</label-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" placeholder=\\\"Write Question title\\\" />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <file-uploader acceptFile='audio' formControlName=\\\"audioFile\\\"></file-uploader>\\n        <div *ngIf=\\\"submitted && f.audioFile.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.audioFile.errors.required\\\">\\n            You must upload audio file\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Question Paragraph</label-text>\\n        <warning-text>(WRITE WHAT YOU WANT THIS STUDENT TO SPEAK)</warning-text>\\n        <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" formControlName=\\\"paragraph\\\"\\n          [ngClass]=\\\"{\\n              'is-invalid': submitted && f.paragraph.errors\\n            }\\\" placeholder=\\\"Write Question Paragraph\\\"></textarea>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Count Max</label-text>\\n        <warning-text>(COUNT THAT WILL BE CHECKED TO GIVE MAX MARK)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"countMax\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.countMax.errors }\\\" placeholder=\\\"Write Count Max\\\" oninput=\\\"this.value = this.value.replace(/[^0-9.]/g,\\n            '').replace(/(\\\\..*)\\\\./g, '$1');\\\" />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Duration</label-text>\\n        <warning-text>(DURATION FOR THE CLOCK/TIMER)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"duration\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\" placeholder=\\\"Write Duration\\\" OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Record Duration</label-text>\\n        <warning-text>(Record DURATION FOR THE CLOCK/TIMER)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"recordDuration\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.recordDuration.errors }\\\" placeholder=\\\"Write Record Duration\\\"\\n            OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Fluency Grace</label-text>\\n        <warning-text>(GRACE NUMBER FOR FLUENCY)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"fluencyGrace\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.fluencyGrace.errors }\\\" placeholder=\\\"Write Fluency Grace\\\" OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Pronunciation Grace</label-text>\\n        <warning-text>(GRACE NUMBER FOR PRONUNCIATION)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"pronunciationGrace\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.pronunciationGrace.errors }\\\"\\n            placeholder=\\\"Write Pronunciation Grace\\\" OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Content Score</label-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"contentScore\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.contentScore.errors }\\\"\\n            placeholder=\\\"Write Content Score\\\"  NumWithSpecialChar/>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <word-checker [wordGroup]='createRepeatSentenceForm' [submitted]=\\\"submitted\\\" [wordsArray]=\\\"words\\\"\\n          [isCreate]=\\\"isCreate\\\"></word-checker>\\n      </div>\\n    </div> -->\\n\\n    <button-footer>\\n      <cancel-btn>Cancel</cancel-btn>\\n      <submit-btn (onClick)=\\\"onSave()\\\">Save</submit-btn>\\n    </button-footer>\\n  </div>\\n</form>\"","export default \"<form [formGroup]=\\\"createRetellLectureForm\\\">\\n  <div class=\\\"container create-form\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Question Title</label-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\"\\n            [class.is-invalid]=\\\"submitted && f.title.errors \\\" placeholder=\\\"Write Question title\\\" />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <file-uploader acceptFile='audio' formControlName=\\\"audioFile\\\"></file-uploader>\\n        <div *ngIf=\\\"submitted && f.audioFile.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.audioFile.errors.required\\\">\\n            You must upload audio file\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Keywords</label-text>\\n        <warning-text>(WRITE KEYWORDS HERE, SEPARATE USING \\\";\\\")</warning-text>\\n        <textarea class=\\\"form-control input-rectangle\\\" cols=\\\"30\\\" rows=\\\"4\\\" formControlName=\\\"keywords\\\" [ngClass]=\\\"{\\n              'is-invalid': submitted && f.keywords.errors\\n            }\\\" placeholder=\\\"Write Keywords\\\"></textarea>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Count Max</label-text>\\n        <warning-text>(COUNT THAT WILL BE CHECKED TO GIVE MAX MARK)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"countMax\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.countMax.errors }\\\" placeholder=\\\"Write Count Max\\\" OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12 mb-2\\\">\\n        <label-text>Duration</label-text>\\n        <warning-text>(DURATION FOR THE CLOCK/TIMER)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"duration\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\" placeholder=\\\"Write Duration\\\" OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Record Duration</label-text>\\n        <warning-text>(Record DURATION FOR THE CLOCK/TIMER)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"recordDuration\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.recordDuration.errors }\\\" placeholder=\\\"Write Record Duration\\\"\\n            OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Fluency Grace</label-text>\\n        <warning-text>(GRACE NUMBER FOR FLUENCY)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"fluencyGrace\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.fluencyGrace.errors }\\\" placeholder=\\\"Write Fluency Grace\\\"\\n            OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Pronunciation Grace</label-text>\\n        <warning-text>(GRACE NUMBER FOR PRONUNCIATION)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"pronunciationGrace\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.pronunciationGrace.errors }\\\"\\n            placeholder=\\\"Write Pronunciation Grace\\\" OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Content Score</label-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"contentScore\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.contentScore.errors }\\\" placeholder=\\\"Write Content Score\\\"\\n            NumWithSpecialChar />\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Words To Check</label-text>\\n        <warning-text>(SEPARETED BY “;” )</warning-text>\\n        <textarea formControlName=\\\"words\\\" class=\\\"form-control\\\" rows=\\\"4\\\"\\n          [ngClass]=\\\"{ 'is-invalid': submitted && f.words.errors }\\\" placeholder=\\\"Write word to check\\\"></textarea>\\n      </div>\\n    </div>\\n\\n    <button-footer>\\n      <cancel-btn>Cancel</cancel-btn>\\n      <submit-btn (onClick)=\\\"onSave()\\\">Save</submit-btn>\\n    </button-footer>\\n\\n  </div>\\n</form>\"","export default \"<div>\\n  <label-text>Words To Check</label-text>\\n  <dialog-box *ngIf=\\\"isDialog\\\" [dialogEntry]=\\\"dialog\\\" (onconfirm)=\\\"onSubmit($event)\\\"></dialog-box>\\n  <form [formGroup]=\\\"wordGroup\\\">\\n    <table>\\n      <thead>\\n        <td>\\n          <label class='demi-bold h4-m'>Word Name</label>    \\n        </td>\\n        <td class=\\\"hide\\\"></td>\\n      </thead>    \\n\\n      <tbody>\\n        <ng-container formArrayName=\\\"words\\\" *ngFor=\\\"let group of getFormControls.controls; let i=index\\\">\\n          <tr [formGroupName]=\\\"i\\\">\\n            <td>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                placeholder=\\\"Write Word Name\\\"\\n                formControlName=\\\"word\\\"\\n                [ngClass]=\\\"{ 'is-invalid': submitted && getFormControls.controls[i].get('word').errors?.required }\\\"\\n              />\\n            </td>\\n            <td *ngIf=\\\"group.get('isDeleteAble').value\\\" class=\\\"del\\\">\\n              <a\\n                class=\\\"btn\\\"\\n                (click)=\\\"onDelete(i)\\\"\\n              ><i class=\\\"del-icon fa fa-trash\\\"></i></a>\\n            </td>\\n          </tr>\\n        </ng-container>\\n      </tbody>\\n    </table>\\n\\n    <div class=\\\"add\\\">\\n      <a\\n        class=\\\"btn\\\"\\n        (click)=\\\"onAdd()\\\"\\n      ><i class=\\\"fa fa-plus\\\"></i> Add</a>\\n    </div>\\n\\n  </form>\\n\\n\\n</div>\\n\"","export default \"<form [formGroup]=\\\"createEssayForm\\\">\\n    <div class=\\\"container create-form\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Questions</label-text>\\n          <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\" placeholder=\\\"Write Questions\\\" />\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\" formGroupName=\\\"answer\\\">\\n          <group-title>Essay</group-title>\\n          <label-text>Content Keyword</label-text>\\n          <warning-text>(THIS WILL LIMIT THE MAXIMUM NUMBER OF WORDS)</warning-text>\\n          <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" [ngClass]=\\\"{\\n              'is-invalid':\\n                submitted && f.answer.controls.contentKeywords.errors\\n            }\\\" formControlName=\\\"contentKeywords\\\" placeholder=\\\"Write Content Keyword\\\"></textarea>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" formGroupName=\\\"answer\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <label-text>Introduction Word Limit</label-text>\\n          <warning-text>(THIS WILL LIMIT THE MAXIMUM NUMBER OF WORDS)</warning-text>\\n          <input type=\\\"text\\\" formControlName=\\\"maxWordLimit\\\" class=\\\"form-control\\\" placeholder=\\\"0\\\"\\n          OnlyNumber [ngClass]=\\\"{\\n              'is-invalid':\\n                submitted && f.answer.controls.maxWordLimit.errors\\n            }\\\" />\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <label-text>Maximum Keyword match</label-text>\\n          <warning-text>(TO GET FULL MARKS)</warning-text>\\n          <input type=\\\"text\\\" formControlName=\\\"maxKeyword\\\" class=\\\"form-control\\\" placeholder=\\\"0\\\"\\n            [ngClass]=\\\"{\\n              'is-invalid':\\n                submitted && f.answer.controls.maxKeyword.errors\\n            }\\\" OnlyNumber />\\n        </div>\\n      </div>\\n  \\n\\n      <div class=\\\"row\\\" *ngIf=\\\"!isProgress\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Advise Essay Content</label-text>\\n          <warning-text>(SAMPLE ESSAY TO GET HIGHEST MARKS)</warning-text>\\n          <editor (getData)=\\\"getMarkDown($event)\\\" [data]=\\\"editorData\\\" [index]=\\\"1\\\"></editor>\\n          <div *ngIf=\\\"submitted && f.adviseContent.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.adviseContent.errors.required\\\">\\n              You must fill advise essay content!\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <button-footer>\\n        <cancel-btn>Cancel</cancel-btn>\\n        <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n    </button-footer>\\n    </div>\\n  </form>\\n\"","export default \"<form [formGroup]=\\\"createSummary\\\">\\n    <div class=\\\"container create-form\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Summary Name</label-text>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"name\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\"\\n            placeholder=\\\"Write Summary Name\\\"\\n          />\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"divider\\\"></div>\\n          <label-text>Summmary Type</label-text>\\n          <select\\n            class=\\\"select-box form-control\\\"\\n            formControlName=\\\"type\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.type.errors }\\\"\\n          >\\n            <option value=\\\"\\\" disabled selected hidden\\n              >Select Summary Type</option\\n            >\\n            <option *ngFor=\\\"let type of typeList\\\" [ngValue]=\\\"type._id\\\">\\n              {{ type.name }}\\n            </option>\\n          </select>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"!isProgress\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Summary Question</label-text>\\n          <editor\\n            (getData)=\\\"getMarkDownForSummaryQuestion($event)\\\"\\n            [data]=\\\"editorDataQestion\\\"\\n            [index]=\\\"1\\\"\\n          ></editor>\\n          <div *ngIf=\\\"submitted && f.question.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.question.errors.required\\\">\\n              You must fill summary question!\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <label-text>Content Keyword</label-text>\\n          <warning-text>(SEPARATE EACH WORD USING SEMICOLON (;))</warning-text>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            placeholder=\\\"Write Content Keyword...\\\"\\n            formControlName=\\\"contentKeywords\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.contentKeywords.errors }\\\"\\n          />\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <label-text>Vocabulary Word</label-text>\\n          <warning-text>(SEPARATE EACH WORD USING SEMICOLON (;))</warning-text>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            placeholder=\\\"Write Vocabulary Word...\\\"\\n            formControlName=\\\"vocabularyWords\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.vocabularyWords.errors }\\\"\\n          />\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <label-text>Content Keyword Limit</label-text>\\n          <warning-text>(LIMIT TO GET MAXIMUN SCORE)</warning-text>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            placeholder=\\\"0\\\"\\n            oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\"\\n            formControlName=\\\"maxContentKeywords\\\"\\n            [ngClass]=\\\"{\\n              'is-invalid': submitted && f.maxContentKeywords.errors\\n            }\\\"\\n          />\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <label-text>Maximum Word Limit</label-text>\\n          <warning-text>(NUMBER OF WORDS STUDENT CAN WRITE)</warning-text>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            placeholder=\\\"0\\\"\\n            oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\"\\n            formControlName=\\\"maxWordLimit\\\"\\n            [ngClass]=\\\"{\\n              'is-invalid': submitted && f.maxWordLimit.errors\\n            }\\\"\\n          />\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <label-text>Vocabulary Keyword Limit</label-text>\\n          <warning-text>(LIMIT TO GET MAXIMUN SCORE)</warning-text>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            placeholder=\\\"0\\\"\\n            oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\"\\n            formControlName=\\\"maxVocabularyWords\\\"\\n            [ngClass]=\\\"{\\n              'is-invalid': submitted && f.maxVocabularyWords.errors\\n            }\\\"\\n          />\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <label-text>Unwanted Content Keywords</label-text>\\n          <warning-text>(SEPARATE EACH WORD USING SEMICOLON (;))</warning-text>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            placeholder=\\\"0\\\"\\n            formControlName=\\\"unwantedContentKeywords\\\"\\n            [ngClass]=\\\"{\\n              'is-invalid': submitted && f.unwantedContentKeywords.errors\\n            }\\\"\\n          />\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"!isProgress\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Advise Summary Content</label-text>\\n          <warning-text>(SAMPLE SUMMARY TO GET HIGHEST MARK)</warning-text>\\n          <editor\\n            (getData)=\\\"getMarkDownForAdviseSummary($event)\\\"\\n            [data]=\\\"editorDataAdvise\\\"\\n            [index]=\\\"2\\\"\\n          ></editor>\\n          <div *ngIf=\\\"submitted && f.adviseContent.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.adviseContent.errors.required\\\">\\n              You must fill advise summary content!\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <button-footer>\\n        <cancel-btn>Cancel</cancel-btn>\\n        <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n    </button-footer>\\n    </div>\\n  </form>\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL2xpc3RlbmluZy9kaWN0YXRpb24vZGljdGF0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { SaveService, CommonService } from '@app/core/http/serviceIndex';\nimport { Dictation } from '@app/shared/models/ListeningModel';\n\n\n@Component({\n  selector: 'dictation',\n  templateUrl: './dictation.component.html',\n  styleUrls: ['./dictation.component.css']\n})\nexport class DictationComponent implements OnInit {\n\n  createDictionForm: FormGroup = this.formBuilder.group({\n    title: [\"\", [Validators.required]],\n    duration: [0, [Validators.required]],\n    answer: [\"\", [Validators.required]],\n    audioFile:[null,Validators.required]\n  });\n\n  private questionCode: string;\n  private questionId: string;\n\n  public audioFile: File;\n  public answerWarningText: string =\n    '(WRITE THE SENTENCE EXACTLY YOU WANT FROM THE STUDENT)';\n  public isErrText: string = 'You must upload audio file';\n\n  private subscription: Subscription;\n  // boolean\n  public submitted: boolean = false;\n  isToast: boolean = false;\n\n  constructor(\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService: SaveService,\n  ) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n  }\n\n\n  getDataEditForm(data: Dictation) {\n    this.questionId = data.questionId;\n    this.createDictionForm = this.formBuilder.group({\n      title: [data.title, [Validators.required]],\n      duration: [data.duration, [Validators.required]],\n      answer: [data.answer, [Validators.required]],\n      audioFile:[null]\n    });\n\n  }\n\n  get f() {\n    return this.createDictionForm.controls;\n  }\n\n  getAudioFile(e) {\n    this.audioFile = e;\n  }\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  onCreate() {\n    this.submitted = true;\n    if (this.createDictionForm.invalid) {\n      return;\n    } else {\n      this.subscription = this._createService.onSaveDictation(this.createDictionForm.value, this.questionCode, this.questionId).subscribe(\n        () => {\n          this.goBack();\n        });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL2xpc3RlbmluZy9maWIvZmliLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/serviceIndex';\nimport { FIB } from '@app/shared/models/ListeningModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'fib',\n  templateUrl: './fib.component.html',\n  styleUrls: ['./fib.component.css']\n})\nexport class FibComponent implements OnInit {\n\n  private questionCode: string;\n  private questionId: string;\n\n  public creatFIBForm: FormGroup = this.formBuilder.group({\n    title: [\"\", [Validators.required]],\n    duration: [\"\", [Validators.required]],\n    paragraph: [\"\", [Validators.required]],\n    audioFile: [null, [Validators.required]],\n  });\n\n  public isErrText: string = \"You must upload audio file\";\n\n  // boolean\n  public submitted: boolean = false;\n  isToast: boolean = false;\n  public answerWarningText: string =\n    '(GIVE ANSWER IN {} EX; \"THIS IS A {PARAGRAPH}.IT HAS .. \")';\n\n  private subscription: Subscription;\n\n  constructor(\n    private _createService: SaveService,\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n  ) { }\n\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n\n  }\n\n  getDataEditForm(data: FIB) {\n    this.questionId = data.questionId;\n    this.creatFIBForm = this.formBuilder.group({\n      title: [data.title, [Validators.required]],\n      duration: [data.duration, [Validators.required]],\n      paragraph: [data.paragraph, [Validators.required]],\n      audioFile: [null],\n    });\n\n  }\n\n  get f() {\n    return this.creatFIBForm.controls;\n  }\n\n\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  onCreate() {\n    this.submitted = true;\n    if (this.creatFIBForm.invalid) {\n      return;\n    } else {\n\n      this._createService.onSaveFIB(this.creatFIBForm.value, this.questionCode, this.questionId).subscribe(\n        (res) => {\n          this.goBack();\n        });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL2xpc3RlbmluZy9oaWdobGlnaHQtY29ycmVjdC1zdW1tYXJ5L2hpZ2hsaWdodC1jb3JyZWN0LXN1bW1hcnkuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/serviceIndex';\nimport { HighlightCorrectSummary } from '@app/shared/models/ListeningModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'highlight-correct-summary',\n  templateUrl: './highlight-correct-summary.component.html',\n  styleUrls: ['./highlight-correct-summary.component.css']\n})\nexport class HighlightCorrectSummaryComponent implements OnInit {\n  private questionCode: string;\n  private questionId: string;\n  // boolean\n  public submitted: boolean = false;\n  public isToast: boolean = false\n\n  public createCorrectSummaryForm: FormGroup = this.formBuilder.group(\n    {\n      title: [\"\", [Validators.required]],\n      duration: [\"\", [Validators.required]],\n      question: [\"\", [Validators.required]],\n      answer: [\"\", [Validators.required]],\n      options: [\"\", [Validators.required]],\n      audioFile: [null, [Validators.required]]\n    }\n  );\n\n  // any\n  public answerWarningText: String = \"(GIVE INCORRECT WORDS IN {} IN EX;\\\"THIS IS A {WORDPARAGRAPH}.IT HAS...\\\"\";\n  public isErrText: string = 'You must upload audio file!';\n  private subscription: Subscription;\n\n  constructor(private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService: SaveService) {\n\n  }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n\n  }\n\n  getDataEditForm(data: HighlightCorrectSummary) {\n    this.questionId = data.questionId;\n    this.createCorrectSummaryForm = this.formBuilder.group(\n      {\n        title: [data.title, [Validators.required]],\n        duration: [data.duration, [Validators.required]],\n        question: [data.question, [Validators.required]],\n        answer: [data.answer, [Validators.required]],\n        options: [data.options, [Validators.required]],\n        audioFile: [null]\n      }\n    );\n\n  }\n\n  get f() {\n    return this.createCorrectSummaryForm.controls;\n  }\n  \n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  onCreate() {\n    this.submitted = true;\n    if (this.createCorrectSummaryForm.invalid) {\n      return\n    }\n    this.subscription = this._createService.onSaveHighlightCorrectSummary(\n      this.createCorrectSummaryForm.value, this.questionCode, this.questionId\n    ).subscribe(\n      () => {\n        this.goBack();\n      })\n\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL2xpc3RlbmluZy9oaWdobGlnaHQtaW5jb3JyZWN0LXdvcmRzL2hpZ2hsaWdodC1pbmNvcnJlY3Qtd29yZHMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/serviceIndex';\nimport { HighlightIncorrectWord } from '@app/shared/models/ListeningModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'highlight-incorrect-words',\n  templateUrl: './highlight-incorrect-words.component.html',\n  styleUrls: ['./highlight-incorrect-words.component.css']\n})\nexport class HighlightIncorrectWordsComponent implements OnInit {\n  private questionCode: string;\n  private questionId:string;\n\n  // boolean\n  public submitted: boolean = false;\n public isToast: boolean = false;\n\n  public createIncorrectWordForm: FormGroup = this.formBuilder.group(\n    {\n      title: [\"\", [Validators.required]],\n      duration: [\"\", [Validators.required]],\n      paragraph: [\"\", [Validators.required]],\n      audioFile: [null, [Validators.required]],\n    }\n  );\n\n  // any\n  public answerWarningText: string = \"(GIVE INCORRECT WORDS IN {} IN EX;\\\"THIS IS A {WORDPARAGRAPH}.IT HAS...\\\")\";\n  isErrText: string = 'You must upload audio file!';\n  public subscription: Subscription;\n\n  constructor(private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder, private _createService: SaveService) {\n\n  }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n\n  }\n\n  getDataEditForm(data: HighlightIncorrectWord) {\n    this.questionId = data.questionId;\n    this.createIncorrectWordForm =this.formBuilder.group(\n      {\n        title: [data.title, [Validators.required]],\n        duration: [data.duration, [Validators.required]],\n        paragraph: [data.paragraph, [Validators.required]],\n        audioFile: [null],\n      }\n    );\n\n  }\n\n  get f() {\n    return this.createIncorrectWordForm.controls;\n  }\n\n\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  onCreate() {\n    this.submitted = true;\n    if (this.createIncorrectWordForm.invalid) {\n      return\n    }else{\n      this.subscription == this._createService.onSaveHighlightIncorrectWord(this.createIncorrectWordForm.value, this.questionCode,this.questionId).subscribe(\n        (res) => {\n          this.goBack();\n        })\n    }\n \n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL2xpc3RlbmluZy9tY3EtbXVsdGlwbGUvbWNxLW11bHRpcGxlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/serviceIndex';\nimport { MCQ } from '@app/shared/models/ListeningModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'mcq-multiple-listening',\n  templateUrl: './mcq-multiple.component.html',\n  styleUrls: ['./mcq-multiple.component.css']\n})\nexport class McqMultipleListeningComponent implements OnInit {\n  private questionId:string;\n\n  public creatMCQForm: FormGroup = this.formBuilder.group({\n    title: [\"\", [Validators.required]],\n    duration: [\"\", [Validators.required]],\n    question: [\"\", [Validators.required]],\n    answers: [\"\", [Validators.required]],\n    options: [\"\", [Validators.required]],\n    audioFile:[null,Validators.required]\n  });\n\n  public questionCode: string;\n  \n  // boolean\n  public submitted: boolean = false;\n\n  isToast: boolean = false\n\n  private subscription: Subscription;\n\n  constructor(\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService: SaveService\n  ) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n\n  }\n\n\n  getDataEditForm(data: MCQ) {\n    this.questionId = data.questionId;\n    this.creatMCQForm= this.formBuilder.group({\n      title: [data.title, [Validators.required]],\n      duration: [data.duration, [Validators.required]],\n      question: [data.question, [Validators.required]],\n      answers: [data.answers, [Validators.required]],\n      options: [data.options, [Validators.required]],\n      audioFile:[null]\n    });\n\n  }\n\n\n\n\n  onCreate() {\n    this.submitted = true;\n    if (this.creatMCQForm.invalid) {\n      return;\n    } else {\n      this.subscription = this._createService.onSaveMCQMultiple(this.creatMCQForm.value, this.questionCode,this.questionId).subscribe(\n        () => {\n          this.goBack();\n        });\n    }\n  }\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  get f() {\n    return this.creatMCQForm.controls;\n  }\n\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL2xpc3RlbmluZy9tY3Etc2luZ2xlL21jcS1zaW5nbGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {  SaveService } from '@app/core/http/serviceIndex';\nimport { MCQ } from '@app/shared/models/ListeningModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'mcq-single-listening',\n  templateUrl: './mcq-single.component.html',\n  styleUrls: ['./mcq-single.component.css']\n})\n\nexport class McqSingleListeningComponent implements OnInit {\n  private questionCode: string;\n  private questionId:string;\n\n  public creatMCQForm: FormGroup = this.formBuilder.group({\n    title: [\"\", [Validators.required]],\n    duration: [\"\", [Validators.required]],\n    question: [\"\", [Validators.required]],\n    answers: [\"\", [Validators.required]],\n    options: [\"\", [Validators.required]],\n    audioFile:[null,Validators.required]\n  });\n\n\n  // boolean\n  public submitted: boolean = false;\n\n  public subscription: Subscription;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private _activeRoute: ActivatedRoute,\n    private _createService: SaveService\n  ) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n\n  }\n\n  getDataEditForm(data: MCQ) {\n    this.questionId = data.questionId;\n    this.creatMCQForm= this.formBuilder.group({\n      title: [data.title, [Validators.required]],\n      duration: [data.duration, [Validators.required]],\n      question: [data.question, [Validators.required]],\n      answers: [data.answers, [Validators.required]],\n      options: [data.options, [Validators.required]],\n      audioFile:[null]\n    });\n\n  }\n\n\n  onCreate() {\n    this.submitted = true;\n\n    if (this.creatMCQForm.invalid) {\n      return;\n    } else {\n      this.subscription = this._createService.onSaveMCQSingle(this.creatMCQForm.value, this.questionCode,this.questionId).subscribe(\n        () => {\n          this.goBack();\n        });\n    }\n  }\n\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  get f() {\n    return this.creatMCQForm.controls;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL2xpc3RlbmluZy9zZWxlY3QtbWlzc2luZy13b3Jkcy9zZWxlY3QtbWlzc2luZy13b3Jkcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/save.service';\nimport { SelectMissingWords } from '@app/shared/models/ListeningModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'select-missing-words',\n  templateUrl: './select-missing-words.component.html',\n  styleUrls: ['./select-missing-words.component.css']\n})\nexport class SelectMissingWordsComponent implements OnInit {\n  private questionCode: string;\n  private questionId:string;\n\n  public creatMissingWordForm: FormGroup = this.formBuilder.group({\n    title: [\"\", [Validators.required]],\n    duration: [\"\", [Validators.required]],\n    question: [\"\", [Validators.required]],\n    answer: [\"\", [Validators.required]],\n    option: [\"\", [Validators.required]],\n    audioFile:[null,Validators.required]\n  });\n\n  isErrText: string = '';\n\n  // boolean\n  public submitted: boolean = false;\n  isToast: boolean = false;\n\n  public subscription: Subscription;\n\n  constructor(\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService: SaveService\n  ) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n\n  }\n\n  getDataEditForm(data:SelectMissingWords){\n    this.questionId = data.questionId;\n\n    this.creatMissingWordForm=this.formBuilder.group({\n      title: [data.title, [Validators.required]],\n      duration: [data.duration, [Validators.required]],\n      question: [data.question, [Validators.required]],\n      answer: [data.answer, [Validators.required]],\n      option: [data.options, [Validators.required]],\n      audioFile:[null]\n    });\n  }\n  get f() {\n    return this.creatMissingWordForm.controls;\n  }\n\n\n\n  goBack() {\n   this._createService.goBackPrev();\n  }\n\n\n\n  onCreate() {\n    this.submitted = true;\n    if (this.creatMissingWordForm.invalid) {\n      return;\n    } else {\n      this.subscription = this._createService.OnSaveMissingWords(this.creatMissingWordForm.value, this.questionCode,this.questionId).subscribe(\n        (res) => {\n          this.goBack();\n        });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL2xpc3RlbmluZy9zdW1tYXJ5LXNwb2tlbi10ZXh0L3N1bW1hcnktc3Bva2VuLXRleHQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/save.service';\nimport { SummaryListening } from '@app/shared/models/ListeningModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'summary-spoken-text',\n  templateUrl: './summary-spoken-text.component.html',\n  styleUrls: ['./summary-spoken-text.component.css'],\n  \n})\nexport class SummarySpokenTextComponent implements OnInit {\n\n  createSummary: FormGroup = this.formBuilder.group({\n    name: [\"\", [Validators.required]],\n    type: [\"\", [Validators.required]],\n    question: [\"\", [Validators.required]],\n    contentKeywords: [\"\", [Validators.required]],\n    vocabularyWords: [\"\", [Validators.required]],\n    maxContentKeywords: [\"\", [Validators.required]],\n    adviseContent: [\"\", [Validators.required]],\n    maxWordLimit: [\"\", [Validators.required]],\n    audioFile: [null, Validators.required]\n  });\n\n  // any\n  isErrText: String = null;\n  public summaryId: any;\n  public editorDataQestion: any = \"\";\n  public editorDataAdvise: any = \"\";\n  // boolean\n  public submitted: boolean = false;\n  public isProgress: boolean = false;\n  public isTouchQuestion: boolean = false;\n  public isTouchAdvise: boolean = false;\n  isToast: boolean = false;\n  public subscription: Subscription;\n  public questionCode: string;\n\n  public typeList: any = [\n    {\n      _id: \"SPOKEN\",\n      name: \"SPOKEN\",\n    },\n  ];\n  constructor(\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private dataService: SaveService,\n  ) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n  }\n\n  getDataEditForm(data:SummaryListening){\n    this.summaryId = data.questionId;\n    this.createSummary=this.formBuilder.group({\n      name: [data.name, [Validators.required]],\n      type: [data.type, [Validators.required]],\n      question: [data.question, [Validators.required]],\n      contentKeywords: [data.contentKeywords, [Validators.required]],\n      vocabularyWords: [data.vocabularyWords, [Validators.required]],\n      maxContentKeywords: [data.maxContentKeywords, [Validators.required]],\n      adviseContent: [data.adviseContent, [Validators.required]],\n      maxWordLimit: [data.maxWordLimit, [Validators.required]],\n      audioFile: [null]\n    });\n    this.editorDataQestion=data.question;\n    this.editorDataAdvise=data.adviseContent;\n  }\n\n  get f() {\n    return this.createSummary.controls;\n  }\n  getMarkDownForSummaryQuestion(e) {\n    this.editorDataQestion = e;\n    this.isTouchQuestion = true;\n    this.createSummary.get('question').setValue(e.innerHTML);\n  }\n  getMarkDownForAdviseSummary(e) {\n    this.editorDataAdvise = e;\n    this.isTouchAdvise = true;\n    this.createSummary.get('adviseContent').setValue(e.innerHTML);\n\n  }\n  onCreate() {\n    this.submitted = true;\n    if (this.createSummary.invalid) {\n      this.isProgress = false;\n      return;\n    } else {\n      this.subscription = this.dataService.OnSaveSummarySpokenText(this.createSummary.value, this.questionCode, this.summaryId).subscribe(\n        () => {\n          this.goBack()\n        });\n    }\n  }\n\n  goBack() {\n    this.dataService.goBackPrev();\n  }\n  \n\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { QuestionDetailResolver } from \"@app/modules/manage/manage-questions/reslovers/question-detail.reslover\";\nimport { QuestionCreateComponent } from \"@app/modules/manage/manage-questions/question-create/question-create/question-create.component\";\n\n\n\n\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: QuestionCreateComponent,\n  },\n  {\n    path: \":questionId\",\n    component: QuestionCreateComponent,\n    resolve: {\n      questionDetail: QuestionDetailResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    QuestionDetailResolver\n  ]\n})\n\nexport class QuestionCreateRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// modules\nimport { BasicModule } from '@app/shared/basic-components/basic.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n// components\nimport { QuestionCreateComponent } from '@app/modules/manage/manage-questions/question-create/question-create/question-create.component';\nimport { ReadAloudComponent } from '@app/modules/manage/manage-questions/question-create/speaking/read-aloud/read-aloud.component';\nimport { RepeatSentenceComponent } from '@app/modules/manage/manage-questions/question-create/speaking/repeat-sentence/repeat-sentence.component';\nimport { DescribeImageComponent } from '@app/modules/manage/manage-questions/question-create/speaking/describe-image/describe-image.component';\nimport { RetellLectureComponent } from '@app/modules/manage/manage-questions/question-create/speaking/retell-lecture/retell-lecture.component';\nimport { AnswerShortQuestionComponent } from '@app/modules/manage/manage-questions/question-create/speaking/answer-short-question/answer-short-question.component';\nimport { FibDropDownComponent } from '@app/modules/manage/manage-questions/question-create/reading/fib-drop-down/fib-drop-down.component';\nimport { FibBankComponent } from '@app/modules/manage/manage-questions/question-create/reading/fib-bank/fib-bank.component';\nimport { McqSingleComponent } from '@app/modules/manage/manage-questions/question-create/reading/mcq-single/mcq-single.component';\nimport { McqMultipleComponent } from '@app/modules/manage/manage-questions/question-create/reading/mcq-multiple/mcq-multiple.component';\nimport { DictationComponent } from '@app/modules/manage/manage-questions/question-create/listening/dictation/dictation.component';\nimport { FibComponent } from '@app/modules/manage/manage-questions/question-create/listening/fib/fib.component';\nimport { HighlightIncorrectWordsComponent } from '@app/modules/manage/manage-questions/question-create/listening/highlight-incorrect-words/highlight-incorrect-words.component';\nimport { SelectMissingWordsComponent } from '@app/modules/manage/manage-questions/question-create/listening/select-missing-words/select-missing-words.component';\nimport { HighlightCorrectSummaryComponent } from '@app/modules/manage/manage-questions/question-create/listening/highlight-correct-summary/highlight-correct-summary.component';\nimport { EssayWritingComponent } from '@app/modules/manage/manage-questions/question-create/writing/essay-writing/essay-writing.component';\nimport { SummarizeWrittenTextComponent } from '@app/modules/manage/manage-questions/question-create/writing/summarize-written-text/summarize-written-text.component';\nimport { QuestionCreateRoutingModule } from '@app/modules/manage/manage-questions/question-create/question-create-routing.module';\nimport { ReorderParagraphComponent } from '@app/modules/manage/manage-questions/question-create/reading/reorder-paragraph/reorder-paragraph.component';\nimport { McqSingleListeningComponent } from '@app/modules/manage/manage-questions/question-create/listening/mcq-single/mcq-single.component';\nimport { McqMultipleListeningComponent } from '@app/modules/manage/manage-questions/question-create/listening/mcq-multiple/mcq-multiple.component';\nimport { WordCheckerComponent } from '@app/modules/manage/manage-questions/question-create/speaking/word-checker/word-checker.component';\nimport { SummarySpokenTextComponent } from '@app/modules/manage/manage-questions/question-create/listening/summary-spoken-text/summary-spoken-text.component';\n\n\n\n@NgModule({\n  declarations: [\n    QuestionCreateComponent,\n    // Speaking\n    ReadAloudComponent,\n    RepeatSentenceComponent,\n    DescribeImageComponent,\n    RetellLectureComponent,\n    AnswerShortQuestionComponent,\n    WordCheckerComponent,\n    // Reading\n    ReorderParagraphComponent,\n    FibDropDownComponent,\n    FibBankComponent,\n    McqSingleComponent,\n    McqMultipleComponent,\n    // Listening\n    DictationComponent,\n    FibComponent,\n    HighlightIncorrectWordsComponent,\n    SelectMissingWordsComponent,\n    HighlightCorrectSummaryComponent,\n    McqSingleListeningComponent,\n    McqMultipleListeningComponent,\n    SummarySpokenTextComponent,\n    // Writing\n    EssayWritingComponent,\n    SummarizeWrittenTextComponent,\n  ],\n  imports: [\n    CommonModule,\n    BasicModule,\n    QuestionCreateRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  exports:[\n    QuestionCreateRoutingModule\n  ]\n})\nexport class QuestionCreateModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3F1ZXN0aW9uLWNyZWF0ZS9xdWVzdGlvbi1jcmVhdGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonService } from '@app/core/http/common.service';\n\n@Component({\n  selector: 'app-question-create',\n  templateUrl: './question-create.component.html',\n  styleUrls: ['./question-create.component.css']\n})\nexport class QuestionCreateComponent implements OnInit {\n  public currentModule:any={};\n  public questionName:string;\n\n\n  constructor(private _activeRoute:ActivatedRoute,private _cservice:CommonService) { }\n\n  ngOnInit() {\n    this.currentModule=this._activeRoute.snapshot.params;\n\n    this.questionName=this._cservice.getquestionName(this.currentModule.questionType);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3JlYWRpbmcvZmliLWJhbmsvZmliLWJhbmsuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/serviceIndex';\nimport { FIBDrag } from '@app/shared/models/ReadingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'fib-bank',\n  templateUrl: './fib-bank.component.html',\n  styleUrls: ['./fib-bank.component.css']\n})\nexport class FibBankComponent implements OnInit {\n  private questionCode: string;\n  private questionId: string;\n\n  // boolean\n  public submitted: boolean = false;\n  public isToast: boolean = false;\n\n  dragForm: FormGroup = this.formBuilder.group(\n    {\n      name: [\"\", [Validators.required]],\n      paragraph: [\"\", Validators.required],\n      options: [\"\", [Validators.required]]\n    }\n  );\n\n  // any\n  public editorData: any;\n  public isProgress: boolean = false;\n  public warmingTxt: any = \"(GIVE BLANKS WITH {WORD} IN THE PLACE YOU WANT IT TO BE BLANK)\";\n  public subscription: Subscription;\n\n  constructor(private _activeRoute: ActivatedRoute, private _createService: SaveService,\n    private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n\n  }\n\n  getDataEditForm(data: FIBDrag) {\n    this.questionId = data.dragId;\n    this.dragForm = this.formBuilder.group(\n      {\n        name: [data.name, [Validators.required]],\n        paragraph: [data.paragraph],\n        options: [data.options, [Validators.required]]\n      }\n    );\n    this.editorData = data.paragraph;\n  }\n\n  get f() {\n    return this.dragForm.controls;\n  }\n\n  getMarkDown(e) {\n    this.editorData = e;\n  }\n\n  onCreate() {\n    this.submitted = true;\n    if (this.dragForm.invalid && !this.editorData.innerHTML) {\n      return;\n    } else {\n      this.isProgress = true;\n      this.dragForm.value.paragraph = this.editorData.innerHTML ? this.editorData.innerHTML : this.editorData;\n      this.subscription = this._createService.onSaveDrag(this.dragForm.value, this.questionCode, this.questionId).subscribe(\n        (res) => {\n          this.isProgress = false;\n          this.goBack();\n        }\n      )\n    }\n  }\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3JlYWRpbmcvZmliLWRyb3AtZG93bi9maWItZHJvcC1kb3duLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/serviceIndex';\nimport { DropDown } from '@app/shared/models/ReadingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'fib-drop-down',\n  templateUrl: './fib-drop-down.component.html',\n  styleUrls: ['./fib-drop-down.component.css']\n})\nexport class FibDropDownComponent implements OnInit {\n  private questionCode: string;\n  private questionId:string;\n\n  // boolean\n  public submitted: boolean = false;\n  public isToast: boolean = false;\n  public isProgress: boolean = false;\n\n  public dropForm: FormGroup = this.formBuilder.group(\n    {\n      name: [\"\", [Validators.required]],\n      paragraph: [\"\",Validators.required]\n    }\n  );\n\n  // any\n  public editorData: any = \"\";\n  public isErrText: string;\n  public warmingTxt: any = \"(GIVE OPTIONS IN “{} “ SEPARETED BY “;” EX: {ANSWER;OPTION1;OPTION2;OPTION3})\";\n  public subscription: Subscription;\n\n  constructor(private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService: SaveService,) { }\n\n    ngOnInit() {\n      this.questionCode = this._activeRoute.snapshot.params['questionType'];\n      let data = this._activeRoute.snapshot.data['questionDetail'];\n      if (data)\n        this.getDataEditForm(data);\n    }\n  \n    getDataEditForm(data: DropDown) {\n      this.questionId = data.dropdownId;\n      this.dropForm = this.formBuilder.group(\n        {\n          name: [data.name, [Validators.required]],\n          paragraph: [data.paragraph, [Validators.required]]\n        }\n      );\n        this.editorData=data.paragraph;\n    }\n\n  get f() {\n    return this.dropForm.controls;\n  }\n\n  getMarkDown(e) {\n    this.editorData = e;\n    this.dropForm.get('paragraph').setValue(e.innerHTML);\n  }\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  onCreate() {\n    this.submitted = true;\n    if (this.dropForm.invalid && !this.editorData.innerHTML) {\n      return;\n    } else {\n      this.isProgress = true;\n\n      this.subscription = this._createService.onSaveropDown(\n        this.dropForm.value, this.questionCode,this.questionId\n      ).subscribe(\n        (res) => {\n          this.isProgress = false;\n          this.goBack();\n        }, (err) => {\n          this.isErrText = err;\n          this.isToast = true;\n          this.isProgress = false;\n          if (this.editorData.innerHTML) {\n            this.editorData = this.editorData.innerHTML;\n          } else this.editorData = this.editorData;\n        }\n      )\n    }\n  }\n\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3JlYWRpbmcvbWNxLW11bHRpcGxlL21jcS1tdWx0aXBsZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport {  SaveService } from '@app/core/http/serviceIndex';\nimport { MCq } from '@app/shared/models/ReadingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'mcq-multiple',\n  templateUrl: './mcq-multiple.component.html',\n  styleUrls: ['./mcq-multiple.component.css']\n})\nexport class McqMultipleComponent implements OnInit {\n  private questionCode: string;\n  private questionId:string;\n\n  // boolean\n  public isCreate: boolean = false;\n  public submitted: boolean = false;\n\n  mcqForm: FormGroup = this.formBuilder.group(\n    {\n      question:[\"\",Validators.required],\n      answers: [\"\", [Validators.required]],\n      options: [\"\", [Validators.required]]\n    }\n  );\n\n  // any\n  public editorData: any = \"\";\n  public isProgress: boolean = false;\n  public type: any;\n  public warmingTxt: any = \"(SEPARETED BY “;” EX: ANSWER;OPTION1;OPTION2;OPTION3 )\";\n  public subscription: Subscription;\n\n  constructor(private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService: SaveService) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n\n  }\n\n  getDataEditForm(data: MCq) {\n    this.questionId = data.mcqId;\n    this.mcqForm = this.formBuilder.group(\n      {\n        question:[data.question,Validators.required],\n        answers: [data.answers, [Validators.required]],\n        options: [data.options, [Validators.required]]\n      }\n    );\n      this.editorData=data.question;\n  }\n\n  get f() {\n    return this.mcqForm.controls;\n  }\n\n  getMarkDown(e) {\n    this.editorData = e;\n    this.mcqForm.get('question').setValue(e.innerHTML);\n  }\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  onCreate() {\n    this.submitted = true;\n    if (this.mcqForm.invalid && !this.editorData.innerHTML) {\n      return;\n    } else {\n\n      this.isProgress = true;\n   \n\n      this.subscription = this._createService.onSaveMCQ(this.mcqForm.value, this.questionCode,this.questionId).subscribe(\n        (res) => {\n          this.isProgress = false;\n          this.goBack();\n        })\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3JlYWRpbmcvbWNxLXNpbmdsZS9tY3Etc2luZ2xlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CommonService, SaveService } from '@app/core/http/serviceIndex';\nimport { MCq } from '@app/shared/models/ReadingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'mcq-single',\n  templateUrl: './mcq-single.component.html',\n  styleUrls: ['./mcq-single.component.css']\n})\nexport class McqSingleComponent implements OnInit {\n  private questionCode: string;\n  private questionId:string;\n\n  // boolean\n  public isCreate: boolean = false;\n  public submitted: boolean = false;\n\n  mcqForm: FormGroup = this.formBuilder.group(\n    {\n      question:[\"\",Validators.required],\n      answers: [\"\", [Validators.required]],\n      options: [\"\", [Validators.required]]\n    }\n  );\n\n  // any\n  public editorData: any = \"\";\n  public isProgress: boolean = false;\n  public type: any;\n  public warmingTxt: any = \"(SEPARETED BY “;” EX: ANSWER;OPTION1;OPTION2;OPTION3 )\";\n  public subscription: Subscription;\n\n  constructor(private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService: SaveService) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n\n  }\n\n  getDataEditForm(data: MCq) {\n    this.questionId = data.mcqId;\n    this.mcqForm = this.formBuilder.group(\n      {\n        question:[data.question,Validators.required],\n        answers: [data.answers, [Validators.required]],\n        options: [data.options, [Validators.required]]\n      }\n    );\n      this.editorData=data.question;\n  }\n\n  get f() {\n    return this.mcqForm.controls;\n  }\n\n  getMarkDown(e) {\n    this.editorData = e;\n    this.mcqForm.get('question').setValue(e.innerHTML);\n  }\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  onCreate() {\n    this.submitted = true;\n    if (this.mcqForm.invalid && !this.editorData.innerHTML) {\n      return;\n    } else {\n\n      this.isProgress = true;\n   \n\n      this.subscription = this._createService.onSaveMCQ(this.mcqForm.value, this.questionCode,this.questionId).subscribe(\n        (res) => {\n          this.isProgress = false;\n          this.goBack();\n        })\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3JlYWRpbmcvcmVvcmRlci1wYXJhZ3JhcGgvcmVvcmRlci1wYXJhZ3JhcGguY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {  SaveService } from '@app/core/http/serviceIndex';\nimport { Reorder } from '@app/shared/models/ReadingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'reorder-paragraph',\n  templateUrl: './reorder-paragraph.component.html',\n  styleUrls: ['./reorder-paragraph.component.css']\n})\nexport class ReorderParagraphComponent implements OnInit {\n  public questionCode: string;\n  private questionId: string;\n\n  // boolean\n  public submitted: boolean = false;\n  public isHint: boolean = false;\n  createReorderForm: FormGroup = this.formBuilder.group(\n    {\n      name: [\"\", [Validators.required]],\n      paragraph: [\"\", [Validators.required]]\n    }\n  );\n\n  // any\n  public reorderId: any;\n  public editorData: any = \"\";\n  public isProgress: boolean = false;\n  public subscription: Subscription;\n\n  constructor(private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder, private _createService: SaveService,) {\n\n  }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n  }\n\n  getDataEditForm(data: Reorder) {\n    this.questionId = data.reorderId;\n    this.createReorderForm = this.formBuilder.group(\n      {\n        name: [data.name, [Validators.required]],\n        paragraph: [data.paragraph, [Validators.required]]\n      }\n    );\n      this.editorData=data.paragraph;\n  }\n\n  get f() {\n    return this.createReorderForm.controls;\n  }\n\n  getMarkDown(e) {\n    this.editorData = e;\n    this.createReorderForm.get('paragraph').setValue(e.innerHTML);\n  }\n\n  goBack() {\n   this._createService.goBackPrev();\n  }\n\n  onCreate() {\n    this.submitted = true;\n    if (this.createReorderForm.invalid && !this.editorData.innerHTML) {\n      return;\n    } else {\n      this.isProgress = true;\n\n      this.subscription = this._createService.onSaveReorder(this.createReorderForm.value, this.questionCode,this.questionId).subscribe(\n        (res) => {\n          this.isProgress = false;\n          this.goBack();\n        })\n    }\n  }\n\n \n\n  clickClose(e) {\n    this.isHint = !this.isHint;\n\n  }\n\n  btnHint() {\n    this.submitted = true;\n    if (this.createReorderForm.invalid) {\n      return;\n    } else {\n      this.isHint = !this.isHint;\n      //  let arr = this._service.strToArrbySemicolon(this.createReorderForm.value.paragraph);\n      //  this.editorData = this._service.formatarrtoHTML(arr);\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3NwZWFraW5nL2Fuc3dlci1zaG9ydC1xdWVzdGlvbi9hbnN3ZXItc2hvcnQtcXVlc3Rpb24uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/serviceIndex';\nimport { ShortQuestion } from '@app/shared/models/SpeakingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'answer-short-question',\n  templateUrl: './answer-short-question.component.html',\n  styleUrls: ['./answer-short-question.component.css']\n})\nexport class AnswerShortQuestionComponent implements OnInit {\n  private questionCode: string;\n  private questionId: string;\n\n  public createansShortForm: FormGroup = this.formBuilder.group({\n    title: [\"\", [Validators.required]],\n    duration: [\"\", [Validators.required]],\n    answer: [\"\", [Validators.required]],\n    recordDuration: [\"\", [Validators.required]],\n    audioFile: [null, Validators.required],\n    contentScore: [\"\", Validators.required],\n  });\n\n  // boolean\n  public submitted: boolean = false;\n  public isProgress: boolean = false;\n  isToast: boolean = false;\n  public isCheckAudio: boolean = false;\n  // any\n  public editorData: any = \"\";\n  public audioFile: any;\n  isErrText: String;\n  public exitaudioLink: String;\n\n  public subscription: Subscription;\n\n  constructor(private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService: SaveService) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n  }\n\n  getDataEditForm(data: ShortQuestion) {\n    this.questionId = data.questionId;\n    this.createansShortForm = this.formBuilder.group({\n      title: [data.title, [Validators.required]],\n      duration: [data.duration, [Validators.required]],\n      answer: [data.answer, [Validators.required]],\n      recordDuration: [data.recordDuration, [Validators.required]],\n      audioFile: [null],\n      contentScore: [data.contentScore, Validators.required],\n\n    });\n\n  }\n\n  onCreate() {\n    this.submitted = true;\n\n    if (this.createansShortForm.invalid) {\n      return;\n    } else {\n      this.isProgress = true;\n\n      this.subscription = this._createService.onSaveShortQuestion(\n        this.createansShortForm.value, this.questionCode, this.questionId\n      ).subscribe(\n        (res) => {\n          this.goBack();\n        },\n        (err) => {\n          this.isErrText = err;\n          this.isToast = true;\n          this.isProgress = false;\n        }\n      );\n    }\n  }\n\n\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  get f() {\n    return this.createansShortForm.controls;\n  }\n\n  getAudioFile(e) {\n    this.audioFile = e;\n  }\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3NwZWFraW5nL2Rlc2NyaWJlLWltYWdlL2Rlc2NyaWJlLWltYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/serviceIndex';\nimport { DescribeImage } from '@app/shared/models/SpeakingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'describe-image',\n  templateUrl: './describe-image.component.html',\n  styleUrls: ['./describe-image.component.css']\n})\nexport class DescribeImageComponent implements OnInit {\n  public questionCode: string;\n  public questionId: string;\n\n  createDescribeForm: FormGroup = this.formBuilder.group({\n    title: [\"\", [Validators.required]],\n    duration: [\"\", [Validators.required]],\n    recordDuration: [\"\", [Validators.required]],\n    keywordMatch: [\"\", [Validators.required]],\n    keywords: [\"\", [Validators.required]],\n    fluentGrade: [\"\", [Validators.required]],\n    sampleAnswer: [\"\", [Validators.required]],\n    contentScore: [\"\", [Validators.required]],\n    pronounciationGrade: [\"\", [Validators.required]],\n    words: this.formBuilder.array([]),\n    imageFile: [null, Validators.required]\n  });\n\n  // boolean\n  public submitted: boolean = false;\n  public isProgress: boolean = false;\n  public isCheckImg: boolean = false;\n  isToast: boolean = false;\n  public isImgLoad: boolean = true;\n\n  // any\n  public editorData: any = \"\";\n  isErrText: string;\n  public exitimgUrl: string;\n  public subscription: Subscription;\n  public words: any = [];\n\n  constructor(private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService: SaveService) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n  }\n\n  getDataEditForm(data: DescribeImage) {\n    this.questionId = data.questionId;\n    this.createDescribeForm = this.formBuilder.group({\n      title: [data.title, [Validators.required]],\n      duration: [data.duration, [Validators.required]],\n      recordDuration: [data.recordDuration, [Validators.required]],\n      keywordMatch: [data.keywordMatch, [Validators.required]],\n      keywords: [data.keywords, [Validators.required]],\n      fluentGrade: [data.fluentGrade, [Validators.required]],\n      pronounciationGrade: [data.pronounciationGrade, [Validators.required]],\n      words: this.formBuilder.array([]),\n      sampleAnswer: [data.sampleAnswer, [Validators.required]],\n      contentScore: [data.contentScore, [Validators.required]],\n\n\n      imageFile: [null]\n    });\n    this.words = data.words.map(d => ({ word: d.word }))\n  }\n\n  onCreate() {\n    this.submitted = true;\n\n    if (this.createDescribeForm.invalid) {\n      return;\n    } else {\n      this.isProgress = true;\n\n      this.subscription = this._createService.onSaveDescribeImg(\n        this.createDescribeForm.value, this.questionCode, this.questionId\n      ).subscribe(\n        (res) => {\n          this.goBack();\n        },\n        (err) => {\n          this.isErrText = err;\n          this.isToast = true;\n          this.isProgress = false;\n        }\n      );\n    }\n  }\n\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  get f() {\n    return this.createDescribeForm.controls;\n  }\n\n\n\n\n  onLoad() {\n    this.isImgLoad = false;\n  }\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3NwZWFraW5nL3JlYWQtYWxvdWQvcmVhZC1hbG91ZC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport {  SaveService } from '@app/core/http/serviceIndex';\nimport { ReadAloud } from '@app/shared/models/SpeakingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'read-aloud',\n  templateUrl: './read-aloud.component.html',\n  styleUrls: ['./read-aloud.component.css']\n})\nexport class ReadAloudComponent implements OnInit {\n  private questionCode: string;\n  private questionId: string;\n\n  public createReadAloudForm: FormGroup = this.formBuilder.group({\n    title: [\"\", [Validators.required]],\n    paragraph: [\"\", [Validators.required]],\n    countMax: [\"\", [Validators.required]],\n    duration: [\"\", [Validators.required]],\n    recordDuration: [\"\", [Validators.required]],\n    fluencyGrace: [\"\", [Validators.required]],\n    pronunciationGrace: [\"\", [Validators.required]],\n    contentScore: [\"\", [Validators.required]],\n    words: this.formBuilder.array([]),\n  });\n\n  // boolean\n  public submitted: boolean = false;\n  public isProgress: boolean = false;\n  public isToast: boolean = false;\n  //any\n  public words: any = [];\n  public readAloudId: any\n  public isErrText: String = null\n  public subscription: Subscription;\n\n  constructor(\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService: SaveService) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n\n  }\n\n  getDataEditForm(data: ReadAloud) {\n    this.words = data.words;\n    this.questionId = data.questionId;\n    this.createReadAloudForm = this.formBuilder.group({\n      title: [data.title, [Validators.required]],\n      paragraph: [data.paragraph, [Validators.required]],\n      countMax: [data.countMax, [Validators.required]],\n      duration: [data.duration, [Validators.required]],\n      recordDuration: [data.recordDuration, [Validators.required]],\n      fluencyGrace: [data.fluencyGrace, [Validators.required]],\n      pronunciationGrace: [data.pronunciationGrace, [Validators.required]],\n      contentScore: [data.contentScore, [Validators.required]],\n      words: this.formBuilder.array([]),\n    });\n    this.words = data.words.map(d => ({ word: d.word }))\n  }\n\n  onSave() {\n    this.submitted = true;\n    if (this.createReadAloudForm.invalid)\n      return\n\n    this.isProgress = true\n\n    this.subscription = this._createService.onSaveReadAloud(\n      this.createReadAloudForm.value, this.questionCode, this.questionId\n    ).subscribe(\n      (res) => {\n        this.goBack();\n      },\n      (err) => {\n        this.isErrText = err.error.message;\n        this.isToast = true;\n        this.isProgress = false;\n      }\n    )\n\n  }\n\n  get f() {\n    return this.createReadAloudForm.controls;\n  }\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3NwZWFraW5nL3JlcGVhdC1zZW50ZW5jZS9yZXBlYXQtc2VudGVuY2UuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/serviceIndex';\nimport { RepeatSentence } from '@app/shared/models/SpeakingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'repeat-sentence',\n  templateUrl: './repeat-sentence.component.html',\n  styleUrls: ['./repeat-sentence.component.css']\n})\nexport class RepeatSentenceComponent implements OnInit {\n  private questionCode: string\n  private questionId: string\n\n  public createRepeatSentenceForm: FormGroup = this.formBuilder.group({\n    title: [\"\", [Validators.required]],\n    paragraph: [\"\", [Validators.required]],\n    countMax: [\"\", [Validators.required]],\n    duration: [\"\", [Validators.required]],\n    recordDuration: [\"\", [Validators.required]],\n    fluencyGrace: [\"\", [Validators.required]],\n    pronunciationGrace: [\"\", [Validators.required]],\n    words: this.formBuilder.array([]),\n    audioFile: [null, [Validators.required]],\n    contentScore: [\"\", [Validators.required]]\n  });\n\n  // boolean\n  public submitted: boolean = false;\n  public isProgress: boolean = false;\n  public isToast: boolean = false;\n  //any\n  public words: any = [];\n  public repeatSentenceId: any\n  public isErrText: String = null\n  public subscription: Subscription\n  public audioFile: File = null\n\n  constructor(\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService: SaveService,) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n  }\n\n  getDataEditForm(data: RepeatSentence) {\n    this.questionId = data.questionId;\n    this.createRepeatSentenceForm = this.formBuilder.group({\n      title: [data.title, [Validators.required]],\n      paragraph: [data.paragraph, [Validators.required]],\n      countMax: [data.countMax, [Validators.required]],\n      duration: [data.duration, [Validators.required]],\n      recordDuration: [data.recordDuration, [Validators.required]],\n      fluencyGrace: [data.fluencyGrace, [Validators.required]],\n      pronunciationGrace: [data.pronunciationGrace, [Validators.required]],\n      words: this.formBuilder.array([]),\n      audioFile: [null],\n      contentScore: [data.contentScore, [Validators.required]]\n\n    });\n    this.words = data.words.map(d => ({ word: d.word }))\n  }\n\n\n  onSave() {\n    this.submitted = true;\n    if (this.createRepeatSentenceForm.invalid)\n      return\n\n    this.isProgress = true\n\n    this.subscription = this._createService.onSaveRepeatSentence(\n      this.createRepeatSentenceForm.value,\n      this.questionCode, this.questionId\n    ).subscribe(\n      (res) => {\n        this.goBack()\n      },\n      (err) => {\n        this.isErrText = err.error.message;\n        this.isToast = true;\n        this.isProgress = false;\n      }\n    )\n\n  }\n\n  getAudioFile(e) {\n    this.createRepeatSentenceForm.value.audioFile = e;\n  }\n\n  get f() {\n    return this.createRepeatSentenceForm.controls;\n  }\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3NwZWFraW5nL3JldGVsbC1sZWN0dXJlL3JldGVsbC1sZWN0dXJlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonService, SaveService } from '@app/core/http/serviceIndex';\nimport { RetellLecture } from '@app/shared/models/SpeakingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'retell-lecture',\n  templateUrl: './retell-lecture.component.html',\n  styleUrls: ['./retell-lecture.component.css']\n})\nexport class RetellLectureComponent implements OnInit {\n  private questionCode: string;\n  private questionId: string;\n\n  public createRetellLectureForm: FormGroup = this.formBuilder.group({\n    title: [\"\", [Validators.required]],\n    keywords: [\"\", [Validators.required]],\n    countMax: [\"\", [Validators.required]],\n    duration: [\"\", [Validators.required]],\n    recordDuration: [\"\", [Validators.required]],\n    fluencyGrace: [\"\", [Validators.required]],\n    pronunciationGrace: [\"\", [Validators.required]],\n    contentScore: [\"\", [Validators.required]],\n    // words: this.formBuilder.array([], [Validators.required]),\n    words: [\"\", [Validators.required]],\n    audioFile: [null, Validators.required]\n  });\n  // boolean\n  public submitted: boolean = false;\n  public isProgress: boolean = false;\n  public isToast: boolean = false;\n  //any\n  public words: any = [];\n  public retellLectureId: any\n  public isErrText: String = null\n  public subscription: Subscription\n\n  constructor(\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService: SaveService) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n  }\n\n  getDataEditForm(data: RetellLecture) {\n    this.questionId = data.questionId;\n    this.createRetellLectureForm = this.formBuilder.group({\n      title: [data.title, [Validators.required]],\n      keywords: [data.keywords, [Validators.required]],\n      countMax: [data.countMax, [Validators.required]],\n      duration: [data.duration, [Validators.required]],\n      recordDuration: [data.recordDuration, [Validators.required]],\n      fluencyGrace: [data.fluencyGrace, [Validators.required]],\n      pronunciationGrace: [data.pronunciationGrace, [Validators.required]],\n      words: [data.words, [Validators.required]],\n      contentScore: [data.contentScore, [Validators.required]],\n\n      audioFile: [null]\n    });\n    // this.words = data.words.map(d => ({ word: d.word }))\n  }\n\n  onSave() {\n    this.submitted = true;\n    if (this.createRetellLectureForm.invalid)\n      return\n\n\n    this.isProgress = true\n    console.log(this.questionCode)\n    this.subscription = this._createService.onSaveRellLecture(\n      this.createRetellLectureForm.value, this.questionCode, this.questionId\n    ).subscribe(\n      (res) => {\n        this.goBack()\n      },\n      (err) => {\n        this.isErrText = err;\n        this.isToast = true;\n        this.isProgress = false;\n      }\n    )\n\n  }\n\n\n\n  get f() {\n    return this.createRetellLectureForm.controls;\n  }\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n\n}\n","export default \"table {\\n    min-width: 500px;;\\n}\\n\\nthead {\\n    text-align: center;\\n}\\n\\nthead > td {\\n    /* padding: 5px 0; */\\n    height: 45px;\\n    background: #E7E3D4 0% 0% no-repeat padding-box;\\n    box-shadow: 0px 3px 6px #EBEBEB;\\n    border-radius: 4px;\\n    opacity: 1;\\n}\\n\\n/* tr:first-child > td:last-child {\\n    display: none;\\n} */\\n\\ntd label {\\n    color: #6c757d;\\n    display: block;\\n    margin-bottom: 0;\\n}\\n\\ntd .sub-label {\\n    text-transform: uppercase;\\n    color: #d31912;\\n    font-weight: 600;\\n    font-size: 12px;\\n}\\n\\ntd input[type=text] {\\n    height: 45px;\\n}\\n\\ntd.del > a {\\n    width: 40px;\\n    height: 40px;\\n    border-radius: 20px;\\n    margin-left: 5px;\\n    background: #FF1A07 0% 0% no-repeat padding-box;\\n    box-shadow: 0px 3px 6px #FF1A07;\\n    opacity: 0;\\n}\\n\\n.del-icon {\\n    color: #ffffff;\\n}\\n\\ndiv.add {\\n    text-align: center;\\n    margin-top: 10px;\\n}\\n\\ndiv.add > a {\\n    width: 60px;\\n    height: 60px;\\n    border-radius: 30px;\\n    font-size: 0.9rem;\\n    color: #fff;\\n    background: var(--unnamed-color-3b8beb) 0% 0% no-repeat padding-box;\\n    background: #3B8BEB 0% 0% no-repeat padding-box;\\n    box-shadow: 0px 3px 6px #89BEFF;\\n    opacity: 1;\\n    /* padding-top: 23px; */\\n}\\n\\nform div.add {\\n    width: 430px;\\n}\\n\\ntable tr:hover td.del > a { opacity: 1 }\\n\\n.hide {\\n    display: none;\\n}\\n\\n.show {\\n    opacity: 1;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9tYW5hZ2UvbWFuYWdlLXF1ZXN0aW9ucy9xdWVzdGlvbi1jcmVhdGUvc3BlYWtpbmcvd29yZC1jaGVja2VyL3dvcmQtY2hlY2tlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksb0JBQW9CO0lBQ3BCLFlBQVk7SUFDWiwrQ0FBK0M7SUFDL0MsK0JBQStCO0lBQy9CLGtCQUFrQjtJQUNsQixVQUFVO0FBQ2Q7O0FBRUE7O0dBRUc7O0FBRUg7SUFDSSxjQUFjO0lBQ2QsY0FBYztJQUNkLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsZ0JBQWdCO0lBQ2hCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLCtDQUErQztJQUMvQywrQkFBK0I7SUFDL0IsVUFBVTtBQUNkOztBQUVBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQixpQkFBaUI7SUFDakIsV0FBVztJQUNYLG1FQUFtRTtJQUNuRSwrQ0FBK0M7SUFDL0MsK0JBQStCO0lBQy9CLFVBQVU7SUFDVix1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBLDRCQUE0QixXQUFXOztBQUV2QztJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxVQUFVO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL21hbmFnZS9tYW5hZ2UtcXVlc3Rpb25zL3F1ZXN0aW9uLWNyZWF0ZS9zcGVha2luZy93b3JkLWNoZWNrZXIvd29yZC1jaGVja2VyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gICAgbWluLXdpZHRoOiA1MDBweDs7XG59XG5cbnRoZWFkIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbnRoZWFkID4gdGQge1xuICAgIC8qIHBhZGRpbmc6IDVweCAwOyAqL1xuICAgIGhlaWdodDogNDVweDtcbiAgICBiYWNrZ3JvdW5kOiAjRTdFM0Q0IDAlIDAlIG5vLXJlcGVhdCBwYWRkaW5nLWJveDtcbiAgICBib3gtc2hhZG93OiAwcHggM3B4IDZweCAjRUJFQkVCO1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBvcGFjaXR5OiAxO1xufVxuXG4vKiB0cjpmaXJzdC1jaGlsZCA+IHRkOmxhc3QtY2hpbGQge1xuICAgIGRpc3BsYXk6IG5vbmU7XG59ICovXG5cbnRkIGxhYmVsIHtcbiAgICBjb2xvcjogIzZjNzU3ZDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG50ZCAuc3ViLWxhYmVsIHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGNvbG9yOiAjZDMxOTEyO1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgZm9udC1zaXplOiAxMnB4O1xufVxuXG50ZCBpbnB1dFt0eXBlPXRleHRdIHtcbiAgICBoZWlnaHQ6IDQ1cHg7XG59XG5cbnRkLmRlbCA+IGEge1xuICAgIHdpZHRoOiA0MHB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICAgIG1hcmdpbi1sZWZ0OiA1cHg7XG4gICAgYmFja2dyb3VuZDogI0ZGMUEwNyAwJSAwJSBuby1yZXBlYXQgcGFkZGluZy1ib3g7XG4gICAgYm94LXNoYWRvdzogMHB4IDNweCA2cHggI0ZGMUEwNztcbiAgICBvcGFjaXR5OiAwO1xufVxuXG4uZGVsLWljb24ge1xuICAgIGNvbG9yOiAjZmZmZmZmO1xufVxuXG5kaXYuYWRkIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbn1cblxuZGl2LmFkZCA+IGEge1xuICAgIHdpZHRoOiA2MHB4O1xuICAgIGhlaWdodDogNjBweDtcbiAgICBib3JkZXItcmFkaXVzOiAzMHB4O1xuICAgIGZvbnQtc2l6ZTogMC45cmVtO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQ6IHZhcigtLXVubmFtZWQtY29sb3ItM2I4YmViKSAwJSAwJSBuby1yZXBlYXQgcGFkZGluZy1ib3g7XG4gICAgYmFja2dyb3VuZDogIzNCOEJFQiAwJSAwJSBuby1yZXBlYXQgcGFkZGluZy1ib3g7XG4gICAgYm94LXNoYWRvdzogMHB4IDNweCA2cHggIzg5QkVGRjtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC8qIHBhZGRpbmctdG9wOiAyM3B4OyAqL1xufVxuXG5mb3JtIGRpdi5hZGQge1xuICAgIHdpZHRoOiA0MzBweDtcbn1cblxudGFibGUgdHI6aG92ZXIgdGQuZGVsID4gYSB7IG9wYWNpdHk6IDEgfVxuXG4uaGlkZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbn0gXG5cbi5zaG93IHtcbiAgICBvcGFjaXR5OiAxO1xufSJdfQ== */\"","import { Component, OnInit, Input} from '@angular/core';\nimport { FormArray, FormBuilder, Validators } from '@angular/forms';\nimport { Word } from '@app/shared/models/SpeakingModel';\n\n@Component({\n  selector: 'word-checker',\n  templateUrl: './word-checker.component.html',\n  styleUrls: ['./word-checker.component.css']\n})\nexport class WordCheckerComponent implements OnInit {\n  public dialog:any={\n    showText:\"\",\n    isDelete:false,\n    isWarning:true,\n    isconfirmBtn:true\n  }\n\n  @Input() wordGroup\n  @Input() submitted\n  @Input() wordsArray:Array<Word>;\n  @Input() isCreate\n  control: FormArray\n  isDialog: boolean = false\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() { \n    if (this.isCreate) {\n      const control = this.wordGroup.get('words') as FormArray\n      control.push(this.initiateForm(null))\n    } else {\n      setTimeout(() => {     \n        this.wordsArray.forEach(element => {\n          const control = this.wordGroup.get('words') as FormArray\n          control.push(this.initiateForm(element))\n        })\n      }, 2000);    \n    }\n  }\n\n  ngAfterOnInit() {\n    //this.control = this.wordGroup.get('rows') as FormArray\n  }\n\n  initiateForm(data) {\n    return this.fb.group({\n      word: [ data ? data.word : '', [Validators.required]],\n      isDeleteAble: [true]\n    })\n  } \n\n  onAdd(){\n    const control = this.wordGroup.get('words') as FormArray\n    control.push(this.initiateForm(null));\n  }\n\n  onDelete(index: number){\n    const control =  this.wordGroup.get('words') as FormArray\n    if(control.controls.length < 2){\n      this.isDialog = true\n      this.dialog.showText = \"Must have one row at least in Words To Check With Minimum.\"\n      return\n    }\n     \n    control.removeAt(index)\n  }\n\n  get getFormControls() {\n    const control = this.wordGroup.get('words') as FormArray;\n    return control\n  }\n\n  onSubmit(e) {\n    this.isDialog = false\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3dyaXRpbmcvZXNzYXktd3JpdGluZy9lc3NheS13cml0aW5nLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport {  SaveService } from '@app/core/http/serviceIndex';\nimport { ToastService } from '@app/core/services';\nimport { EssaySubWriting, EssayWriting } from '@app/shared/models/WritingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'essay-writing',\n  templateUrl: './essay-writing.component.html',\n  styleUrls: ['./essay-writing.component.css']\n})\nexport class EssayWritingComponent implements OnInit {\n  private questionCode: string;\n  private questionId: string;\n\n  createEssayForm: FormGroup = this.formBuilder.group(\n    {\n      name: [\"\", [Validators.required]],\n      answer: this.formBuilder.group({\n        contentKeywords: [\"\", [Validators.required]],\n        maxWordLimit: [\"\", [Validators.required]],\n        maxKeyword: [\"\", [Validators.required]],\n      }),\n      adviseContent: [\"\", Validators.required]\n    }\n  );\n\n  // boolean\n  public submitted: boolean = false;\n  // any\n  public editorData: any = \"\";\n  public isProgress: boolean = false;\n  public subscription: Subscription;\n\n  constructor(private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder, \n    public toastService: ToastService,\n    private _saveService: SaveService) {\n\n  }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n  }\n\n  getDataEditForm(data: EssayWriting) {\n    this.questionId = data.essayId;\n    this.createEssayForm = this.formBuilder.group(\n      {\n        name: [data.name, [Validators.required]],\n        answer: this.formBuilder.group({\n          contentKeywords: [data.answer.contentKeywords, [Validators.required]],\n          maxWordLimit: [data.answer.maxWordLimit, [Validators.required]],\n          maxKeyword: [data.answer.maxKeyword, [Validators.required]],\n        }),\n       \n        adviseContent: [data.adviseContent]\n      }\n    );\n    this.editorData = data.adviseContent;\n  }\n\n  onCreate() {\n    this.submitted = true;\n    if (this.createEssayForm.invalid) {\n      return;\n    } else {\n      this.isProgress = true;\n\n      this.createEssayForm.value.advis\n      this.subscription = this._saveService\n        .onSaveEssay(this.createEssayForm.value, this.questionCode, this.questionId)\n        .subscribe((res) => {\n          this.isProgress = false;\n          this.goBack();\n        });\n    }\n  }\n\n\n  get f() {\n    return this.createEssayForm.controls;\n  }\n\n  getMarkDown(e) {\n    this.editorData = e;\n    this.createEssayForm.get('adviseContent').setValue(e.innerHTML);\n  }\n\n  goBack() {\n    this._saveService.goBackPrev();\n  }\n\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3dyaXRpbmcvc3VtbWFyaXplLXdyaXR0ZW4tdGV4dC9zdW1tYXJpemUtd3JpdHRlbi10ZXh0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/save.service';\nimport { SummaryWriting } from '@app/shared/models/WritingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'summarize-written-text',\n  templateUrl: './summarize-written-text.component.html',\n  styleUrls: ['./summarize-written-text.component.css']\n})\nexport class SummarizeWrittenTextComponent implements OnInit {\n  private questionCode:string;\n  private questionId:string;\n\n  createSummary: FormGroup= this.formBuilder.group({\n    name: [\"\", [Validators.required]],\n    type: [\"\", [Validators.required]],\n    contentKeywords: [\"\", [Validators.required]],\n    vocabularyWords: [\"\", [Validators.required]],\n    maxContentKeywords: [\"\", [Validators.required]],\n    maxWordLimit: [\"\", [Validators.required]],\n    maxVocabularyWords: [\"\", [Validators.required]],\n    unwantedContentKeywords: [\"\", [Validators.required]],\n    question:[\"\",Validators.required],\n    adviseContent:[\"\",Validators.required],\n\n  });\n  // any\n  public editorDataQestion: any = \"\";\n  public editorDataAdvise: any = \"\";\n  // boolean\n  public submitted: boolean = false;\n  public isProgress: boolean = false;\n\n  public subscription: Subscription;\n\n  public typeList: any = [\n    {\n      _id: \"WRITTEN\",\n      name: \"WRITTEN\",\n    },\n  ];\n  constructor(\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService:SaveService\n  ) { }\n  \n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n  }\n\n  getDataEditForm(data: SummaryWriting) {\n    this.questionId = data.summaryId;\n    this.createSummary =this.formBuilder.group({\n      name: [data.name, [Validators.required]],\n      type: [data.type, [Validators.required]],\n      contentKeywords: [data.contentKeywords, [Validators.required]],\n      vocabularyWords: [data.vocabularyWords, [Validators.required]],\n      maxContentKeywords: [data.maxContentKeywords, [Validators.required]],\n      maxWordLimit: [data.maxWordLimit, [Validators.required]],\n      maxVocabularyWords: [data.maxVocabularyWords, [Validators.required]],\n      unwantedContentKeywords: [data.unwantedContentKeywords, [Validators.required]],\n      question:[data.question,Validators.required],\n      adviseContent:[data.adviseContent,Validators.required]\n    });\n    this.editorDataAdvise = data.adviseContent;\n    this.editorDataQestion=data.question;\n  }\n\n\n\n  get f() {\n    return this.createSummary.controls;\n  }\n  goBack() {\n    this._createService.goBackPrev();\n  }\n  getMarkDownForSummaryQuestion(e) {\n    this.editorDataQestion = e;\n    this.createSummary.get('question').setValue(e.innerHTML);\n  }\n  getMarkDownForAdviseSummary(e) {\n    this.editorDataAdvise = e;\n    this.createSummary.get('adviseContent').setValue(e.innerHTML);\n  }\n  onCreate() {\n    this.submitted = true;\n    if (this.createSummary.invalid) {\n      return;\n    } else {\n      this.isProgress = true;\n     \n      this._createService.onSaveSummaryWritting(this.createSummary.value,this.questionCode,this.questionId).subscribe(\n        () => {\n          this.isProgress = false;\n          this.goBack();\n        });\n    }\n  }\n\n\n  \n\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n\n}\n","import { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DetailService } from '@app/core/http/detail.service';\n\n@Injectable()\nexport class QuestionDetailResolver implements Resolve<any> {\n\n    constructor(private question: DetailService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot):\n        Observable<any> {\n\n        const questionUrl = `${route.params['moduleType'].toLowerCase()}/${route.params['questionType']}/${route.params['questionId']}/detail`;\n\n        return this.question.getDetail(questionUrl);\n    }\n}"],"sourceRoot":"webpack:///"}