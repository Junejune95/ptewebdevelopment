{"version":3,"sources":["src/app/modules/manage/manage-questions/comment/comment.component.html","src/app/modules/manage/manage-questions/questions/questions.component.html","src/app/modules/manage/manage-questions/structure/structure.component.html","src/app/modules/manage/manage-questions/comment/comment.component.css","src/app/modules/manage/manage-questions/comment/comment.component.ts","src/app/modules/manage/manage-questions/manage-questions-routing.ts","src/app/modules/manage/manage-questions/manage-questions.module.ts","src/app/modules/manage/manage-questions/questions/questions.component.css","src/app/modules/manage/manage-questions/questions/questions.component.ts","src/app/modules/manage/manage-questions/reslovers/comment.reslover.ts","src/app/modules/manage/manage-questions/reslovers/essay-structure.reslover.ts","src/app/modules/manage/manage-questions/structure/structure.component.css","src/app/modules/manage/manage-questions/structure/structure.component.ts","src/app/shared/models/WritingModel.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<header-route-menu-light [currentPageName]=\\\"'Comments'\\\" [moduleName]=\\\"questionName\\\">\\n</header-route-menu-light>\\n\\n\\n<form [formGroup]=\\\"essayCommentForm\\\" class=\\\"create-form\\\">\\n\\n    <div class=\\\"container mb-3\\\">\\n        <!-- Evaluation Comment 1 start-->\\n        <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <group-title> Evaluation Comment 1</group-title>\\n                <label-text>Comment</label-text>\\n                <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" formControlName=\\\"comment1\\\"\\n                    (input)=\\\"str = $event.target.value\\\"></textarea>\\n            </div>\\n        </div>\\n        <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col-sm-6\\\">\\n                <label-text>Min Score</label-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" formControlName=\\\"minValue1\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && wrong1 }\\\"\\n                    oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\" />\\n                <div *ngIf=\\\"wrong1\\\" class=\\\"invalid-feedback\\\">\\n                    <div>Min Value must not greater than Max Value</div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"col-sm-6\\\">\\n                <label-text>Max Score</label-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" formControlName=\\\"maxValue1\\\"\\n                    oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\" />\\n            </div>\\n        </div>\\n        <!-- Evaluation Comment 1 End-->\\n\\n        <!-- Evaluation Comment 2 start-->\\n        <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <group-title> Evaluation Comment 2</group-title>\\n                <label-text>Comment</label-text>\\n                <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" formControlName=\\\"comment2\\\"\\n                    (input)=\\\"str = $event.target.value\\\"></textarea>\\n            </div>\\n        </div>\\n        <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col-sm-6\\\">\\n                <label-text>Min Score</label-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" formControlName=\\\"minValue2\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && wrong2 }\\\"\\n                    oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\" />\\n                <div *ngIf=\\\"wrong2\\\" class=\\\"invalid-feedback\\\">\\n                    <div>Min Value must not greater than Max Value</div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-6\\\">\\n                <label-text>Max Score</label-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" formControlName=\\\"maxValue2\\\"\\n                    oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\" />\\n            </div>\\n        </div>\\n        <!-- Evaluation Comment 2 End-->\\n\\n        <!-- Evaluation Comment 3 start-->\\n        <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <group-title> Evaluation Comment 3</group-title>\\n                <label-text>Comment</label-text>\\n                <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" formControlName=\\\"comment3\\\"\\n                    (input)=\\\"str = $event.target.value\\\"></textarea>\\n            </div>\\n        </div>\\n        <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col-sm-6\\\">\\n                <label-text>Min Score</label-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" formControlName=\\\"minValue3\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && wrong3 }\\\"\\n                    oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\" />\\n                <div *ngIf=\\\"wrong3\\\" class=\\\"invalid-feedback\\\">\\n                    <div>Max Value must not greater than Min Value</div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-6\\\">\\n                <label-text>Max Score</label-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" formControlName=\\\"maxValue3\\\"\\n                    oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\" />\\n            </div>\\n        </div>\\n        <!-- Evaluation Comment 3 End-->\\n\\n        <!-- Evaluation Comment 4 start-->\\n        <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <group-title> Evaluation Comment 4</group-title>\\n                <label-text>Comment</label-text>\\n                <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" formControlName=\\\"comment4\\\"\\n                    (input)=\\\"str = $event.target.value\\\"></textarea>\\n            </div>\\n        </div>\\n        <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col-sm-6\\\">\\n                <label-text>Min Score</label-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" formControlName=\\\"minValue4\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && wrong4 }\\\"\\n                    oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\" />\\n                <div *ngIf=\\\"wrong4\\\" class=\\\"invalid-feedback\\\">\\n                    <div>Min Value must not greater than Max Value</div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-6\\\">\\n                <label-text>Max Score</label-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" formControlName=\\\"maxValue4\\\"\\n                    oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\" />\\n            </div>\\n        </div>\\n  \\n    </div>\\n    <button-footer>\\n        <cancel-btn>Cancel</cancel-btn>\\n        <submit-btn (onClick)=\\\"onSaveOrUpdateEssayComment()\\\">Save</submit-btn>\\n    </button-footer>\\n</form>\"","export default \"<header-route-menu-light [currentPageName]=\\\"currentModule.moduleType\\\" [moduleName]=\\\"questionName\\\"\\n    [createRoute]=\\\"currentModule.questionType\\\" [isPractise]=\\\"true\\\" (practiseEmit)=\\\"onPractise($event)\\\"\\n    [prevUrl]=\\\"'../../../'+currentModule.moduleType.toLowerCase()\\\"></header-route-menu-light>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 p-0\\\">\\n        <show-entries></show-entries>\\n    </div>\\n    <div class=\\\"col-md-6 p-0\\\">\\n        <search-box [hint]=\\\"'Search'\\\"></search-box>\\n    </div>\\n</div>\\n<ng-container *ngIf=\\\"isLoading; else showData\\\">\\n    <div>\\n        <table-loading [tType]=\\\"'c3-3'\\\"></table-loading>\\n    </div>\\n\\n</ng-container>\\n<ng-template #showData>\\n    <table role=\\\"table\\\" class=\\\"table-responsive\\\">\\n        <thead role=\\\"rowgroup\\\">\\n            <tr role=\\\"row\\\">\\n                <th role=\\\"columnheader\\\" class=\\\"fitter-able\\\" (click)=\\\"fitter('createdDate')\\\"\\n                    [class.fitter-active]='tableFilter.sortColumn==\\\"createdDate\\\"'>Create Date</th>\\n\\n                <th role=\\\"columnheader\\\" (click)=\\\"fitter('name')\\\" class=\\\"fitter-able\\\"\\n                    [class.fitter-active]='tableFilter.sortColumn==\\\"name\\\"'>Name</th>\\n\\n                <th role=\\\"columnheader\\\" style=\\\"width: 20%;\\\">Action</th>\\n            </tr>\\n        </thead>\\n\\n\\n        <tbody role=\\\"rowgroup\\\">\\n            <ng-container *ngFor=\\\"let data of questionList\\\">\\n                <tr role=\\\"row\\\" [class.table-selected]=\\\"isPractise==true && selectedId.includes(data.questionId)\\\"\\n                    (click)=\\\"onSelectedQuestion(data.questionId)\\\">\\n                    <td role=\\\"cell\\\">{{data.createdDate | defaultDate }}</td>\\n                    <td role=\\\"cell\\\">{{data.name}}</td>\\n                    <td>\\n                        <action-btn-gp [btnName]=\\\"'duplicate'\\\" [data]=\\\"data\\\" (onSubmit)=\\\"duplicateWord($event)\\\"\\n                            *ngIf=\\\"currentModule.moduleType=='SPEAKING'\\\"></action-btn-gp>\\n                        <action-btn-gp [btnName]=\\\"'evaluate'\\\" [directLink]=\\\"'AI-score/evaluate/'+data.evaluateUrl\\\">\\n                        </action-btn-gp>\\n                        <action-btn-gp [btnName]=\\\"'edit'\\\" [editId]=\\\"data.questionId\\\">\\n                        </action-btn-gp>\\n                        <action-btn-gp [btnName]=\\\"'delete'\\\" [data]=\\\"data\\\" (onSubmit)=\\\"deleteList($event)\\\">\\n                        </action-btn-gp>\\n                    </td>\\n            </ng-container>\\n            <tr *ngIf=\\\"tableFilter.totalCount == 0\\\" role=\\\"row\\\">\\n                <td colspan=\\\"4\\\" class=\\\"text-center\\\">\\n                    No Data Exit\\n                </td>\\n            </tr>\\n        </tbody>\\n\\n    </table>\\n\\n    <div class=\\\"d-flex justify-content-center my-2\\\">\\n        <pagination [totalCount]='tableFilter.totalCount'>\\n        </pagination>\\n    </div>\\n\\n</ng-template>\"","export default \"<header-route-menu-light [currentPageName]=\\\"'Essay Structure & Coherence'\\\" [moduleName]=\\\"'Essay'\\\">\\n</header-route-menu-light>\\n\\n<form [formGroup]=\\\"essayForm\\\" class=\\\"create-form\\\">\\n\\n    <div class=\\\"container mb-3\\\">\\n        <div class=\\\"row\\\">\\n            <!-- Introduction start-->\\n            <div class=\\\"col-md-12 mb-2\\\">\\n                <group-title> Introduction</group-title>\\n                <label-text>Content Keyword </label-text>\\n                <warning-text>(SEPARATE EACH WORD USING SEMICOLON (;) )</warning-text>\\n                <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\"\\n                    formControlName=\\\"answer\\\" (input)=\\\"str = $event.target.value\\\"></textarea>\\n            </div>\\n            <div class=\\\"col-md-12 mb-2\\\">\\n                <label-text>Maximum Keyword match</label-text>\\n                <warning-text>(TO GET FULL MARKS)</warning-text>\\n                <input type=\\\"text\\\" oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\"\\n                    formControlName=\\\"answer_number\\\" class=\\\"form-control pb_height-50 reverse;\\\" />\\n            </div>\\n            <!-- Introduction End-->\\n\\n         \\n\\n            <!-- Coherence/Connecting Words start-->\\n            <div class=\\\"col-md-12 mb-2\\\">\\n                <group-title> Coherence/Connecting</group-title>\\n                <label-text>Content Keyword</label-text>\\n                <warning-text>(SEPARATE EACH WORD USING SEMICOLON (;) )</warning-text>\\n                <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" formControlName=\\\"Coherence\\\"\\n                    (input)=\\\"str = $event.target.value\\\"></textarea>\\n            </div>\\n            <div class=\\\"col-md-12 mb-2\\\">\\n                <label-text>Maximum Keyword match</label-text>\\n                <warning-text>(TO GET FULL MARKS)</warning-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\"\\n                    oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\"\\n                    formControlName=\\\"Coherence_number\\\" />\\n            </div>\\n            <!-- Conclusion End-->\\n        </div>\\n    \\n    </div>\\n    <button-footer>\\n        <cancel-btn>Cancel</cancel-btn>\\n        <submit-btn (onClick)=\\\"onSaveOrUpdate()\\\">Save</submit-btn>\\n    </button-footer>\\n</form>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvY29tbWVudC9jb21tZW50LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonService, SaveService } from '@app/core/http/serviceIndex';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css']\n})\nexport class CommentComponent implements OnInit {\n  essayCommentForm: FormGroup=this.formBuilder.group({\n    comment1: [\"\", [Validators.required]],\n    minValue1: [\"\", [Validators.required]],\n    maxValue1: [\"\", [Validators.required]],\n    comment2: [\"\", [Validators.required]],\n    minValue2: [\"\", [Validators.required]],\n    maxValue2: [\"\", [Validators.required]],\n    comment3: [\"\", [Validators.required]],\n    minValue3: [\"\", [Validators.required]],\n    maxValue3: [\"\", [Validators.required]],\n    comment4: [\"\", [Validators.required]],\n    minValue4: [\"\", [Validators.required]],\n    maxValue4: [\"\", [Validators.required]],\n  });\n  \n  essayCommentIds: any[] = [];\n  public isProgress: boolean = false;\n  public submitted: boolean = false;\n  public check: boolean = false;\n  public wrong1: boolean = false;\n  public wrong2: boolean = false;\n  public wrong3: boolean = false;\n  public wrong4: boolean = false;\n  public subscription: Subscription;\n  public questionType:string;\n  public questionName:string;\n  constructor(\n    private formBuilder: FormBuilder,\n    private dataService: SaveService,\n    private _activeRoute:ActivatedRoute,\n    private _cservice:CommonService\n  ) { }\n\n  ngOnInit() {\n    this.questionType=this._activeRoute.snapshot.params['questionType'];\n    this.questionName=this._cservice.getquestionName(this.questionType);\n\n    this.getEssayComment(this._activeRoute.snapshot['data'].data);\n  }\n  get f() {\n    return this.essayCommentForm.controls;\n  }\n\n  goBack() {\n    this.dataService.goBackPrev();\n  }\n  public comments: Array<any> = [];\n  public mySentences: Array<object> = [\n    { id: 1, text: \"Sentence 1\" },\n    { id: 2, text: \"Sentence 2\" },\n    { id: 3, text: \"Sentence 3\" },\n    { id: 4, text: \"Sentenc4 \" },\n  ];\n\n  onSaveOrUpdateEssayComment() {\n    this.isProgress = true;\n    this.submitted = true;\n    let array = [];\n    if (this.essayCommentIds.length > 0) {\n      for (let i = 1; i <= 4; i++) {\n        array.push({\n          comment: this.essayCommentForm.get(`comment${i}`).value,\n          _id: this.essayCommentIds[i - 1],\n          minScore: Number(this.essayCommentForm.get(`minValue${i}`).value),\n          maxScore: Number(this.essayCommentForm.get(`maxValue${i}`).value),\n          commentType: \"ESSAY\",\n          order: i,\n        });\n      }\n    } else {\n      for (let i = 1; i <= 4; i++) {\n        array.push({\n          comment: this.essayCommentForm.get(`comment${i}`).value,\n          minScore: Number(this.essayCommentForm.get(`minValue${i}`).value),\n          maxScore: Number(this.essayCommentForm.get(`maxValue${i}`).value),\n          commentType: \"ESSAY\",\n          order: i,\n        });\n      }\n    }\n    let min1 = this.essayCommentForm.controls.minValue1.value;\n    let max1 = this.essayCommentForm.controls.maxValue1.value;\n    if (min1 > max1) {\n      this.wrong1 = true;\n      this.isProgress = false;\n    }\n    let min2 = this.essayCommentForm.controls.minValue2.value;\n    let max2 = this.essayCommentForm.controls.maxValue2.value;\n\n    if (min2 > max2) {\n      this.wrong2 = true;\n      this.isProgress = false;\n    }\n    let min3 = this.essayCommentForm.controls.minValue3.value;\n    let max3 = this.essayCommentForm.controls.maxValue3.value;\n    if (min3 > max3) {\n      this.wrong3 = true;\n      this.isProgress = false;\n    }\n    let min4 = this.essayCommentForm.controls.minValue4.value;\n    let max4 = this.essayCommentForm.controls.maxValue4.value;\n    if (min4 > max4) {\n      this.wrong4 = true;\n      this.isProgress = false;\n    }\n    if (this.wrong1 || this.wrong2 || this.wrong3 || this.wrong4) {\n      return;\n    }\n\n    let obj = { comments: array };\n\n    this.subscription = this.dataService.onSaveComment(obj,this.questionType).subscribe(() => {\n      this.goBack();\n    });\n  }\n\n  getEssayComment(res) {\n        if (res.length == 0) {\n          this.isProgress = false;\n        } else {\n          if (res.length > 0) {\n            for (let i = 0; i < 4; i++) {\n              this.essayCommentIds.push(res[i]._id);\n            }\n\n            this.essayCommentForm = this.formBuilder.group({\n              comment1: [res[0].comment, [Validators.required]],\n              minValue1: [res[0].minScore, [Validators.required]],\n              maxValue1: [res[0].maxScore, [Validators.required]],\n              comment2: [res[1].comment, [Validators.required]],\n              minValue2: [res[1].minScore, [Validators.required]],\n              maxValue2: [res[1].maxScore, [Validators.required]],\n              comment3: [res[2].comment, [Validators.required]],\n              minValue3: [res[2].minScore, [Validators.required]],\n              maxValue3: [res[2].maxScore, [Validators.required]],\n              comment4: [res[3].comment, [Validators.required]],\n              minValue4: [res[3].minScore, [Validators.required]],\n              maxValue4: [res[3].maxScore, [Validators.required]],\n            });\n          }\n        }\n       \n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule, Route } from \"@angular/router\";\nimport { CommentComponent } from \"@app/modules/manage/manage-questions/comment/comment.component\";\nimport { QuestionsComponent } from \"@app/modules/manage/manage-questions/questions/questions.component\";\nimport { CommentResolver } from \"@app/modules/manage/manage-questions/reslovers/comment.reslover\";\nimport { EssayStructureResolver } from \"@app/modules/manage/manage-questions/reslovers/essay-structure.reslover\";\nimport { StructureComponent } from \"@app/modules/manage/manage-questions/structure/structure.component\";\n\n\n\n\n\nconst routes: Routes = [\n  {\n    path: \":questionType\",\n    component: QuestionsComponent,\n  },\n  {\n    path: \":questionType/essay-structure-coherence\",\n    component: StructureComponent,\n    resolve: {\n      data: EssayStructureResolver\n    }\n  },\n  {\n    path: \":questionType/comments\",\n    component: CommentComponent,\n    resolve: {\n      data: CommentResolver\n    },\n    data: {\n      name: 'essays/essay-comments'\n    }\n  },\n\n  {\n    path: \":questionType/create\",\n    loadChildren: \"@app/modules/manage/manage-questions/question-create/question-create.module#QuestionCreateModule\"\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    EssayStructureResolver,\n    CommentResolver\n  ]\n})\n\nexport class ManageQuestionsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { QuestionsComponent } from './questions/questions.component';\nimport { ManageQuestionsRoutingModule } from '@app/modules/manage/manage-questions/manage-questions-routing';\nimport { BasicModule } from '@app/shared/basic-components/basic.module';\nimport { CommentComponent } from './comment/comment.component';\nimport { StructureComponent } from './structure/structure.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    QuestionsComponent,\n    CommentComponent,\n    StructureComponent,\n   \n  ],\n  imports: [\n    CommonModule,\n    ManageQuestionsRoutingModule,\n    BasicModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports:[\n    ManageQuestionsRoutingModule\n  ]\n})\nexport class ManageQuestionsModule { }\n","export default \"/* table responsive */\\n\\n@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {\\n    /*\\n                      Label the data\\n                  You could also use a data-* attribute and content for this. That way \\\"bloats\\\" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.\\n                      */\\n    td:nth-of-type(1):before {\\n        content: \\\"Create Date\\\";\\n    }\\n    td:nth-of-type(2):before {\\n        content: \\\"Name\\\";\\n    }\\n    td:nth-of-type(3):before {\\n        content: \\\"Action\\\";\\n    }\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9tYW5hZ2UvbWFuYWdlLXF1ZXN0aW9ucy9xdWVzdGlvbnMvcXVlc3Rpb25zLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEscUJBQXFCOztBQUVyQjtJQUNJOzs7dUJBR21CO0lBQ25CO1FBQ0ksc0JBQXNCO0lBQzFCO0lBQ0E7UUFDSSxlQUFlO0lBQ25CO0lBQ0E7UUFDSSxpQkFBaUI7SUFDckI7QUFDSiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb25zL3F1ZXN0aW9ucy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogdGFibGUgcmVzcG9uc2l2ZSAqL1xuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2MHB4KSwgKG1pbi1kZXZpY2Utd2lkdGg6IDc2OHB4KSBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDEwMjRweCkge1xuICAgIC8qXG4gICAgICAgICAgICAgICAgICAgICAgTGFiZWwgdGhlIGRhdGFcbiAgICAgICAgICAgICAgICAgIFlvdSBjb3VsZCBhbHNvIHVzZSBhIGRhdGEtKiBhdHRyaWJ1dGUgYW5kIGNvbnRlbnQgZm9yIHRoaXMuIFRoYXQgd2F5IFwiYmxvYXRzXCIgdGhlIEhUTUwsIHRoaXMgd2F5IG1lYW5zIHlvdSBuZWVkIHRvIGtlZXAgSFRNTCBhbmQgQ1NTIGluIHN5bmMuIExlYSBWZXJvdSBoYXMgYSBjbGV2ZXIgd2F5IHRvIGhhbmRsZSB3aXRoIHRleHQtc2hhZG93LlxuICAgICAgICAgICAgICAgICAgICAgICovXG4gICAgdGQ6bnRoLW9mLXR5cGUoMSk6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJDcmVhdGUgRGF0ZVwiO1xuICAgIH1cbiAgICB0ZDpudGgtb2YtdHlwZSgyKTpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIk5hbWVcIjtcbiAgICB9XG4gICAgdGQ6bnRoLW9mLXR5cGUoMyk6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJBY3Rpb25cIjtcbiAgICB9XG59XG4iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CommonService, TableListService } from '@app/core/http/serviceIndex';\nimport { HeaderRouteMenuLightComponent } from '@app/shared/basic-components/components/header-route-menu-light/header-route-menu-light.component';\nimport { HeaderRouteMenuComponent } from '@app/shared/basic-components/components/header-route-menu/header-route-menu.component';\nimport { Question } from '@app/shared/models/question';\nimport { QuestionsList } from '@app/shared/models/question-list';\nimport { TableFilter } from '@app/shared/models/table-filter';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html',\n  styleUrls: ['./questions.component.css']\n})\nexport class QuestionsComponent implements OnInit {\n  @ViewChild(HeaderRouteMenuLightComponent, { static: false }) private header: HeaderRouteMenuLightComponent;\n\n\n  private currentModule: any = {};\n  public questionName: string;\n\n  public questionList: Question[];\n  public tableFilter = <TableFilter>{};\n\n  private subscription: Subscription;\n  public isAsc: boolean = true;\n\n  public isLoading: boolean;\n  public selectedId: string[] = [];\n\n  public isPractise: boolean = false;\n\n  constructor(\n    private _activeRoute: ActivatedRoute, private _tableService: TableListService,\n    private _cservice: CommonService, private _router: Router\n  ) {\n    // this._router.routeReuseStrategy.shouldReuseRoute = () => true;\n  }\n\n  ngOnInit() {\n    this.currentModule = this._activeRoute.snapshot.params;\n    this.questionName = this._cservice.getquestionName(this.currentModule.questionType)\n    this._activeRoute.queryParams.subscribe(\n      (params) => {\n\n        this.isPractise = params.isPractise ? Boolean(params.isPractise) : false;\n        if (params.page) {\n          this.tableFilter.page = params.page;\n          this.tableFilter.limit = params.limit;\n        } else if (params.search) {\n          this.tableFilter.search = params.search;\n        } else {\n          this.tableFilter.page = 1;\n          this.tableFilter.limit = 10;\n          this.tableFilter.sortColumn = 'createdDate';\n          this.tableFilter.sortDirection = 'asc';\n        }\n        this.getQuestionList();\n      }\n    )\n  }\n\n  getQuestionList() {\n    this.isLoading = true;\n    this.subscription = this._tableService.getManageQuestionList(this.tableFilter, this.currentModule)\n      .subscribe((res: QuestionsList) => {\n        this.questionList = res.questions;\n        this.tableFilter = res.filter;\n        this.isLoading = false;\n        if (this.currentModule.moduleType == 'READING')\n          for (const obj of this.questionList) {\n            if (obj.isPractise) this.selectedId.push(obj.questionId);\n          }\n      })\n  }\n\n\n  fitter(sortColumn) {\n    this.isAsc = !this.isAsc ? this.isAsc = true : this.isAsc = false;\n    this.tableFilter.sortDirection = this.isAsc ? 'asc' : 'desc';\n    this.tableFilter.sortColumn = sortColumn;\n    this.getQuestionList();\n  }\n\n  deleteList(data) {\n    this.subscription = this._tableService.onDeleteQuestion(data.questionId, this.currentModule.moduleType.toLowerCase(), data.questionType)\n      .subscribe((res) => {\n        this.getQuestionList();\n      })\n  }\n\n\n  onPractise(emit) {\n    this.isPractise = emit;\n    this._router.navigate([],\n      {\n        queryParams: { isPractise: emit },\n        queryParamsHandling: 'merge',\n      });\n\n    if (this.selectedId.length != 0 && this.isPractise == false) {\n      let tempObj = {\n        \"idList\": this.selectedId\n      }\n      this.subscription = this._tableService.onReadingPractise(this.currentModule.questionType, tempObj)\n        .subscribe(() => {\n          // this.getQuestionList();\n          // this._router.navigate([],\n          //   {\n          //     queryParams: { isPractise: false },\n          //     queryParamsHandling: 'merge',\n          //   });\n          this.isPractise = false;\n          // this.header.setPractise=false;\n        })\n    }\n  }\n\n  onSelectedQuestion(id: string) {\n    if (this.isPractise) {\n      let index = this.selectedId.indexOf(id);\n      if (this.selectedId.includes(id)) {\n        this.selectedId.splice(index, 1)\n      } else {\n        this.selectedId.push(id);\n      }\n    }\n  }\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    if (this.subscription) this.subscription.unsubscribe();\n  }\n}\n","import { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DetailService } from '@app/core/http/detail.service';\n\n@Injectable()\nexport class CommentResolver implements Resolve<any> {\n\n    constructor(private question: DetailService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot):\n        Observable<any> {\n        let url = `writing/${route.params['questionType']}/comments`\n        return this.question.getDetail(url);\n    }\n}","import { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DetailService } from '@app/core/http/detail.service';\n\n@Injectable()\nexport class EssayStructureResolver implements Resolve<any> {\n\n    constructor(private question: DetailService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot):\n        Observable<any> {\n        let url='essays/essay-structure-coherence';\n        return this.question.getDetail(url);\n    }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvc3RydWN0dXJlL3N0cnVjdHVyZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/save.service';\nimport { EssaySubStructure, Essay_Structure } from '@app/shared/models/WritingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-structure',\n  templateUrl: './structure.component.html',\n  styleUrls: ['./structure.component.css']\n})\nexport class StructureComponent implements OnInit {\n\n  essayForm: FormGroup = this.formBuilder.group({\n    answer: [\"\", [Validators.required]],\n    answer_number: [\"\", [Validators.required]],\n    Coherence: [\"\", [Validators.required]],\n    Coherence_number: [\"\", [Validators.required]],\n  });\n\n  essayStructureID: any = \"\";\n  isProgress: boolean = false;\n  public subscription: Subscription;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private _activeRoute: ActivatedRoute,\n    private _saveService: SaveService\n  ) { }\n\n\n  essay_structure: Essay_Structure;\n  ngOnInit() {\n    this.isProgress = true;\n    this.getEssayStructure(this._activeRoute.snapshot.data['data'])\n  }\n\n  getEssayStructure(res) {\n    this.essayStructureID = res._id;\n    this.essayForm = this.formBuilder.group({\n      answer: [\n        res.answer.structureKeywords,\n        [Validators.required],\n      ],\n      answer_number: [\n        res.answer.maxKeyword,\n        [Validators.required],\n      ],\n   \n      Coherence: [res.coherence.structureKeywords, [Validators.required]],\n      Coherence_number: [res.coherence.maxKeyword, [Validators.required]],\n    });\n\n  }\n\n  onSaveOrUpdate() {\n    this.isProgress = true;\n    this.essay_structure = new Essay_Structure();\n    // this.essay_structure.i = EssaySubStructure.create(string , number)\n    this.essay_structure._id = this.essayStructureID;\n    // For Introduction..\n    this.essay_structure.answer = EssaySubStructure.create(\n      this.essayForm.get(\"answer\").value\n        ? this.essayForm.get(\"answer\").value\n        : \"\",\n      this.essayForm.get(\"answer_number\").value\n        ? Number(this.essayForm.get(\"answer_number\").value)\n        : 0\n    );\n  \n\n    this.subscription = this._saveService\n      .onSaveStructure(this.essay_structure)\n      .subscribe(() => {\n        this.goBack();\n      });\n  }\n\n  goBack() {\n    this._saveService.goBackPrev();\n  }\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n","export class EssayDetail{\n  essayId: string;\n  essayName: EssaySubStructure;\n  questionType: string;\n}\nexport class Essay_Structure {\n  _id: string;\n  answer: EssaySubStructure;\n  // body1: EssaySubStructure;\n  // body2: EssaySubStructure;\n  // conclusion: EssaySubStructure;\n  // coherence: EssaySubStructure;\n}\n\nexport class EssayEvaluation {\n  essayId: string;\n  version: String;\n  userAnswer: EssaySubEvaluate;\n  // body1: EssaySubEvaluate;\n  // body2: EssaySubEvaluate;\n  // conclusion: EssaySubEvaluate;\n  questionType:string;\n}\n\n\nexport class EssaySubStructure {\n  structureKeywords: string;\n  maxKeyword: number;\n\n  constructor(sk, mk) {\n    this.structureKeywords = sk;\n    this.maxKeyword = mk;\n  }\n  static create(sk, mk) {\n    return new EssaySubStructure(sk, mk);\n  }\n}\n\nexport class EssaySubEvaluate {\n  contents: string;\n  wordCount: number;\n\n  constructor(sk, mk) {\n    this.contents = sk;\n    this.wordCount = mk;\n  }\n  static create(sk, mk) {\n    return new EssaySubEvaluate(sk, mk);\n  }\n}\n\n\nexport class EssayWriting {\n  essayId: string;\n  name: String;\n  answer: EssaySubWriting;\n\n  adviseContent: String;\n}\n\nexport class EssaySubWriting {\n  contentKeywords: string;\n  maxKeyword: number;\n  maxWordLimit: number;\n\n  constructor(contentKeywords, maxWordLimit, maxKeyword) {\n    this.contentKeywords = contentKeywords;\n    this.maxKeyword = maxKeyword;\n    this.maxWordLimit = maxWordLimit\n  }\n  static create(ck, max, mk) {\n    return new EssaySubWriting(ck, max, mk);\n  }\n}\n\n\nexport class SummaryEvaluation {\n  version: string;\n  yoursummary: string;\n  totalWordCount: number;\n  summaryId: string;\n  totalMinutes: number;\n  isSubmit: boolean;\n  questionType:string;\n}\n\n\nexport class SummaryWriting {\n  summaryId: string;\n  name: string;\n  type: string;\n  question: string;\n  contentKeywords: string;\n  vocabularyWords: string;\n  unwantedContentKeywords: string;\n  maxContentKeywords: number;\n  maxWordLimit: number;\n  maxVocabularyWords: number;\n  adviseContent: string;\n}\n\n\nexport class SummaryDetail {\n  summaryId: string;\n  summaryName: string;\n  summaryQuestion: string;\n  questionType: string;\n  audioFile:\"\"\n}\n"],"sourceRoot":"webpack:///","file":"app-modules-manage-manage-questions-manage-questions-module-es5.3871757d3fe41ccd2681.js"}