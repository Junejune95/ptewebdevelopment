{"version":3,"sources":["./src/app/modules/manage/predictions/predictions-board/predictions-board.component.html","./src/app/modules/manage/predictions/predictions-create/predictions-create.component.html","./src/app/modules/manage/predictions/predictions-list/predictions-list.component.html","./src/app/modules/manage/predictions/predictions/predictions.component.html","./src/app/modules/manage/predictions/predictions-board/predictions-board.component.css","./src/app/modules/manage/predictions/predictions-board/predictions-board.component.ts","./src/app/modules/manage/predictions/predictions-create/predictions-create.component.css","./src/app/modules/manage/predictions/predictions-create/predictions-create.component.ts","./src/app/modules/manage/predictions/predictions-list/predictions-list.component.css","./src/app/modules/manage/predictions/predictions-list/predictions-list.component.ts","./src/app/modules/manage/predictions/predictions-routing.module.ts","./src/app/modules/manage/predictions/predictions.module.ts","./src/app/modules/manage/predictions/predictions/predictions.component.css","./src/app/modules/manage/predictions/predictions/predictions.component.ts"],"names":[],"mappings":"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","file":"app-modules-manage-predictions-predictions-module-es2015.js","sourcesContent":["export default \"<header-route-menu-light [currentPageName]=\\\"'Prediction File'\\\" [moduleName]=\\\"'Question Bank'\\\"\\n></header-route-menu-light>\\n<div class=\\\"row\\\">\\n    <ng-container *ngFor=\\\"let qb of questionBank.questionBank\\\">\\n        <div class=\\\"col-md-6 col-xl-3\\\">\\n            <question-card [questionBank]=\\\"qb\\\" (click)=\\\"goToList(qb)\\\" [isManage]=\\\"true\\\"></question-card>\\n        </div>\\n    </ng-container>\\n</div>\"","export default \"<header-route-menu-light [currentPageName]=\\\"'Prediction File'\\\" [moduleName]=\\\"moduleName\\\"></header-route-menu-light>\\n\\n<div class=\\\"container py-3\\\">\\n  <div>\\n    <div class=\\\"d-flex step-wrapper\\\">\\n      <div class=\\\"step-1\\\" [ngClass]=\\\"{ 'step-active': isStep1 == true }\\\">\\n        <p>Step 1</p>\\n      </div>\\n      <div class=\\\"step-2\\\" [ngClass]=\\\"{ 'step-active': isStep1 == false }\\\">\\n        <p>Step 2</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"isStep1\\\">\\n    <form [formGroup]=\\\"createForm\\\">\\n      <div class=\\\"row my-2\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <label-text>Prediction File Name</label-text>\\n          <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\" placeholder=\\\"Write Prediction File Name\\\" />\\n        </div>\\n      </div>\\n      <div class=\\\"row mb-2\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <label-text>Select Plan Type</label-text>\\n          <select class=\\\"select-box form-control\\\" formControlName=\\\"type\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.type.errors }\\\">\\n            <option value=\\\"\\\" disabled selected hidden>Select Type</option>\\n            <option *ngFor=\\\"let type of typeList;let i=index\\\" [ngValue]=\\\"type.questionType\\\">{{ type.questionName }}\\n            </option>\\n          </select>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"footer-button-block\\\">\\n        <button class=\\\"btn btn-cancel\\\" (click)=\\\"goBack()\\\">Cancel</button>\\n        <button class=\\\"btn btn-next\\\" (click)=\\\"goToStep2()\\\">Continue</button>\\n      </div>\\n\\n\\n    </form>\\n  </div>\\n  <div *ngIf=\\\"!isStep1\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <show-entries (data)=\\\"selectedData($event)\\\"></show-entries>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <search-box [hint]=\\\"'Search Question'\\\" (searchData)=\\\"searchDatas($event)\\\" [isEmit]=\\\"true\\\"></search-box>\\n      </div>\\n    </div>\\n\\n    <ng-container *ngIf=\\\"!selectedLists; else showData\\\">\\n      <div>\\n        <table-loading [tType]=\\\"'c4-1'\\\"></table-loading>\\n      </div>\\n    </ng-container>\\n    <ng-template #showData>\\n      <table role=\\\"table\\\" class=\\\"table-responsive\\\">\\n        <thead role=\\\"rowgroup\\\">\\n          <tr role=\\\"row\\\">\\n            <th role=\\\"columnheader\\\" (click)=\\\"fitter('createdDate')\\\" class=\\\"fitter-able\\\"\\n              [class.fitter-active]='tableFilter.sortColumn==\\\"createdDate\\\"'>Created Date</th>\\n\\n            <th role=\\\"columnheader\\\" (click)=\\\"fitter('name')\\\" class=\\\"fitter-able\\\"\\n              [class.fitter-active]='tableFilter.sortColumn==\\\"name\\\"'>Name</th>\\n\\n            <th role=\\\"columnheader\\\">Question Name</th>\\n\\n            <th role=\\\"columnheader\\\" style=\\\"width: 20%;\\\">Action</th>\\n          </tr>\\n        </thead>\\n\\n        <tbody role=\\\"rowgroup\\\">\\n          <ng-container *ngFor=\\\"let data of selectedLists\\\">\\n            <tr role=\\\"row\\\" (click)=\\\"selectfile(data.questionId)\\\"\\n              [class.table-selected]=\\\"selectedQues.includes(data.questionId) == true\\\">\\n              <td role=\\\"cell\\\">{{data.createdDate | defaultDate}}</td>\\n\\n              <td role=\\\"cell\\\">{{data.name}}</td>\\n              <td role=\\\"cell\\\">{{data.questionType}}</td>\\n              <td>\\n                <action-btn-gp [btnName]=\\\"'view'\\\" [directLink]=\\\"\\\" isNewTab=\\\"true\\\"></action-btn-gp>\\n              </td>\\n            </tr>\\n          </ng-container>\\n\\n          <tr *ngIf=\\\"tableFilter.totalCount == 0\\\" role=\\\"row\\\">\\n            <td colspan=\\\"4\\\" class=\\\"text-center\\\">\\n              No Data Exit\\n            </td>\\n          </tr>\\n        </tbody>\\n\\n      </table>\\n\\n      <div class=\\\"d-flex justify-content-center my-2\\\">\\n        <pagination [tableFilter]='tableFilter' (getPage)=\\\"changePage($event)\\\">\\n        </pagination>\\n      </div>\\n\\n      <div class=\\\"footer-button-block\\\">\\n        <button class=\\\"btn btn-cancel\\\" (click)=\\\"backStep1()\\\">Cancel</button>\\n        <button class=\\\"btn btn-next\\\" (click)=\\\"checkAvaiable()\\\">Submit</button>\\n      </div>\\n\\n      <dialog-box *ngIf=\\\"isDialog\\\" (onconfirm)=\\\"checkconfirm($event)\\\" [dialogEntry]=\\\"dialog\\\"></dialog-box>\\n\\n    </ng-template>\\n\\n  </div>\\n</div>\"","export default \"<header-route-menu-light [currentPageName]=\\\"'Question Bank'\\\" [moduleName]=\\\"currentModule\\\"\\n    [createRoute]=\\\"'alchemist-academy/manage/full-mock-test/create'\\\"></header-route-menu-light>\\n\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 p-0\\\">\\n        <show-entries></show-entries>\\n    </div>\\n    <div class=\\\"col-md-6 p-0\\\">\\n        <search-box [hint]=\\\"'Search'\\\"></search-box>\\n    </div>\\n</div>\\n<ng-container *ngIf=\\\"isLoading; else showData\\\">\\n    <div>\\n        <table-loading [tType]=\\\"'c4-1'\\\"></table-loading>\\n    </div>\\n\\n</ng-container>\\n<ng-template #showData>\\n    <table role=\\\"table\\\" class=\\\"table-responsive\\\">\\n        <thead role=\\\"rowgroup\\\">\\n            <tr role=\\\"row\\\">\\n                <th role=\\\"columnheader\\\" class=\\\"fitter-able\\\" (click)=\\\"fitter('name')\\\"\\n                    [class.fitter-active]='tableFilter.sortColumn==\\\"name\\\"'>Name</th>\\n\\n                <th role=\\\"columnheader\\\" style=\\\"width: 30%;\\\">Question Type</th>\\n\\n                <th role=\\\"columnheader\\\" style=\\\"width: 15%;\\\">Action</th>\\n            </tr>\\n        </thead>\\n\\n\\n        <tbody role=\\\"rowgroup\\\" [class]=\\\"currentModule.moduleName\\\">\\n            <ng-container *ngFor=\\\"let data of predictions\\\">\\n                <tr role=\\\"row\\\">\\n                    <td role=\\\"cell\\\">{{data.name}}</td>\\n                    <td role=\\\"cell\\\">{{data.questionName}}</td>\\n                    <td>\\n                        <action-btn-gp [btnName]=\\\"'start'\\\" [data]=\\\"data\\\" *ngIf=\\\"data.isActive == 'Not Active'\\\" (onSubmit)=\\\"startClass($event)\\\"></action-btn-gp>\\n                        <action-btn-gp [btnName]=\\\"'end'\\\" [data]=\\\"data\\\" *ngIf=\\\"data.isActive == 'Running'\\\" (onSubmit)=\\\"startClass($event)\\\"></action-btn-gp>\\n                        <action-btn-gp [btnName]=\\\"'edit'\\\" [editId]=\\\"data.questionId\\\"></action-btn-gp>\\n                        <action-btn-gp [btnName]=\\\"'delete'\\\" [data]=\\\"data\\\" (onSubmit)=\\\"deletePrediction($event)\\\"></action-btn-gp>\\n                    </td>\\n\\n            </ng-container>\\n\\n\\n\\n            <tr *ngIf=\\\"tableFilter.totalCount == 0\\\" role=\\\"row\\\">\\n                <td colspan=\\\"4\\\" class=\\\"text-center\\\">\\n                    No Data Exit\\n                </td>\\n            </tr>\\n        </tbody>\\n\\n    </table>\\n\\n    <div class=\\\"d-flex justify-content-center my-2\\\">\\n        <pagination [totalCount]='tableFilter.totalCount'>\\n        </pagination>\\n    </div>\\n\\n</ng-template>\"","export default \"\\n\\n<header-route-menu [currentPageName]=\\\"'Manage'\\\"></header-route-menu>\\n\\n<div class=\\\"container-fluid mt--6\\\">\\n\\n   <router-outlet></router-outlet>\\n   \\n\\n</div>\\n\\n\\n\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL3ByZWRpY3Rpb25zL3ByZWRpY3Rpb25zLWJvYXJkL3ByZWRpY3Rpb25zLWJvYXJkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CheckProgress } from '@app/shared/models/check-progress';\n\n@Component({\n  selector: 'app-predictions-board',\n  templateUrl: './predictions-board.component.html',\n  styleUrls: ['./predictions-board.component.css']\n})\nexport class PredictionsBoardComponent implements OnInit {\n\n  public questionBank:CheckProgress;\n\n  constructor(private _activeRoute:ActivatedRoute,private _router:Router) { }\n\n  ngOnInit() {\n    this.questionBank=this._activeRoute.snapshot.data[\"questionBank\"];\n  }\n\n  goToList(data){\n    this._router.navigate([data.moduleType], { relativeTo: this._activeRoute });\n\n  }\n\n}\n","export default \"\\n\\n\\n.hidden {\\n    overflow-x: hidden;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9tYW5hZ2UvcHJlZGljdGlvbnMvcHJlZGljdGlvbnMtY3JlYXRlL3ByZWRpY3Rpb25zLWNyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUdBO0lBQ0ksa0JBQWtCO0FBQ3RCIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9tYW5hZ2UvcHJlZGljdGlvbnMvcHJlZGljdGlvbnMtY3JlYXRlL3ByZWRpY3Rpb25zLWNyZWF0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG5cblxuLmhpZGRlbiB7XG4gICAgb3ZlcmZsb3cteDogaGlkZGVuO1xufVxuXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonService } from '@app/core/http/common.service';\nimport { SaveService } from '@app/core/http/save.service';\nimport { TableListService } from '@app/core/http/table-list.service';\nimport { PredictionDetail } from '@app/shared/models/prediction';\nimport { PredictionFile, User } from '@app/shared/models/CommonModel';\nimport { QuestionsList } from '@app/shared/models/question-list';\nimport { TableFilter } from '@app/shared/models/table-filter';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-predictions-create',\n  templateUrl: './predictions-create.component.html',\n  styleUrls: ['./predictions-create.component.css']\n})\nexport class PredictionsCreateComponent implements OnInit {\n  public moduleName:string;\n\n\n  public dialog: any = {\n    showText: \"\",\n    isDelete: false,\n    isWarning: true,\n    isconfirmBtn: false\n  }\n\n  createForm: FormGroup;\n  public typeList: any ;\n\n  public selectedLists: any = [];\n  public selectedQues:Array<string>=[];\n  // any\n  public predictionID: any;\n\n  public searchData: any;\n  tableFilter = <TableFilter>{\n    page:1,\n    limit:10,\n    sortColumn:'createdDate',\n    sortDirection:'desc',\n    search:null\n  };\n\n  // boolean\n  public isStep1: boolean = true;\n  public submitted: boolean = false;\n  public isAsc: boolean = true;\n  public isDialog: boolean = false;\n  public isProgress: boolean = true;\n  public subscription: Subscription;\n\n  constructor(\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _saveService: SaveService,\n    private _cservice: CommonService,\n    private _tableService:TableListService\n  ) {\n    this.createForm = this.formBuilder.group({\n      name: [\"\", [Validators.required]],\n      type: [\"\", [Validators.required]],\n    });\n  }\n\n  ngOnInit() {\n    this.moduleName = this._activeRoute.snapshot.params['moduleName'];\n    this.typeList=this._activeRoute.snapshot.data['questionType'].questions;\n    let data = this._activeRoute.snapshot.data['predictionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n\n  }\n\n  getDataEditForm(data: PredictionDetail) {\n    this.predictionID=data.predictionId;\n    this.createForm =  this.formBuilder.group({\n      name: [data.name, [Validators.required]],\n      type: [data.questionType, [Validators.required]],\n    });\n    this.selectedQues=data.questions;\n  }\n\n\n  goToStep2() {\n    this.submitted = true;\n    if (this.createForm.invalid) {\n      return;\n    } else {\n\n      this.isStep1 = false;\n      this.tableFilter={\n        page:1,\n        limit:10,\n        sortColumn:'createdDate',\n        sortDirection:'desc'\n      };\n      this.getSelectLists();\n    }\n  }\n\n  backStep1() {\n    this.isStep1 = true;\n    this.tableFilter={\n      page:1,\n      limit:10,\n      sortColumn:'createdDate',\n      sortDirection:'desc'\n    };\n  }\n\n  selectedData(e) {\n    this.tableFilter.limit = e;\n    this.getSelectLists();\n  }\n\n  searchDatas(e) {\n    this.tableFilter.search = e;\n    this.getSelectLists();\n  }\n\n  get f() {\n    return this.createForm.controls;\n  }\n\n  getSelectLists() {\n    this.selectedLists =null;\n    let module={\n      moduleType:this.moduleName,\n      questionType:this.createForm.value.type\n    };\n    this.subscription=this._tableService.getManageQuestionList(this.tableFilter,module)\n    .subscribe((res:QuestionsList)=>{\n      this.tableFilter=res.filter;\n      this.selectedLists=res.questions;\n    })\n \n  }\n\n  selectfile(id) {\n    let index = this.selectedQues.indexOf(id);\n    if (this.selectedQues.includes(id)) {\n      this.selectedQues.splice(index, 1);\n    } else {\n      this.selectedQues.push(id);\n    }\n  }\n\n  onSave() {\n    this.isProgress=true;\n    let obj = new PredictionFile();\n    obj.name = this.createForm.value.name;\n    obj.questionType = this.createForm.value.type;\n    obj.questions = this.selectedQues;\n    this.subscription = this._saveService.onSavePrediction(obj,this.moduleName,this.predictionID).subscribe((res) => {\n      this.goBack();\n    });\n  }\n\n\n  goBack() {\n    this._cservice.goBackPrev();\n  }\n\n  changePage(e) {\n    this.tableFilter.page = e;\n    this.getSelectLists();\n  }\n\n  checkAvaiable() {\n    if (this.selectedQues.length == 0) {\n      this.isDialog = true;\n      this.dialog.showText = 'Select Question!'\n    } else {\n      this.onSave();\n    }\n  }\n\n  checkconfirm(e) {\n    this.isDialog = e;\n  }\n\n\n  fitter(sortColumn) {\n    this.isAsc = !this.isAsc ? this.isAsc = true : this.isAsc = false;\n    this.tableFilter.sortDirection = this.isAsc ? 'asc' : 'desc';\n    this.tableFilter.sortColumn = sortColumn;\n    this.getSelectLists();\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"/* table responsive */\\n\\n@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {\\n    /*\\n                      Label the data\\n                  You could also use a data-* attribute and content for this. That way \\\"bloats\\\" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.\\n                      */\\n    td:nth-of-type(1):before {\\n        content: \\\"Name\\\";\\n    }\\n    td:nth-of-type(2):before {\\n        content: \\\"Question Type\\\";\\n    }\\n    td:nth-of-type(3):before {\\n        content: \\\"Action\\\";\\n    }\\n\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9tYW5hZ2UvcHJlZGljdGlvbnMvcHJlZGljdGlvbnMtbGlzdC9wcmVkaWN0aW9ucy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEscUJBQXFCOztBQUVyQjtJQUNJOzs7dUJBR21CO0lBQ25CO1FBQ0ksZUFBZTtJQUNuQjtJQUNBO1FBQ0ksd0JBQXdCO0lBQzVCO0lBQ0E7UUFDSSxpQkFBaUI7SUFDckI7O0FBRUoiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL21hbmFnZS9wcmVkaWN0aW9ucy9wcmVkaWN0aW9ucy1saXN0L3ByZWRpY3Rpb25zLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIHRhYmxlIHJlc3BvbnNpdmUgKi9cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjBweCksIChtaW4tZGV2aWNlLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAvKlxuICAgICAgICAgICAgICAgICAgICAgIExhYmVsIHRoZSBkYXRhXG4gICAgICAgICAgICAgICAgICBZb3UgY291bGQgYWxzbyB1c2UgYSBkYXRhLSogYXR0cmlidXRlIGFuZCBjb250ZW50IGZvciB0aGlzLiBUaGF0IHdheSBcImJsb2F0c1wiIHRoZSBIVE1MLCB0aGlzIHdheSBtZWFucyB5b3UgbmVlZCB0byBrZWVwIEhUTUwgYW5kIENTUyBpbiBzeW5jLiBMZWEgVmVyb3UgaGFzIGEgY2xldmVyIHdheSB0byBoYW5kbGUgd2l0aCB0ZXh0LXNoYWRvdy5cbiAgICAgICAgICAgICAgICAgICAgICAqL1xuICAgIHRkOm50aC1vZi10eXBlKDEpOmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiTmFtZVwiO1xuICAgIH1cbiAgICB0ZDpudGgtb2YtdHlwZSgyKTpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIlF1ZXN0aW9uIFR5cGVcIjtcbiAgICB9XG4gICAgdGQ6bnRoLW9mLXR5cGUoMyk6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJBY3Rpb25cIjtcbiAgICB9XG5cbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { EvaluateQuestionService } from '@app/core/http/evaluate-question.service';\nimport { TableListService } from '@app/core/http/table-list.service';\nimport { Prediction, PredictionList } from '@app/shared/models/prediction';\nimport { TableFilter } from '@app/shared/models/table-filter';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-predictions-list',\n  templateUrl: './predictions-list.component.html',\n  styleUrls: ['./predictions-list.component.css']\n})\nexport class PredictionsListComponent implements OnInit {\n\n  public currentModule:string;\n\n  public tableFilter=<TableFilter>{};\n  public isLoading:boolean=false;\n  public predictions:Prediction[];\n  private subscription:Subscription;\n  private isAsc:boolean=false;\n\n  constructor(private _activeRoute:ActivatedRoute,private _tableService:TableListService,) { }\n\n  ngOnInit() {\n    this.currentModule=this._activeRoute.snapshot.params['moduleName'];\n    this._activeRoute.queryParams.subscribe(\n      (params) => {\n        if (params.page) {\n          this.tableFilter.page = params.page;\n          this.tableFilter.limit = params.limit;\n        } else if (params.search) {\n          this.tableFilter.search = params.search;\n        } else{\n          this.tableFilter.page = 1;\n          this.tableFilter.limit = 10;\n          this.tableFilter.sortDirection = 'desc';\n          this.tableFilter.sortColumn = 'name';\n        }\n        this.gePredictionsList();\n      }\n    )\n  }\n\n  gePredictionsList() {\n    this.isLoading = true;\n    this.subscription = this._tableService.getPredictionList(this.tableFilter,this.currentModule,'prediction')\n      .subscribe((res:PredictionList) => {\n        this.predictions=res.questions;\n        this.tableFilter = res.filter;\n        this.isLoading = false;\n      });\n  }\n\n  startClass(data){\n    let obj = {\n      isActive: data.isProgess,\n    };\n    this.subscription=this._tableService.onStartClassByPrediction(data.data.questionId, obj,this.currentModule).subscribe((res) => {\n      this.gePredictionsList();\n    });\n  }\n\n  deletePrediction(data){\n    this.subscription=this._tableService.onDeleteOtherModule(data.questionId,this.currentModule.toLowerCase(),'prediction')\n    .subscribe((res)=>{\n      this.gePredictionsList();\n    })\n  }\n\n\n  fitter(sortColumn) {\n    this.isAsc = !this.isAsc ? this.isAsc = true : this.isAsc = false;\n    this.tableFilter.sortDirection = this.isAsc ? 'asc' : 'desc';\n    this.tableFilter.sortColumn = sortColumn;\n    this.gePredictionsList();\n  }\n\n\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    if(this.subscription) this.subscription.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, Route } from \"@angular/router\";\nimport { OtherDetailResolver } from '@app/modules/manage/reslovers/other-detail.reslover';\nimport { OtherQuestionResolver } from '@app/modules/manage/reslovers/otherQuestion.reslover';\nimport { QuestionTypeResolver } from '@app/modules/manage/reslovers/questions-type.reslover';\nimport { PredictionsBoardComponent } from '@app/modules/manage/predictions/predictions-board/predictions-board.component';\nimport { PredictionsCreateComponent } from '@app/modules/manage/predictions/predictions-create/predictions-create.component';\nimport { PredictionsListComponent } from '@app/modules/manage/predictions/predictions-list/predictions-list.component';\nimport { PredictionsComponent } from '@app/modules/manage/predictions/predictions/predictions.component';\n\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component:PredictionsComponent,\n    resolve: {\n      questionBank: OtherQuestionResolver\n    },\n    data:{\n      type:'prediction'\n    } ,\n    children:[\n      {\n        path: \"\",\n        component:PredictionsBoardComponent,\n      },\n      {\n        path: \":moduleName\",\n        component:PredictionsListComponent,\n      },\n      {\n        path: \":moduleName/create\",\n        component:PredictionsCreateComponent,\n        resolve:{\n          questionType:QuestionTypeResolver\n        }\n      },\n      {\n        path: \":moduleName/create/:detailId\",\n        component:PredictionsCreateComponent,\n        resolve:{\n          questionType:QuestionTypeResolver,\n          predictionDetail:OtherDetailResolver\n        },\n        data:{\n          detailName:'prediction'\n        } ,\n      }\n\n    ]\n  },\n  \n];\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers:[\n    OtherQuestionResolver,\n    QuestionTypeResolver,\n    OtherDetailResolver\n  ]\n})\n\nexport class PredictionsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PredictionsListComponent } from './predictions-list/predictions-list.component';\nimport { PredictionsCreateComponent } from './predictions-create/predictions-create.component';\nimport { PredictionsRoutingModule } from '@app/modules/manage/predictions/predictions-routing.module';\nimport { PredictionsBoardComponent } from './predictions-board/predictions-board.component';\nimport { BasicModule } from '@app/shared/basic-components/basic.module';\nimport { PredictionsComponent } from './predictions/predictions.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [PredictionsListComponent, PredictionsCreateComponent, PredictionsBoardComponent, PredictionsComponent],\n  imports: [\n    CommonModule,\n    PredictionsRoutingModule,\n    BasicModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  exports:[\n    PredictionsRoutingModule\n  ]\n})\nexport class PredictionsModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL3ByZWRpY3Rpb25zL3ByZWRpY3Rpb25zL3ByZWRpY3Rpb25zLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-predictions',\n  templateUrl: './predictions.component.html',\n  styleUrls: ['./predictions.component.css']\n})\nexport class PredictionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":"webpack:///"}