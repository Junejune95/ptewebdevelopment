{"version":3,"sources":["./src/app/modules/manage/practise/practise-board/practise-board.component.html","./src/app/modules/manage/practise/practise-create/practise-create.component.html","./src/app/modules/manage/practise/practise-list/practise-list.component.html","./src/app/modules/manage/practise/practise-board/practise-board.component.css","./src/app/modules/manage/practise/practise-board/practise-board.component.ts","./src/app/modules/manage/practise/practise-create/practise-create.component.css","./src/app/modules/manage/practise/practise-create/practise-create.component.ts","./src/app/modules/manage/practise/practise-list/practise-list.component.css","./src/app/modules/manage/practise/practise-list/practise-list.component.ts","./src/app/modules/manage/practise/practise-routing.module.ts","./src/app/modules/manage/practise/practise.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,wmB;;;;;;;;;;;;ACAf;AAAe,qcAAsY,iCAAiC,mHAAmH,kCAAkC,2dAA2d,2CAA2C,0aAA0a,mDAAmD,qKAAqK,gDAAgD,sDAAsD,66BAA66B,g7BAAg7B,icAAic,gCAAgC,6DAA6D,WAAW,2DAA2D,mBAAmB,+wC;;;;;;;;;;;;ACA7wI;AAAe,yrBAA0nB,wiBAAwiB,0FAA0F,4PAA4P,WAAW,mDAAmD,mBAAmB,6qB;;;;;;;;;;;;ACAxlD;AAAe,6GAA8C,mM;;;;;;;;;;;;;;;;;;ACAX;AACO;AAQzD,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAGjC,YAAoB,YAA2B,EAAS,OAAc;QAAlD,iBAAY,GAAZ,YAAY,CAAe;QAAS,YAAO,GAAP,OAAO,CAAO;IAAI,CAAC;IAE3E,QAAQ;QACN,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACpE,CAAC;IAGD,QAAQ,CAAC,EAAE;QACT,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;IAC5E,CAAC;CACF;;YAVkC,8DAAc;YAAiB,sDAAM;;AAH3D,sBAAsB;IALlC,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,sQAA8C;;KAE/C,CAAC;GACW,sBAAsB,CAalC;AAbkC;;;;;;;;;;;;;ACTnC;AAAe,6GAA8C,mM;;;;;;;;;;;;;;;;;;;;;;;ACAX;AACkB;AACnB;AACa;AACJ;AACW;AACL;AAWhE,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAqClC,YACU,YAA4B,EAC5B,WAAwB,EACxB,YAAyB,EACzB,SAAwB,EACxB,aAA8B;QAJ9B,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAa;QACzB,cAAS,GAAT,SAAS,CAAe;QACxB,kBAAa,GAAb,aAAa,CAAiB;QArCjC,WAAM,GAAQ;YACnB,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,KAAK;YACf,SAAS,EAAE,IAAI;YACf,YAAY,EAAE,KAAK;SACpB;QAKM,kBAAa,GAAQ,EAAE,CAAC;QACxB,iBAAY,GAAe,EAAE,CAAC;QAKrC,gBAAW,GAAgB;YACzB,IAAI,EAAC,CAAC;YACN,KAAK,EAAC,EAAE;YACR,UAAU,EAAC,aAAa;YACxB,aAAa,EAAC,KAAK;YACnB,MAAM,EAAC,IAAI;SACZ,CAAC;QAEF,UAAU;QACH,YAAO,GAAY,IAAI,CAAC;QACxB,cAAS,GAAY,KAAK,CAAC;QAC3B,UAAK,GAAY,IAAI,CAAC;QACtB,aAAQ,GAAY,KAAK,CAAC;QAC1B,eAAU,GAAY,IAAI,CAAC;QAUhC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjC,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAC1C,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAClE,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC;QACxE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC1B,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC7D,IAAI,IAAI;YACN,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IAE/B,CAAC;IAED,eAAe,CAAC,IAAsB;QACpC,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC,UAAU,CAAC;QAElC,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACxC,YAAY,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACzD,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC,SAAS,CAAC;IACnC,CAAC;IAGD,SAAS;QACP,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;YAC3B,OAAO;SACR;aAAM;YAEL,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,WAAW,GAAC;gBACf,IAAI,EAAC,CAAC;gBACN,KAAK,EAAC,EAAE;gBACR,UAAU,EAAC,aAAa;gBACxB,aAAa,EAAC,KAAK;aACpB,CAAC;YACF,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;IACH,CAAC;IAED,SAAS;QACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,GAAC;YACf,IAAI,EAAC,CAAC;YACN,KAAK,EAAC,EAAE;YACR,UAAU,EAAC,aAAa;YACxB,aAAa,EAAC,KAAK;SACpB,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,CAAC;QACZ,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,WAAW,CAAC,CAAC;QACX,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;IAClC,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,aAAa,GAAE,IAAI,CAAC;QACzB,IAAI,MAAM,GAAC;YACT,UAAU,EAAC,IAAI,CAAC,UAAU;YAC1B,YAAY,EAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY;SAChD,CAAC;QACF,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,IAAI,CAAC,WAAW,EAAC,MAAM,CAAC;aAClF,SAAS,CAAC,CAAC,GAAiB,EAAC,EAAE;YAC9B,IAAI,CAAC,WAAW,GAAC,GAAG,CAAC,MAAM,CAAC;YAC5B,IAAI,CAAC,aAAa,GAAC,GAAG,CAAC,SAAS,CAAC;QACnC,CAAC,CAAC;IAEJ,CAAC;IAED,UAAU,CAAC,EAAE;QACX,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC1C,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;YAClC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SACpC;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC5B;IACH,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC;QACrB,IAAI,GAAG,GAAG,IAAI,6EAAc,EAAE,CAAC;QAC/B,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC;QACtC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC;QACtD,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;QAElC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,GAAG,EAAC,IAAI,CAAC,UAAU,EAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC5G,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,MAAM;QACJ,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC;IAC9B,CAAC;IAED,UAAU,CAAC,CAAC;QACV,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,aAAa;QACX,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,EAAE;YACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,kBAAkB;SAC1C;aAAM;YACL,IAAI,CAAC,MAAM,EAAE,CAAC;SACf;IACH,CAAC;IAED,YAAY,CAAC,CAAC;QACZ,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IACpB,CAAC;IAGD,MAAM,CAAC,UAAU;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAClE,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC;QAC7D,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,UAAU,CAAC;QACzC,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,YAAY;YACnB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IACpC,CAAC;CAEF;;YAjJyB,8DAAc;YACf,0DAAW;YACV,uEAAW;YACd,2EAAa;YACV,kFAAgB;;AA1C7B,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,yQAA+C;;KAEhD,CAAC;GACW,uBAAuB,CAuLnC;AAvLmC;;;;;;;;;;;;;ACjBpC;AAAe,6GAA8C,+L;;;;;;;;;;;;;;;;;;;ACAX;AACD;AACoB;AAUrE,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAYhC,YAAoB,aAA8B,EAAS,YAA2B;QAAlE,kBAAa,GAAb,aAAa,CAAiB;QAAS,iBAAY,GAAZ,YAAY,CAAe;QAT/E,gBAAW,GAAc,EAAE,CAAC;QAK3B,UAAK,GAAS,IAAI,CAAC;QAE3B,cAAS,GAAS,KAAK,CAAC;IAEkE,CAAC;IAE3F,QAAQ;QACN,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACpB,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAChE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,SAAS,CACrC,CAAC,MAAM,EAAE,EAAE;YACT,IAAI,MAAM,CAAC,IAAI,EAAE;gBACf,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;gBACpC,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;aACvC;iBAAM,IAAI,MAAM,CAAC,MAAM,EAAE;gBACxB,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;aACzC;iBAAK;gBACJ,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,CAAC;gBAC1B,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,EAAE,CAAC;gBAC5B,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,KAAK,CAAC;gBACvC,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,MAAM,CAAC;gBACrC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAC,EAAE;aAC3B;YACD,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CACF;IACH,CAAC;IAED,eAAe;QACb,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC,UAAU,CAAC;aACrF,SAAS,CAAC,CAAC,GAAgB,EAAC,EAAE;YAC7B,IAAI,CAAC,WAAW,GAAC,GAAG,CAAC,MAAM,CAAC;YAC5B,IAAI,CAAC,SAAS,GAAC,GAAG,CAAC,SAAS,CAAC;YAC7B,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;QACvB,CAAC,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,UAAU;QACf,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAClE,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC;QAC7D,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,UAAU,CAAC;QACzC,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAGD,WAAW;QACT,gDAAgD;QAChD,0CAA0C;QAC1C,IAAG,IAAI,CAAC,YAAY;YAAE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IACxD,CAAC;CACF;;YA/CmC,kFAAgB;YAAsB,8DAAc;;AAZ3E,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,mQAA6C;;KAE9C,CAAC;GACW,qBAAqB,CA2DjC;AA3DiC;;;;;;;;;;;;;;;;;;;;;;;;;ACZO;AACqB;AACgD;AACG;AACN;AACjB;AACG;AACA;AAI7F,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2HAAsB;QACjC,OAAO,EAAE;YACL,YAAY,EAAE,0GAAqB;SACtC;QACD,IAAI,EAAE;YACF,IAAI,EAAE,UAAU;SACnB;KACJ;IAED;QACI,IAAI,EAAE,aAAa;QACnB,SAAS,EAAE,wHAAqB;KACnC;IACD;QACI,IAAI,EAAE,oBAAoB;QAC1B,SAAS,EAAE,8HAAuB;QAClC,OAAO,EAAE;YACL,YAAY,EAAE,0GAAoB;SACrC;KACJ;IACD;QACI,IAAI,EAAE,8BAA8B;QACpC,SAAS,EAAE,8HAAuB;QAClC,OAAO,EAAE;YACL,YAAY,EAAE,0GAAoB;YAClC,cAAc,EAAE,uGAAmB;SACtC;QACD,IAAI,EAAE;YACF,UAAU,EAAE,UAAU;SACzB;KACJ;CAEJ,CAAC;AAaF,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;CAAI;AAAzB,qBAAqB;IAVjC,8DAAQ,CAAC;QACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;QACvB,SAAS,EAAE;YACP,0GAAqB;YACrB,0GAAoB;YACpB,uGAAmB;SACtB;KACJ,CAAC;GAEW,qBAAqB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;AC3DO;AACM;AACoC;AACU;AACrB;AACQ;AACiC;AAC/C;AAsBlE,IAAa,cAAc,GAA3B,MAAa,cAAc;CAAI;AAAlB,cAAc;IAlB1B,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,+FAAsB;YACtB,4FAAqB;YACrB,8HAAuB;SACxB;QACD,OAAO,EAAE;YACP,4DAAY;YACZ,0GAAqB;YACrB,qFAAW;YACX,kEAAmB;YACnB,0DAAW;SACZ;QACD,OAAO,EAAE;YACP,0GAAqB;SAEtB;KACF,CAAC;GACW,cAAc,CAAI;AAAJ","file":"app-modules-manage-practise-practise-module-es2015.e52ec3df9b1648af0886.js","sourcesContent":["export default \"<header-route-menu [currentPageName]=\\\"'Manage'\\\"></header-route-menu>\\n\\n<div class=\\\"container-fluid mt--6\\\">\\n    <header-route-menu-light [currentPageName]=\\\"'Practise'\\\" [moduleName]=\\\"'Manage'\\\"></header-route-menu-light>\\n    <div class=\\\"row\\\">\\n        <ng-container *ngFor=\\\"let qb of questionBank.questionBank\\\">\\n            <div class=\\\"col-md-6 col-xl-3\\\">\\n                <question-card [questionBank]=\\\"qb\\\" (click)=\\\"goToList(qb)\\\" [isManage]=\\\"true\\\"></question-card>\\n            </div>\\n        </ng-container>\\n    </div>\\n</div>\"","export default \"<header-route-menu [currentPageName]=\\\"'Manage'\\\"></header-route-menu>\\n\\n<div class=\\\"container-fluid mt--6\\\">\\n    <header-route-menu-light [currentPageName]=\\\"'Prediction File'\\\" [moduleName]=\\\"moduleName\\\"></header-route-menu-light>\\n    <div class=\\\"container py-2\\\">\\n        <div>\\n            <div class=\\\"d-flex step-wrapper\\\">\\n                <div class=\\\"step-1\\\" [ngClass]=\\\"{ 'step-active': isStep1 == true }\\\">\\n                    <p>Step 1</p>\\n                </div>\\n                <div class=\\\"step-2\\\" [ngClass]=\\\"{ 'step-active': isStep1 == false }\\\">\\n                    <p>Step 2</p>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div *ngIf=\\\"isStep1\\\">\\n            <form [formGroup]=\\\"createForm\\\">\\n                <div class=\\\"row my-2\\\">\\n                    <div class=\\\"col-md-12 mb-2\\\">\\n                        <label-text>Practise Name</label-text>\\n                        <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\"\\n                            [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\"\\n                            placeholder=\\\"Write Practise Name\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"row mb-2\\\">\\n                    <div class=\\\"col-md-12 mb-2\\\">\\n                        <label-text>Select Plan Type</label-text>\\n                        <select class=\\\"select-box form-control\\\" formControlName=\\\"questionType\\\"\\n                            [ngClass]=\\\"{ 'is-invalid': submitted && f.questionType.errors }\\\">\\n                            <option value=\\\"\\\" disabled selected hidden>Select Type</option>\\n                            <option *ngFor=\\\"let type of typeList;let i=index\\\" [ngValue]=\\\"type.questionType\\\">{{\\n                                type.questionName }}\\n                            </option>\\n                        </select>\\n\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"footer-button-block\\\">\\n                    <button class=\\\"btn btn-cancel\\\" (click)=\\\"goBack()\\\">Cancel</button>\\n                    <button class=\\\"btn btn-next\\\" (click)=\\\"goToStep2()\\\">Continue</button>\\n                </div>\\n\\n\\n            </form>\\n        </div>\\n        <div *ngIf=\\\"!isStep1\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <show-entries (data)=\\\"selectedData($event)\\\"></show-entries>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <search-box [hint]=\\\"'Search Question'\\\" (searchData)=\\\"searchDatas($event)\\\" [isEmit]=\\\"true\\\">\\n                    </search-box>\\n                </div>\\n            </div>\\n\\n            <ng-container *ngIf=\\\"!selectedLists; else showData\\\">\\n                <div>\\n                    <table-loading [tType]=\\\"'c4-1'\\\"></table-loading>\\n                </div>\\n            </ng-container>\\n            <ng-template #showData>\\n                <table role=\\\"table\\\" class=\\\"table-responsive\\\">\\n                    <thead role=\\\"rowgroup\\\">\\n                        <tr role=\\\"row\\\">\\n                            <th role=\\\"columnheader\\\" (click)=\\\"fitter('createdDate')\\\" class=\\\"fitter-able\\\"\\n                                [class.fitter-active]='tableFilter.sortColumn==\\\"createdDate\\\"'>Created Date</th>\\n\\n                            <th role=\\\"columnheader\\\" (click)=\\\"fitter('name')\\\" class=\\\"fitter-able\\\"\\n                                [class.fitter-active]='tableFilter.sortColumn==\\\"name\\\"'>Name</th>\\n\\n                            <th role=\\\"columnheader\\\">Question Name</th>\\n\\n                            <th role=\\\"columnheader\\\" style=\\\"width: 20%;\\\">Action</th>\\n                        </tr>\\n                    </thead>\\n\\n                    <tbody role=\\\"rowgroup\\\">\\n                        <ng-container *ngFor=\\\"let data of selectedLists\\\">\\n                            <tr role=\\\"row\\\" (click)=\\\"selectfile(data.questionId)\\\"\\n                                [class.table-selected]=\\\"selectedQues.includes(data.questionId) == true\\\">\\n                                <td role=\\\"cell\\\">{{data.createdDate | defaultDate}}</td>\\n\\n                                <td role=\\\"cell\\\">{{data.name}}</td>\\n                                <td role=\\\"cell\\\">{{data.questionType}}</td>\\n                                <td>\\n                                    <action-btn-gp [btnName]=\\\"'view'\\\" [directLink]=\\\"\\\" isNewTab=\\\"true\\\"></action-btn-gp>\\n                                </td>\\n                            </tr>\\n                        </ng-container>\\n\\n                        <tr *ngIf=\\\"tableFilter.totalCount == 0\\\" role=\\\"row\\\">\\n                            <td colspan=\\\"4\\\" class=\\\"text-center\\\">\\n                                No Data Exit\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n\\n                </table>\\n\\n                <div class=\\\"d-flex justify-content-center my-2\\\">\\n                    <pagination [tableFilter]='tableFilter' (getPage)=\\\"changePage($event)\\\">\\n                    </pagination>\\n                </div>\\n\\n                <div class=\\\"footer-button-block\\\">\\n                    <button class=\\\"btn btn-cancel\\\" (click)=\\\"backStep1()\\\">Cancel</button>\\n                    <button class=\\\"btn btn-next\\\" (click)=\\\"checkAvaiable()\\\">Submit</button>\\n                </div>\\n\\n                <dialog-box *ngIf=\\\"isDialog\\\" (onconfirm)=\\\"checkconfirm($event)\\\" [dialogEntry]=\\\"dialog\\\"></dialog-box>\\n\\n            </ng-template>\\n\\n        </div>\\n    </div>\\n</div>\"","export default \"<header-route-menu [currentPageName]=\\\"'Manage'\\\"></header-route-menu>\\n\\n<div class=\\\"container-fluid mt--6\\\">\\n    <header-route-menu-light [currentPageName]=\\\"'Question Bank'\\\" [moduleName]=\\\"moduleName\\\"\\n    [prevUrl]=\\\"'../'\\\"\\n        [createRoute]=\\\"'alchemist-academy/manage/practise/'+moduleName+'/create'\\\"></header-route-menu-light>\\n\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 p-0\\\">\\n            <show-entries></show-entries>\\n        </div>\\n        <div class=\\\"col-md-6 p-0\\\">\\n            <search-box [hint]=\\\"'Search'\\\"></search-box>\\n        </div>\\n    </div>\\n    <ng-container *ngIf=\\\"isLoading; else showData\\\">\\n        <div>\\n            <table-loading [tType]=\\\"'c4-1'\\\"></table-loading>\\n        </div>\\n    </ng-container>\\n    <ng-template #showData>\\n        <table role=\\\"table\\\" class=\\\"table-responsive\\\">\\n            <thead role=\\\"rowgroup\\\">\\n                <tr role=\\\"row\\\">\\n                    <th role=\\\"columnheader\\\" class=\\\"fitter-able\\\" (click)=\\\"fitter('name')\\\"\\n                        [class.fitter-active]='tableFilter.sortColumn==\\\"name\\\"'>Name</th>\\n\\n                    <th role=\\\"columnheader\\\" style=\\\"width: 30%;\\\">Question Type</th>\\n\\n                    <th role=\\\"columnheader\\\" style=\\\"width: 10%;\\\">Action</th>\\n                </tr>\\n            </thead>\\n\\n\\n            <tbody role=\\\"rowgroup\\\">\\n                <ng-container *ngFor=\\\"let data of practises\\\">\\n                    <tr role=\\\"row\\\">\\n                        <td role=\\\"cell\\\">{{data.name}}</td>\\n                        <td role=\\\"cell\\\">{{data.questionName}}</td>\\n                        <td>\\n                            <action-btn-gp [btnName]=\\\"'edit'\\\" [editId]=\\\"data.practiceId\\\"></action-btn-gp>\\n                        </td>\\n\\n                </ng-container>\\n\\n\\n\\n                <tr *ngIf=\\\"tableFilter.totalCount == 0\\\" role=\\\"row\\\">\\n                    <td colspan=\\\"4\\\" class=\\\"text-center\\\">\\n                        No Data Exit\\n                    </td>\\n                </tr>\\n            </tbody>\\n\\n        </table>\\n\\n        <div class=\\\"d-flex justify-content-center my-2\\\">\\n            <pagination [totalCount]='tableFilter.totalCount'>\\n            </pagination>\\n        </div>\\n\\n    </ng-template>\\n\\n</div>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL3ByYWN0aXNlL3ByYWN0aXNlLWJvYXJkL3ByYWN0aXNlLWJvYXJkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CheckProgress } from '@app/shared/models/check-progress';\n\n@Component({\n  selector: 'app-practise-board',\n  templateUrl: './practise-board.component.html',\n  styleUrls: ['./practise-board.component.css']\n})\nexport class PractiseBoardComponent implements OnInit {\n  public questionBank:CheckProgress;\n  \n  constructor(private _activeRoute:ActivatedRoute,private _router:Router) { }\n\n  ngOnInit() {\n    this.questionBank=this._activeRoute.snapshot.data[\"questionBank\"];\n  }\n\n\n  goToList(qb){\n    this._router.navigate([qb.moduleType], { relativeTo: this._activeRoute });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL3ByYWN0aXNlL3ByYWN0aXNlLWNyZWF0ZS9wcmFjdGlzZS1jcmVhdGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonService } from '@app/core/http/common.service';\nimport { SaveService } from '@app/core/http/save.service';\nimport { TableListService } from '@app/core/http/table-list.service';\nimport { PredictionFile } from '@app/shared/models/CommonModel';\nimport { PredictionDetail } from '@app/shared/models/prediction';\nimport { QuestionsList } from '@app/shared/models/question-list';\nimport { TableFilter } from '@app/shared/models/table-filter';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-practise-create',\n  templateUrl: './practise-create.component.html',\n  styleUrls: ['./practise-create.component.css']\n})\nexport class PractiseCreateComponent implements OnInit {\n\n  public moduleName:string;\n\n\n  public dialog: any = {\n    showText: \"\",\n    isDelete: false,\n    isWarning: true,\n    isconfirmBtn: false\n  }\n\n  createForm: FormGroup;\n  public typeList: any ;\n\n  public selectedLists: any = [];\n  public selectedQues:Array<string>=[];\n  // any\n  public predictionID: any;\n\n  public searchData: any;\n  tableFilter = <TableFilter>{\n    page:1,\n    limit:10,\n    sortColumn:'createdDate',\n    sortDirection:'asc',\n    search:null\n  };\n\n  // boolean\n  public isStep1: boolean = true;\n  public submitted: boolean = false;\n  public isAsc: boolean = true;\n  public isDialog: boolean = false;\n  public isProgress: boolean = true;\n  public subscription: Subscription;\n\n  constructor(\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _saveService: SaveService,\n    private _cservice: CommonService,\n    private _tableService:TableListService\n  ) {\n    this.createForm = this.formBuilder.group({\n      name: [\"\", [Validators.required]],\n      questionType: [\"\", [Validators.required]],\n    });\n  }\n\n  ngOnInit() {\n    this.moduleName = this._activeRoute.snapshot.params['moduleName'];\n    this.typeList=this._activeRoute.snapshot.data['questionType'].questions;\n    console.log(this.typeList)\n    let data = this._activeRoute.snapshot.data['practiseDetail'];\n    if (data)\n      this.getDataEditForm(data);\n\n  }\n\n  getDataEditForm(data: PredictionDetail) {\n    this.predictionID=data.questionId;\n\n    this.createForm =  this.formBuilder.group({\n      name: [data.name, [Validators.required]],\n      questionType: [data.questionType, [Validators.required]],\n    });\n    this.selectedQues=data.questions;\n  }\n\n\n  goToStep2() {\n    this.submitted = true;\n    if (this.createForm.invalid) {\n      return;\n    } else {\n\n      this.isStep1 = false;\n      this.tableFilter={\n        page:1,\n        limit:10,\n        sortColumn:'createdDate',\n        sortDirection:'asc'\n      };\n      this.getSelectLists();\n    }\n  }\n\n  backStep1() {\n    this.isStep1 = true;\n    this.tableFilter={\n      page:1,\n      limit:10,\n      sortColumn:'createdDate',\n      sortDirection:'asc'\n    };\n  }\n\n  selectedData(e) {\n    this.tableFilter.limit = e;\n    this.getSelectLists();\n  }\n\n  searchDatas(e) {\n    this.tableFilter.search = e;\n    this.getSelectLists();\n  }\n\n  get f() {\n    return this.createForm.controls;\n  }\n\n  getSelectLists() {\n    this.selectedLists =null;\n    let module={\n      moduleType:this.moduleName,\n      questionType:this.createForm.value.questionType\n    };\n    this.subscription=this._tableService.getManageQuestionList(this.tableFilter,module)\n    .subscribe((res:QuestionsList)=>{\n      this.tableFilter=res.filter;\n      this.selectedLists=res.questions;\n    })\n \n  }\n\n  selectfile(id) {\n    let index = this.selectedQues.indexOf(id);\n    if (this.selectedQues.includes(id)) {\n      this.selectedQues.splice(index, 1);\n    } else {\n      this.selectedQues.push(id);\n    }\n  }\n\n  onSave() {\n    this.isProgress=true;\n    let obj = new PredictionFile();\n    obj.name = this.createForm.value.name;\n    obj.questionType = this.createForm.value.questionType;\n    obj.questions = this.selectedQues;\n    \n    this.subscription = this._saveService.onSavePractise(obj,this.moduleName,this.predictionID).subscribe((res) => {\n      this.goBack();\n    });\n  }\n\n\n  goBack() {\n    this._cservice.goBackPrev();\n  }\n\n  changePage(e) {\n    this.tableFilter.page = e;\n    this.getSelectLists();\n  }\n\n  checkAvaiable() {\n    if (this.selectedQues.length == 0) {\n      this.isDialog = true;\n      this.dialog.showText = 'Select Question!'\n    } else {\n      this.onSave();\n    }\n  }\n\n  checkconfirm(e) {\n    this.isDialog = e;\n  }\n\n\n  fitter(sortColumn) {\n    this.isAsc = !this.isAsc ? this.isAsc = true : this.isAsc = false;\n    this.tableFilter.sortDirection = this.isAsc ? 'asc' : 'desc';\n    this.tableFilter.sortColumn = sortColumn;\n    this.getSelectLists();\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL3ByYWN0aXNlL3ByYWN0aXNlLWxpc3QvcHJhY3Rpc2UtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TableListService } from '@app/core/http/table-list.service';\nimport { Practise, PractiseList } from '@app/shared/models/practise';\nimport { TableFilter } from '@app/shared/models/table-filter';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-practise-list',\n  templateUrl: './practise-list.component.html',\n  styleUrls: ['./practise-list.component.css']\n})\nexport class PractiseListComponent implements OnInit {\n  public moduleName:string;\n\n  public tableFilter=<TableFilter>{};\n\n  public practises:Practise[];\n\n  private subscription:Subscription;\n  private isAsc:boolean=true;\n\n  isLoading:boolean=false;\n\n  constructor(private _tableService:TableListService,private _activeRoute:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.isLoading=true;\n    this.moduleName=this._activeRoute.snapshot.params['moduleType'];\n    this._activeRoute.queryParams.subscribe(\n      (params) => {\n        if (params.page) {\n          this.tableFilter.page = params.page;\n          this.tableFilter.limit = params.limit;\n        } else if (params.search) {\n          this.tableFilter.search = params.search;\n        } else{\n          this.tableFilter.page = 1;\n          this.tableFilter.limit = 10;\n          this.tableFilter.sortDirection = 'asc';\n          this.tableFilter.sortColumn = 'name';\n          this.tableFilter.search=''\n        }\n        this.getPractiseList();\n      }\n    )\n  }\n\n  getPractiseList(){\n    this.subscription=this._tableService.getPractiseList(this.tableFilter,this.moduleName)\n    .subscribe((res:PractiseList)=>{\n      this.tableFilter=res.filter;\n      this.practises=res.questions;\n      this.isLoading=false;\n    })\n  }\n  \n  fitter(sortColumn) {\n    this.isLoading=true;\n    this.isAsc = !this.isAsc ? this.isAsc = true : this.isAsc = false;\n    this.tableFilter.sortDirection = this.isAsc ? 'asc' : 'desc';\n    this.tableFilter.sortColumn = sortColumn;\n    this.getPractiseList();\n  }\n\n  \n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    if(this.subscription) this.subscription.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, Route } from \"@angular/router\";\nimport { PractiseBoardComponent } from '@app/modules/manage/practise/practise-board/practise-board.component';\nimport { PractiseCreateComponent } from '@app/modules/manage/practise/practise-create/practise-create.component';\nimport { PractiseListComponent } from '@app/modules/manage/practise/practise-list/practise-list.component';\nimport { OtherDetailResolver } from '@app/modules/manage/reslovers/other-detail.reslover';\nimport { OtherQuestionResolver } from '@app/modules/manage/reslovers/otherQuestion.reslover';\nimport { QuestionTypeResolver } from '@app/modules/manage/reslovers/questions-type.reslover';\n\n\n\nconst routes: Routes = [\n    {\n        path: \"\",\n        component: PractiseBoardComponent,\n        resolve: {\n            questionBank: OtherQuestionResolver\n        },\n        data: {\n            type: 'practise'\n        },\n    },\n\n    {\n        path: ':moduleType',\n        component: PractiseListComponent,\n    },\n    {\n        path: ':moduleName/create',\n        component: PractiseCreateComponent,\n        resolve: {\n            questionType: QuestionTypeResolver,\n        }\n    },\n    {\n        path: ':moduleName/create/:detailId',\n        component: PractiseCreateComponent,\n        resolve: {\n            questionType: QuestionTypeResolver,\n            practiseDetail: OtherDetailResolver\n        },\n        data: {\n            detailName: 'practise'\n        },\n    }\n\n];\n\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n    providers: [\n        OtherQuestionResolver,\n        QuestionTypeResolver,\n        OtherDetailResolver\n    ]\n})\n\nexport class PractiseRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PractiseBoardComponent } from './practise-board/practise-board.component';\nimport { PractiseRoutingModule } from '@app/modules/manage/practise/practise-routing.module';\nimport { BasicModule } from '@app/shared/basic-components/basic.module';\nimport { PractiseListComponent } from './practise-list/practise-list.component';\nimport { PractiseCreateComponent } from '@app/modules/manage/practise/practise-create/practise-create.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    PractiseBoardComponent,\n    PractiseListComponent,\n    PractiseCreateComponent\n  ],\n  imports: [\n    CommonModule,\n    PractiseRoutingModule,\n    BasicModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  exports: [\n    PractiseRoutingModule,\n\n  ]\n})\nexport class PractiseModule { }\n"],"sourceRoot":"webpack:///"}