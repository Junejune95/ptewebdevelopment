{"version":3,"sources":["src/app/modules/manage/practise/practise-board/practise-board.component.html","src/app/modules/manage/practise/practise-create/practise-create.component.html","src/app/modules/manage/practise/practise-list/practise-list.component.html","src/app/modules/manage/practise/practise-board/practise-board.component.css","src/app/modules/manage/practise/practise-board/practise-board.component.ts","src/app/modules/manage/practise/practise-create/practise-create.component.css","src/app/modules/manage/practise/practise-create/practise-create.component.ts","src/app/modules/manage/practise/practise-list/practise-list.component.css","src/app/modules/manage/practise/practise-list/practise-list.component.ts","src/app/modules/manage/practise/practise-routing.module.ts","src/app/modules/manage/practise/practise.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<header-route-menu [currentPageName]=\\\"'Manage'\\\"></header-route-menu>\\n\\n<div class=\\\"container-fluid mt--6\\\">\\n    <header-route-menu-light [currentPageName]=\\\"'Practise'\\\" [moduleName]=\\\"'Manage'\\\"></header-route-menu-light>\\n    <div class=\\\"row\\\">\\n        <ng-container *ngFor=\\\"let qb of questionBank.questionBank\\\">\\n            <div class=\\\"col-md-6 col-xl-3\\\">\\n                <question-card [questionBank]=\\\"qb\\\" (click)=\\\"goToList(qb)\\\" [isManage]=\\\"true\\\"></question-card>\\n            </div>\\n        </ng-container>\\n    </div>\\n</div>\"","export default \"<header-route-menu [currentPageName]=\\\"'Manage'\\\"></header-route-menu>\\n\\n<div class=\\\"container-fluid mt--6\\\">\\n    <header-route-menu-light [currentPageName]=\\\"'Prediction File'\\\" [moduleName]=\\\"moduleName\\\"></header-route-menu-light>\\n    <div class=\\\"container py-2\\\">\\n        <div>\\n            <div class=\\\"d-flex step-wrapper\\\">\\n                <div class=\\\"step-1\\\" [ngClass]=\\\"{ 'step-active': isStep1 == true }\\\">\\n                    <p>Step 1</p>\\n                </div>\\n                <div class=\\\"step-2\\\" [ngClass]=\\\"{ 'step-active': isStep1 == false }\\\">\\n                    <p>Step 2</p>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div *ngIf=\\\"isStep1\\\">\\n            <form [formGroup]=\\\"createForm\\\">\\n                <div class=\\\"row my-2\\\">\\n                    <div class=\\\"col-md-12 mb-2\\\">\\n                        <label-text>Practise Name</label-text>\\n                        <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\"\\n                            [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\"\\n                            placeholder=\\\"Write Practise Name\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"row mb-2\\\">\\n                    <div class=\\\"col-md-12 mb-2\\\">\\n                        <label-text>Select Plan Type</label-text>\\n                        <select class=\\\"select-box form-control\\\" formControlName=\\\"questionType\\\"\\n                            [ngClass]=\\\"{ 'is-invalid': submitted && f.questionType.errors }\\\">\\n                            <option value=\\\"\\\" disabled selected hidden>Select Type</option>\\n                            <option *ngFor=\\\"let type of typeList;let i=index\\\" [ngValue]=\\\"type.questionType\\\">{{\\n                                type.questionName }}\\n                            </option>\\n                        </select>\\n\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"footer-button-block\\\">\\n                    <button class=\\\"btn btn-cancel\\\" (click)=\\\"goBack()\\\">Cancel</button>\\n                    <button class=\\\"btn btn-next\\\" (click)=\\\"goToStep2()\\\">Continue</button>\\n                </div>\\n\\n\\n            </form>\\n        </div>\\n        <div *ngIf=\\\"!isStep1\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <show-entries (data)=\\\"selectedData($event)\\\"></show-entries>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <search-box [hint]=\\\"'Search Question'\\\" (searchData)=\\\"searchDatas($event)\\\" [isEmit]=\\\"true\\\">\\n                    </search-box>\\n                </div>\\n            </div>\\n\\n            <ng-container *ngIf=\\\"!selectedLists; else showData\\\">\\n                <div>\\n                    <table-loading [tType]=\\\"'c4-1'\\\"></table-loading>\\n                </div>\\n            </ng-container>\\n            <ng-template #showData>\\n                <table role=\\\"table\\\" class=\\\"table-responsive\\\">\\n                    <thead role=\\\"rowgroup\\\">\\n                        <tr role=\\\"row\\\">\\n                            <th role=\\\"columnheader\\\" (click)=\\\"fitter('createdDate')\\\" class=\\\"fitter-able\\\"\\n                                [class.fitter-active]='tableFilter.sortColumn==\\\"createdDate\\\"'>Created Date</th>\\n\\n                            <th role=\\\"columnheader\\\" (click)=\\\"fitter('name')\\\" class=\\\"fitter-able\\\"\\n                                [class.fitter-active]='tableFilter.sortColumn==\\\"name\\\"'>Name</th>\\n\\n                            <th role=\\\"columnheader\\\">Question Name</th>\\n\\n                            <th role=\\\"columnheader\\\" style=\\\"width: 20%;\\\">Action</th>\\n                        </tr>\\n                    </thead>\\n\\n                    <tbody role=\\\"rowgroup\\\">\\n                        <ng-container *ngFor=\\\"let data of selectedLists\\\">\\n                            <tr role=\\\"row\\\" (click)=\\\"selectfile(data.questionId)\\\"\\n                                [class.table-selected]=\\\"selectedQues.includes(data.questionId) == true\\\">\\n                                <td role=\\\"cell\\\">{{data.createdDate | defaultDate}}</td>\\n\\n                                <td role=\\\"cell\\\">{{data.name}}</td>\\n                                <td role=\\\"cell\\\">{{data.questionType}}</td>\\n                                <td>\\n                                    <action-btn-gp [btnName]=\\\"'view'\\\" [directLink]=\\\"\\\" isNewTab=\\\"true\\\"></action-btn-gp>\\n                                </td>\\n                            </tr>\\n                        </ng-container>\\n\\n                        <tr *ngIf=\\\"tableFilter.totalCount == 0\\\" role=\\\"row\\\">\\n                            <td colspan=\\\"4\\\" class=\\\"text-center\\\">\\n                                No Data Exit\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n\\n                </table>\\n\\n                <div class=\\\"d-flex justify-content-center my-2\\\">\\n                    <pagination [tableFilter]='tableFilter' (getPage)=\\\"changePage($event)\\\">\\n                    </pagination>\\n                </div>\\n\\n                <div class=\\\"footer-button-block\\\">\\n                    <button class=\\\"btn btn-cancel\\\" (click)=\\\"backStep1()\\\">Cancel</button>\\n                    <button class=\\\"btn btn-next\\\" (click)=\\\"checkAvaiable()\\\">Submit</button>\\n                </div>\\n\\n                <dialog-box *ngIf=\\\"isDialog\\\" (onconfirm)=\\\"checkconfirm($event)\\\" [dialogEntry]=\\\"dialog\\\"></dialog-box>\\n\\n            </ng-template>\\n\\n        </div>\\n    </div>\\n</div>\"","export default \"<header-route-menu [currentPageName]=\\\"'Manage'\\\"></header-route-menu>\\n\\n<div class=\\\"container-fluid mt--6\\\">\\n    <header-route-menu-light [currentPageName]=\\\"'Question Bank'\\\" [moduleName]=\\\"moduleName\\\"\\n    [prevUrl]=\\\"'../'\\\"\\n        [createRoute]=\\\"'alchemist-academy/manage/practise/'+moduleName+'/create'\\\"></header-route-menu-light>\\n\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 p-0\\\">\\n            <show-entries></show-entries>\\n        </div>\\n        <div class=\\\"col-md-6 p-0\\\">\\n            <search-box [hint]=\\\"'Search'\\\"></search-box>\\n        </div>\\n    </div>\\n    <ng-container *ngIf=\\\"isLoading; else showData\\\">\\n        <div>\\n            <table-loading [tType]=\\\"'c4-1'\\\"></table-loading>\\n        </div>\\n    </ng-container>\\n    <ng-template #showData>\\n        <table role=\\\"table\\\" class=\\\"table-responsive\\\">\\n            <thead role=\\\"rowgroup\\\">\\n                <tr role=\\\"row\\\">\\n                    <th role=\\\"columnheader\\\" class=\\\"fitter-able\\\" (click)=\\\"fitter('name')\\\"\\n                        [class.fitter-active]='tableFilter.sortColumn==\\\"name\\\"'>Name</th>\\n\\n                    <th role=\\\"columnheader\\\" style=\\\"width: 30%;\\\">Question Type</th>\\n\\n                    <th role=\\\"columnheader\\\" style=\\\"width: 10%;\\\">Action</th>\\n                </tr>\\n            </thead>\\n\\n\\n            <tbody role=\\\"rowgroup\\\">\\n                <ng-container *ngFor=\\\"let data of practises\\\">\\n                    <tr role=\\\"row\\\">\\n                        <td role=\\\"cell\\\">{{data.name}}</td>\\n                        <td role=\\\"cell\\\">{{data.questionName}}</td>\\n                        <td>\\n                            <action-btn-gp [btnName]=\\\"'edit'\\\" [editId]=\\\"data.practiceId\\\"></action-btn-gp>\\n                        </td>\\n\\n                </ng-container>\\n\\n\\n\\n                <tr *ngIf=\\\"tableFilter.totalCount == 0\\\" role=\\\"row\\\">\\n                    <td colspan=\\\"4\\\" class=\\\"text-center\\\">\\n                        No Data Exit\\n                    </td>\\n                </tr>\\n            </tbody>\\n\\n        </table>\\n\\n        <div class=\\\"d-flex justify-content-center my-2\\\">\\n            <pagination [totalCount]='tableFilter.totalCount'>\\n            </pagination>\\n        </div>\\n\\n    </ng-template>\\n\\n</div>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL3ByYWN0aXNlL3ByYWN0aXNlLWJvYXJkL3ByYWN0aXNlLWJvYXJkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CheckProgress } from '@app/shared/models/check-progress';\n\n@Component({\n  selector: 'app-practise-board',\n  templateUrl: './practise-board.component.html',\n  styleUrls: ['./practise-board.component.css']\n})\nexport class PractiseBoardComponent implements OnInit {\n  public questionBank:CheckProgress;\n  \n  constructor(private _activeRoute:ActivatedRoute,private _router:Router) { }\n\n  ngOnInit() {\n    this.questionBank=this._activeRoute.snapshot.data[\"questionBank\"];\n  }\n\n\n  goToList(qb){\n    this._router.navigate([qb.moduleType], { relativeTo: this._activeRoute });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL3ByYWN0aXNlL3ByYWN0aXNlLWNyZWF0ZS9wcmFjdGlzZS1jcmVhdGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonService } from '@app/core/http/common.service';\nimport { SaveService } from '@app/core/http/save.service';\nimport { TableListService } from '@app/core/http/table-list.service';\nimport { PredictionFile } from '@app/shared/models/CommonModel';\nimport { PredictionDetail } from '@app/shared/models/prediction';\nimport { QuestionsList } from '@app/shared/models/question-list';\nimport { TableFilter } from '@app/shared/models/table-filter';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-practise-create',\n  templateUrl: './practise-create.component.html',\n  styleUrls: ['./practise-create.component.css']\n})\nexport class PractiseCreateComponent implements OnInit {\n\n  public moduleName:string;\n\n\n  public dialog: any = {\n    showText: \"\",\n    isDelete: false,\n    isWarning: true,\n    isconfirmBtn: false\n  }\n\n  createForm: FormGroup;\n  public typeList: any ;\n\n  public selectedLists: any = [];\n  public selectedQues:Array<string>=[];\n  // any\n  public predictionID: any;\n\n  public searchData: any;\n  tableFilter = <TableFilter>{\n    page:1,\n    limit:10,\n    sortColumn:'createdDate',\n    sortDirection:'asc',\n    search:null\n  };\n\n  // boolean\n  public isStep1: boolean = true;\n  public submitted: boolean = false;\n  public isAsc: boolean = true;\n  public isDialog: boolean = false;\n  public isProgress: boolean = true;\n  public subscription: Subscription;\n\n  constructor(\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _saveService: SaveService,\n    private _cservice: CommonService,\n    private _tableService:TableListService\n  ) {\n    this.createForm = this.formBuilder.group({\n      name: [\"\", [Validators.required]],\n      questionType: [\"\", [Validators.required]],\n    });\n  }\n\n  ngOnInit() {\n    this.moduleName = this._activeRoute.snapshot.params['moduleName'];\n    this.typeList=this._activeRoute.snapshot.data['questionType'].questions;\n    console.log(this.typeList)\n    let data = this._activeRoute.snapshot.data['practiseDetail'];\n    if (data)\n      this.getDataEditForm(data);\n\n  }\n\n  getDataEditForm(data: PredictionDetail) {\n    this.predictionID=data.questionId;\n\n    this.createForm =  this.formBuilder.group({\n      name: [data.name, [Validators.required]],\n      questionType: [data.questionType, [Validators.required]],\n    });\n    this.selectedQues=data.questions;\n  }\n\n\n  goToStep2() {\n    this.submitted = true;\n    if (this.createForm.invalid) {\n      return;\n    } else {\n\n      this.isStep1 = false;\n      this.tableFilter={\n        page:1,\n        limit:10,\n        sortColumn:'createdDate',\n        sortDirection:'asc'\n      };\n      this.getSelectLists();\n    }\n  }\n\n  backStep1() {\n    this.isStep1 = true;\n    this.tableFilter={\n      page:1,\n      limit:10,\n      sortColumn:'createdDate',\n      sortDirection:'asc'\n    };\n  }\n\n  selectedData(e) {\n    this.tableFilter.limit = e;\n    this.getSelectLists();\n  }\n\n  searchDatas(e) {\n    this.tableFilter.search = e;\n    this.getSelectLists();\n  }\n\n  get f() {\n    return this.createForm.controls;\n  }\n\n  getSelectLists() {\n    this.selectedLists =null;\n    let module={\n      moduleType:this.moduleName,\n      questionType:this.createForm.value.questionType\n    };\n    this.subscription=this._tableService.getManageQuestionList(this.tableFilter,module)\n    .subscribe((res:QuestionsList)=>{\n      this.tableFilter=res.filter;\n      this.selectedLists=res.questions;\n    })\n \n  }\n\n  selectfile(id) {\n    let index = this.selectedQues.indexOf(id);\n    if (this.selectedQues.includes(id)) {\n      this.selectedQues.splice(index, 1);\n    } else {\n      this.selectedQues.push(id);\n    }\n  }\n\n  onSave() {\n    this.isProgress=true;\n    let obj = new PredictionFile();\n    obj.name = this.createForm.value.name;\n    obj.questionType = this.createForm.value.questionType;\n    obj.questions = this.selectedQues;\n    \n    this.subscription = this._saveService.onSavePractise(obj,this.moduleName,this.predictionID).subscribe((res) => {\n      this.goBack();\n    });\n  }\n\n\n  goBack() {\n    this._cservice.goBackPrev();\n  }\n\n  changePage(e) {\n    this.tableFilter.page = e;\n    this.getSelectLists();\n  }\n\n  checkAvaiable() {\n    if (this.selectedQues.length == 0) {\n      this.isDialog = true;\n      this.dialog.showText = 'Select Question!'\n    } else {\n      this.onSave();\n    }\n  }\n\n  checkconfirm(e) {\n    this.isDialog = e;\n  }\n\n\n  fitter(sortColumn) {\n    this.isAsc = !this.isAsc ? this.isAsc = true : this.isAsc = false;\n    this.tableFilter.sortDirection = this.isAsc ? 'asc' : 'desc';\n    this.tableFilter.sortColumn = sortColumn;\n    this.getSelectLists();\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL3ByYWN0aXNlL3ByYWN0aXNlLWxpc3QvcHJhY3Rpc2UtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TableListService } from '@app/core/http/table-list.service';\nimport { Practise, PractiseList } from '@app/shared/models/practise';\nimport { TableFilter } from '@app/shared/models/table-filter';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-practise-list',\n  templateUrl: './practise-list.component.html',\n  styleUrls: ['./practise-list.component.css']\n})\nexport class PractiseListComponent implements OnInit {\n  public moduleName:string;\n\n  public tableFilter=<TableFilter>{};\n\n  public practises:Practise[];\n\n  private subscription:Subscription;\n  private isAsc:boolean=true;\n\n  isLoading:boolean=false;\n\n  constructor(private _tableService:TableListService,private _activeRoute:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.isLoading=true;\n    this.moduleName=this._activeRoute.snapshot.params['moduleType'];\n    this._activeRoute.queryParams.subscribe(\n      (params) => {\n        if (params.page) {\n          this.tableFilter.page = params.page;\n          this.tableFilter.limit = params.limit;\n        } else if (params.search) {\n          this.tableFilter.search = params.search;\n        } else{\n          this.tableFilter.page = 1;\n          this.tableFilter.limit = 10;\n          this.tableFilter.sortDirection = 'asc';\n          this.tableFilter.sortColumn = 'name';\n          this.tableFilter.search=''\n        }\n        this.getPractiseList();\n      }\n    )\n  }\n\n  getPractiseList(){\n    this.subscription=this._tableService.getPractiseList(this.tableFilter,this.moduleName)\n    .subscribe((res:PractiseList)=>{\n      this.tableFilter=res.filter;\n      this.practises=res.questions;\n      this.isLoading=false;\n    })\n  }\n  \n  fitter(sortColumn) {\n    this.isLoading=true;\n    this.isAsc = !this.isAsc ? this.isAsc = true : this.isAsc = false;\n    this.tableFilter.sortDirection = this.isAsc ? 'asc' : 'desc';\n    this.tableFilter.sortColumn = sortColumn;\n    this.getPractiseList();\n  }\n\n  \n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    if(this.subscription) this.subscription.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, Route } from \"@angular/router\";\nimport { PractiseBoardComponent } from '@app/modules/manage/practise/practise-board/practise-board.component';\nimport { PractiseCreateComponent } from '@app/modules/manage/practise/practise-create/practise-create.component';\nimport { PractiseListComponent } from '@app/modules/manage/practise/practise-list/practise-list.component';\nimport { OtherDetailResolver } from '@app/modules/manage/reslovers/other-detail.reslover';\nimport { OtherQuestionResolver } from '@app/modules/manage/reslovers/otherQuestion.reslover';\nimport { QuestionTypeResolver } from '@app/modules/manage/reslovers/questions-type.reslover';\n\n\n\nconst routes: Routes = [\n    {\n        path: \"\",\n        component: PractiseBoardComponent,\n        resolve: {\n            questionBank: OtherQuestionResolver\n        },\n        data: {\n            type: 'practise'\n        },\n    },\n\n    {\n        path: ':moduleType',\n        component: PractiseListComponent,\n    },\n    {\n        path: ':moduleName/create',\n        component: PractiseCreateComponent,\n        resolve: {\n            questionType: QuestionTypeResolver,\n        }\n    },\n    {\n        path: ':moduleName/create/:detailId',\n        component: PractiseCreateComponent,\n        resolve: {\n            questionType: QuestionTypeResolver,\n            practiseDetail: OtherDetailResolver\n        },\n        data: {\n            detailName: 'practise'\n        },\n    }\n\n];\n\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n    providers: [\n        OtherQuestionResolver,\n        QuestionTypeResolver,\n        OtherDetailResolver\n    ]\n})\n\nexport class PractiseRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PractiseBoardComponent } from './practise-board/practise-board.component';\nimport { PractiseRoutingModule } from '@app/modules/manage/practise/practise-routing.module';\nimport { BasicModule } from '@app/shared/basic-components/basic.module';\nimport { PractiseListComponent } from './practise-list/practise-list.component';\nimport { PractiseCreateComponent } from '@app/modules/manage/practise/practise-create/practise-create.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    PractiseBoardComponent,\n    PractiseListComponent,\n    PractiseCreateComponent\n  ],\n  imports: [\n    CommonModule,\n    PractiseRoutingModule,\n    BasicModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  exports: [\n    PractiseRoutingModule,\n\n  ]\n})\nexport class PractiseModule { }\n"],"sourceRoot":"webpack:///","file":"app-modules-manage-practise-practise-module-es5.e52ec3df9b1648af0886.js"}