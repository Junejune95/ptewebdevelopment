{"version":3,"sources":["./node_modules/ng-circle-progress/fesm2015/ng-circle-progress.js","./src/app/modules/home/home/home.component.html","./src/app/modules/home/home-routing.moudule.ts","./src/app/modules/home/home.module.ts","./src/app/modules/home/home/home.component.css","./src/app/modules/home/home/home.component.ts","./src/app/modules/home/reslovers/home.reslover.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AAC6C;AAC5C;AAC5B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA;AACA,qCAAqC,0DAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sDAAsD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,sDAAsD;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,sDAAsD;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ,GAAG,QAAQ;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,4BAA4B,aAAa,GAAG;AAC5C,YAAY,oBAAoB,GAAG,oBAAoB,KAAK,aAAa,GAAG,UAAU,GAAG,WAAW,GAAG,WAAW;AAClH;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iCAAiC;AAClD;AACA;AACA,0CAA0C,kDAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,0CAA0C,kDAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,uDAAuD;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF,qBAAqB;AAC9G;AACA,qBAAqB;AACrB;AACA;AACA;AACA,6BAA6B,kDAAK;AAClC;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,0BAA0B,wDAAU;AACpC,IAAI,+DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,uBAAuB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","file":"modules-home-home-module-es2015.bb2d9a0e02229ccaceb0.js","sourcesContent":["import { __decorate, __metadata, __param } from 'tslib';\nimport { EventEmitter, Output, Input, Component, Inject, ElementRef, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { timer } from 'rxjs';\n\nclass CircleProgressOptions {\r\n    constructor() {\r\n        this.class = '';\r\n        this.backgroundGradient = false;\r\n        this.backgroundColor = 'transparent';\r\n        this.backgroundGradientStopColor = 'transparent';\r\n        this.backgroundOpacity = 1;\r\n        this.backgroundStroke = 'transparent';\r\n        this.backgroundStrokeWidth = 0;\r\n        this.backgroundPadding = 5;\r\n        this.percent = 0;\r\n        this.radius = 90;\r\n        this.space = 4;\r\n        this.toFixed = 0;\r\n        this.maxPercent = 1000;\r\n        this.renderOnClick = true;\r\n        this.units = '%';\r\n        this.unitsFontSize = '10';\r\n        this.unitsFontWeight = 'normal';\r\n        this.unitsColor = '#444444';\r\n        this.outerStrokeGradient = false;\r\n        this.outerStrokeWidth = 8;\r\n        this.outerStrokeColor = '#78C000';\r\n        this.outerStrokeGradientStopColor = 'transparent';\r\n        this.outerStrokeLinecap = 'round';\r\n        this.innerStrokeColor = '#C7E596';\r\n        this.innerStrokeWidth = 4;\r\n        this.titleFormat = undefined;\r\n        this.title = 'auto';\r\n        this.titleColor = '#444444';\r\n        this.titleFontSize = '20';\r\n        this.titleFontWeight = 'normal';\r\n        this.subtitleFormat = undefined;\r\n        this.subtitle = 'progress';\r\n        this.subtitleColor = '#A9A9A9';\r\n        this.subtitleFontSize = '10';\r\n        this.subtitleFontWeight = 'normal';\r\n        this.imageSrc = undefined;\r\n        this.imageHeight = undefined;\r\n        this.imageWidth = undefined;\r\n        this.animation = true;\r\n        this.animateTitle = true;\r\n        this.animateSubtitle = false;\r\n        this.animationDuration = 500;\r\n        this.showTitle = true;\r\n        this.showSubtitle = true;\r\n        this.showUnits = true;\r\n        this.showImage = false;\r\n        this.showBackground = true;\r\n        this.showInnerStroke = true;\r\n        this.clockwise = true;\r\n        this.responsive = false;\r\n        this.startFromZero = true;\r\n        this.showZeroOuterStroke = true;\r\n        this.lazy = false;\r\n    }\r\n}\r\n/** @dynamic Prevent compiling error when using type `Document` https://github.com/angular/angular/issues/20351 */\r\nlet CircleProgressComponent = class CircleProgressComponent {\r\n    constructor(defaultOptions, elRef, document) {\r\n        this.elRef = elRef;\r\n        this.document = document;\r\n        this.onClick = new EventEmitter();\r\n        // <svg> of component\r\n        this.svgElement = null;\r\n        // whether <svg> is in viewport\r\n        this.isInViewport = false;\r\n        // event for notifying viewport change caused by scrolling or resizing\r\n        this.onViewportChanged = new EventEmitter;\r\n        this._viewportChangedSubscriber = null;\r\n        this.options = new CircleProgressOptions();\r\n        this.defaultOptions = new CircleProgressOptions();\r\n        this._lastPercent = 0;\r\n        this._gradientUUID = null;\r\n        this.render = () => {\r\n            this.applyOptions();\r\n            if (this.options.lazy) {\r\n                // Draw svg if it doesn't exist\r\n                this.svgElement === null && this.draw(this._lastPercent);\r\n                // Draw it only when it's in the viewport\r\n                if (this.isInViewport) {\r\n                    // Draw it at the latest position when I am in.\r\n                    if (this.options.animation && this.options.animationDuration > 0) {\r\n                        this.animate(this._lastPercent, this.options.percent);\r\n                    }\r\n                    else {\r\n                        this.draw(this.options.percent);\r\n                    }\r\n                    this._lastPercent = this.options.percent;\r\n                }\r\n            }\r\n            else {\r\n                if (this.options.animation && this.options.animationDuration > 0) {\r\n                    this.animate(this._lastPercent, this.options.percent);\r\n                }\r\n                else {\r\n                    this.draw(this.options.percent);\r\n                }\r\n                this._lastPercent = this.options.percent;\r\n            }\r\n        };\r\n        this.polarToCartesian = (centerX, centerY, radius, angleInDegrees) => {\r\n            let angleInRadius = angleInDegrees * Math.PI / 180;\r\n            let x = centerX + Math.sin(angleInRadius) * radius;\r\n            let y = centerY - Math.cos(angleInRadius) * radius;\r\n            return { x: x, y: y };\r\n        };\r\n        this.draw = (percent) => {\r\n            // make percent reasonable\r\n            percent = (percent === undefined) ? this.options.percent : Math.abs(percent);\r\n            // circle percent shouldn't be greater than 100%.\r\n            let circlePercent = (percent > 100) ? 100 : percent;\r\n            // determine box size\r\n            let boxSize = this.options.radius * 2 + this.options.outerStrokeWidth * 2;\r\n            if (this.options.showBackground) {\r\n                boxSize += (this.options.backgroundStrokeWidth * 2 + this.max(0, this.options.backgroundPadding * 2));\r\n            }\r\n            // the centre of the circle\r\n            let centre = { x: boxSize / 2, y: boxSize / 2 };\r\n            // the start point of the arc\r\n            let startPoint = { x: centre.x, y: centre.y - this.options.radius };\r\n            // get the end point of the arc\r\n            let endPoint = this.polarToCartesian(centre.x, centre.y, this.options.radius, 360 * (this.options.clockwise ?\r\n                circlePercent :\r\n                (100 - circlePercent)) / 100); // ####################\r\n            // We'll get an end point with the same [x, y] as the start point when percent is 100%, so move x a little bit.\r\n            if (circlePercent === 100) {\r\n                endPoint.x = endPoint.x + (this.options.clockwise ? -0.01 : +0.01);\r\n            }\r\n            // largeArcFlag and sweepFlag\r\n            let largeArcFlag, sweepFlag;\r\n            if (circlePercent > 50) {\r\n                [largeArcFlag, sweepFlag] = this.options.clockwise ? [1, 1] : [1, 0];\r\n            }\r\n            else {\r\n                [largeArcFlag, sweepFlag] = this.options.clockwise ? [0, 1] : [0, 0];\r\n            }\r\n            // percent may not equal the actual percent\r\n            let titlePercent = this.options.animateTitle ? percent : this.options.percent;\r\n            let titleTextPercent = titlePercent > this.options.maxPercent ?\r\n                `${this.options.maxPercent.toFixed(this.options.toFixed)}+` : titlePercent.toFixed(this.options.toFixed);\r\n            let subtitlePercent = this.options.animateSubtitle ? percent : this.options.percent;\r\n            // get title object\r\n            let title = {\r\n                x: centre.x,\r\n                y: centre.y,\r\n                textAnchor: 'middle',\r\n                color: this.options.titleColor,\r\n                fontSize: this.options.titleFontSize,\r\n                fontWeight: this.options.titleFontWeight,\r\n                texts: [],\r\n                tspans: []\r\n            };\r\n            // from v0.9.9, both title and titleFormat(...) may be an array of string.\r\n            if (this.options.titleFormat !== undefined && this.options.titleFormat.constructor.name === 'Function') {\r\n                let formatted = this.options.titleFormat(titlePercent);\r\n                if (formatted instanceof Array) {\r\n                    title.texts = [...formatted];\r\n                }\r\n                else {\r\n                    title.texts.push(formatted.toString());\r\n                }\r\n            }\r\n            else {\r\n                if (this.options.title === 'auto') {\r\n                    title.texts.push(titleTextPercent);\r\n                }\r\n                else {\r\n                    if (this.options.title instanceof Array) {\r\n                        title.texts = [...this.options.title];\r\n                    }\r\n                    else {\r\n                        title.texts.push(this.options.title.toString());\r\n                    }\r\n                }\r\n            }\r\n            // get subtitle object\r\n            let subtitle = {\r\n                x: centre.x,\r\n                y: centre.y,\r\n                textAnchor: 'middle',\r\n                color: this.options.subtitleColor,\r\n                fontSize: this.options.subtitleFontSize,\r\n                fontWeight: this.options.subtitleFontWeight,\r\n                texts: [],\r\n                tspans: []\r\n            };\r\n            // from v0.9.9, both subtitle and subtitleFormat(...) may be an array of string.\r\n            if (this.options.subtitleFormat !== undefined && this.options.subtitleFormat.constructor.name === 'Function') {\r\n                let formatted = this.options.subtitleFormat(subtitlePercent);\r\n                if (formatted instanceof Array) {\r\n                    subtitle.texts = [...formatted];\r\n                }\r\n                else {\r\n                    subtitle.texts.push(formatted.toString());\r\n                }\r\n            }\r\n            else {\r\n                if (this.options.subtitle instanceof Array) {\r\n                    subtitle.texts = [...this.options.subtitle];\r\n                }\r\n                else {\r\n                    subtitle.texts.push(this.options.subtitle.toString());\r\n                }\r\n            }\r\n            // get units object\r\n            let units = {\r\n                text: `${this.options.units}`,\r\n                fontSize: this.options.unitsFontSize,\r\n                fontWeight: this.options.unitsFontWeight,\r\n                color: this.options.unitsColor\r\n            };\r\n            // get total count of text lines to be shown\r\n            let rowCount = 0, rowNum = 1;\r\n            this.options.showTitle && (rowCount += title.texts.length);\r\n            this.options.showSubtitle && (rowCount += subtitle.texts.length);\r\n            // calc dy for each tspan for title\r\n            if (this.options.showTitle) {\r\n                for (let span of title.texts) {\r\n                    title.tspans.push({ span: span, dy: this.getRelativeY(rowNum, rowCount) });\r\n                    rowNum++;\r\n                }\r\n            }\r\n            // calc dy for each tspan for subtitle\r\n            if (this.options.showSubtitle) {\r\n                for (let span of subtitle.texts) {\r\n                    subtitle.tspans.push({ span: span, dy: this.getRelativeY(rowNum, rowCount) });\r\n                    rowNum++;\r\n                }\r\n            }\r\n            // create ID for gradient element\r\n            if (null === this._gradientUUID) {\r\n                this._gradientUUID = this.uuid();\r\n            }\r\n            // Bring it all together\r\n            this.svg = {\r\n                viewBox: `0 0 ${boxSize} ${boxSize}`,\r\n                // Set both width and height to '100%' if it's responsive\r\n                width: this.options.responsive ? '100%' : boxSize,\r\n                height: this.options.responsive ? '100%' : boxSize,\r\n                backgroundCircle: {\r\n                    cx: centre.x,\r\n                    cy: centre.y,\r\n                    r: this.options.radius + this.options.outerStrokeWidth / 2 + this.options.backgroundPadding,\r\n                    fill: this.options.backgroundColor,\r\n                    fillOpacity: this.options.backgroundOpacity,\r\n                    stroke: this.options.backgroundStroke,\r\n                    strokeWidth: this.options.backgroundStrokeWidth,\r\n                },\r\n                path: {\r\n                    // A rx ry x-axis-rotation large-arc-flag sweep-flag x y (https://developer.mozilla.org/en/docs/Web/SVG/Tutorial/Paths#Arcs)\r\n                    d: `M ${startPoint.x} ${startPoint.y}\r\n        A ${this.options.radius} ${this.options.radius} 0 ${largeArcFlag} ${sweepFlag} ${endPoint.x} ${endPoint.y}`,\r\n                    stroke: this.options.outerStrokeColor,\r\n                    strokeWidth: this.options.outerStrokeWidth,\r\n                    strokeLinecap: this.options.outerStrokeLinecap,\r\n                    fill: 'none'\r\n                },\r\n                circle: {\r\n                    cx: centre.x,\r\n                    cy: centre.y,\r\n                    r: this.options.radius - this.options.space - this.options.outerStrokeWidth / 2 - this.options.innerStrokeWidth / 2,\r\n                    fill: 'none',\r\n                    stroke: this.options.innerStrokeColor,\r\n                    strokeWidth: this.options.innerStrokeWidth,\r\n                },\r\n                title: title,\r\n                units: units,\r\n                subtitle: subtitle,\r\n                image: {\r\n                    x: centre.x - this.options.imageWidth / 2,\r\n                    y: centre.y - this.options.imageHeight / 2,\r\n                    src: this.options.imageSrc,\r\n                    width: this.options.imageWidth,\r\n                    height: this.options.imageHeight,\r\n                },\r\n                outerLinearGradient: {\r\n                    id: 'outer-linear-' + this._gradientUUID,\r\n                    colorStop1: this.options.outerStrokeColor,\r\n                    colorStop2: this.options.outerStrokeGradientStopColor === 'transparent' ? '#FFF' : this.options.outerStrokeGradientStopColor,\r\n                },\r\n                radialGradient: {\r\n                    id: 'radial-' + this._gradientUUID,\r\n                    colorStop1: this.options.backgroundColor,\r\n                    colorStop2: this.options.backgroundGradientStopColor === 'transparent' ? '#FFF' : this.options.backgroundGradientStopColor,\r\n                }\r\n            };\r\n        };\r\n        this.getAnimationParameters = (previousPercent, currentPercent) => {\r\n            const MIN_INTERVAL = 10;\r\n            let times, step, interval;\r\n            let fromPercent = this.options.startFromZero ? 0 : (previousPercent < 0 ? 0 : previousPercent);\r\n            let toPercent = currentPercent < 0 ? 0 : this.min(currentPercent, this.options.maxPercent);\r\n            let delta = Math.abs(Math.round(toPercent - fromPercent));\r\n            if (delta >= 100) {\r\n                // we will finish animation in 100 times\r\n                times = 100;\r\n                if (!this.options.animateTitle && !this.options.animateSubtitle) {\r\n                    step = 1;\r\n                }\r\n                else {\r\n                    // show title or subtitle animation even if the arc is full, we also need to finish it in 100 times.\r\n                    step = Math.round(delta / times);\r\n                }\r\n            }\r\n            else {\r\n                // we will finish in as many times as the number of percent.\r\n                times = delta;\r\n                step = 1;\r\n            }\r\n            // Get the interval of timer\r\n            interval = Math.round(this.options.animationDuration / times);\r\n            // Readjust all values if the interval of timer is extremely small.\r\n            if (interval < MIN_INTERVAL) {\r\n                interval = MIN_INTERVAL;\r\n                times = this.options.animationDuration / interval;\r\n                if (!this.options.animateTitle && !this.options.animateSubtitle && delta > 100) {\r\n                    step = Math.round(100 / times);\r\n                }\r\n                else {\r\n                    step = Math.round(delta / times);\r\n                }\r\n            }\r\n            // step must be greater than 0.\r\n            if (step < 1) {\r\n                step = 1;\r\n            }\r\n            return { times: times, step: step, interval: interval };\r\n        };\r\n        this.animate = (previousPercent, currentPercent) => {\r\n            if (this._timerSubscription && !this._timerSubscription.closed) {\r\n                this._timerSubscription.unsubscribe();\r\n            }\r\n            let fromPercent = this.options.startFromZero ? 0 : previousPercent;\r\n            let toPercent = currentPercent;\r\n            let { step: step, interval: interval } = this.getAnimationParameters(fromPercent, toPercent);\r\n            let count = fromPercent;\r\n            if (fromPercent < toPercent) {\r\n                this._timerSubscription = timer(0, interval).subscribe(() => {\r\n                    count += step;\r\n                    if (count <= toPercent) {\r\n                        if (!this.options.animateTitle && !this.options.animateSubtitle && count >= 100) {\r\n                            this.draw(toPercent);\r\n                            this._timerSubscription.unsubscribe();\r\n                        }\r\n                        else {\r\n                            this.draw(count);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.draw(toPercent);\r\n                        this._timerSubscription.unsubscribe();\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                this._timerSubscription = timer(0, interval).subscribe(() => {\r\n                    count -= step;\r\n                    if (count >= toPercent) {\r\n                        if (!this.options.animateTitle && !this.options.animateSubtitle && toPercent >= 100) {\r\n                            this.draw(toPercent);\r\n                            this._timerSubscription.unsubscribe();\r\n                        }\r\n                        else {\r\n                            this.draw(count);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.draw(toPercent);\r\n                        this._timerSubscription.unsubscribe();\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        this.emitClickEvent = (event) => {\r\n            if (this.options.renderOnClick) {\r\n                this.animate(0, this.options.percent);\r\n            }\r\n            this.onClick.emit(event);\r\n        };\r\n        this.applyOptions = () => {\r\n            // the options of <circle-progress> may change already\r\n            for (let name of Object.keys(this.options)) {\r\n                if (this.hasOwnProperty(name) && this[name] !== undefined) {\r\n                    this.options[name] = this[name];\r\n                }\r\n                else if (this.templateOptions && this.templateOptions[name] !== undefined) {\r\n                    this.options[name] = this.templateOptions[name];\r\n                }\r\n            }\r\n            // make sure key options valid\r\n            this.options.radius = Math.abs(+this.options.radius);\r\n            this.options.space = +this.options.space;\r\n            this.options.percent = +this.options.percent > 0 ? +this.options.percent : 0;\r\n            this.options.maxPercent = Math.abs(+this.options.maxPercent);\r\n            this.options.animationDuration = Math.abs(this.options.animationDuration);\r\n            this.options.outerStrokeWidth = Math.abs(+this.options.outerStrokeWidth);\r\n            this.options.innerStrokeWidth = Math.abs(+this.options.innerStrokeWidth);\r\n            this.options.backgroundPadding = +this.options.backgroundPadding;\r\n        };\r\n        this.getRelativeY = (rowNum, rowCount) => {\r\n            // why '-0.18em'? It's a magic number when property 'alignment-baseline' equals 'baseline'. :)\r\n            let initialOffset = -0.18, offset = 1;\r\n            return (initialOffset + offset * (rowNum - rowCount / 2)).toFixed(2) + 'em';\r\n        };\r\n        this.min = (a, b) => {\r\n            return a < b ? a : b;\r\n        };\r\n        this.max = (a, b) => {\r\n            return a > b ? a : b;\r\n        };\r\n        this.uuid = () => {\r\n            // https://www.w3resource.com/javascript-exercises/javascript-math-exercise-23.php\r\n            var dt = new Date().getTime();\r\n            var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                var r = (dt + Math.random() * 16) % 16 | 0;\r\n                dt = Math.floor(dt / 16);\r\n                return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n            });\r\n            return uuid;\r\n        };\r\n        this.findSvgElement = function () {\r\n            if (this.svgElement === null) {\r\n                let tags = this.elRef.nativeElement.getElementsByTagName('svg');\r\n                if (tags.length > 0) {\r\n                    this.svgElement = tags[0];\r\n                }\r\n            }\r\n        };\r\n        this.checkViewport = () => {\r\n            this.findSvgElement();\r\n            let previousValue = this.isInViewport;\r\n            this.isInViewport = this.isElementInViewport(this.svgElement);\r\n            if (previousValue !== this.isInViewport) {\r\n                this.onViewportChanged.emit({ oldValue: previousValue, newValue: this.isInViewport });\r\n            }\r\n        };\r\n        this.onScroll = (event) => {\r\n            this.checkViewport();\r\n        };\r\n        this.loadEventsForLazyMode = () => {\r\n            if (this.options.lazy) {\r\n                this.document.addEventListener('scroll', this.onScroll, true);\r\n                this.window.addEventListener('resize', this.onScroll, true);\r\n                if (this._viewportChangedSubscriber === null) {\r\n                    this._viewportChangedSubscriber = this.onViewportChanged.subscribe(({ oldValue, newValue }) => {\r\n                        newValue ? this.render() : null;\r\n                    });\r\n                }\r\n                // svgElement must be created in DOM before being checked.\r\n                // Is there a better way to check the existence of svgElemnt?\r\n                let _timer = timer(0, 50).subscribe(() => {\r\n                    this.svgElement === null ? this.checkViewport() : _timer.unsubscribe();\r\n                });\r\n            }\r\n        };\r\n        this.unloadEventsForLazyMode = () => {\r\n            // Remove event listeners\r\n            this.document.removeEventListener('scroll', this.onScroll, true);\r\n            this.window.removeEventListener('resize', this.onScroll, true);\r\n            // Unsubscribe onViewportChanged\r\n            if (this._viewportChangedSubscriber !== null) {\r\n                this._viewportChangedSubscriber.unsubscribe();\r\n                this._viewportChangedSubscriber = null;\r\n            }\r\n        };\r\n        this.document = document;\r\n        this.window = this.document.defaultView;\r\n        Object.assign(this.options, defaultOptions);\r\n        Object.assign(this.defaultOptions, defaultOptions);\r\n    }\r\n    isDrawing() {\r\n        return (this._timerSubscription && !this._timerSubscription.closed);\r\n    }\r\n    isElementInViewport(el) {\r\n        // Return false if el has not been created in page.\r\n        if (el === null || el === undefined)\r\n            return false;\r\n        // Check if the element is out of view due to a container scrolling\r\n        let rect = el.getBoundingClientRect(), parent = el.parentNode, parentRect;\r\n        do {\r\n            parentRect = parent.getBoundingClientRect();\r\n            if (rect.top >= parentRect.bottom)\r\n                return false;\r\n            if (rect.bottom <= parentRect.top)\r\n                return false;\r\n            if (rect.left >= parentRect.right)\r\n                return false;\r\n            if (rect.right <= parentRect.left)\r\n                return false;\r\n            parent = parent.parentNode;\r\n        } while (parent != this.document.body);\r\n        // Check its within the document viewport\r\n        if (rect.top >= (this.window.innerHeight || this.document.documentElement.clientHeight))\r\n            return false;\r\n        if (rect.bottom <= 0)\r\n            return false;\r\n        if (rect.left >= (this.window.innerWidth || this.document.documentElement.clientWidth))\r\n            return false;\r\n        if (rect.right <= 0)\r\n            return false;\r\n        return true;\r\n    }\r\n    ngOnInit() {\r\n        this.loadEventsForLazyMode();\r\n    }\r\n    ngOnDestroy() {\r\n        this.unloadEventsForLazyMode();\r\n    }\r\n    ngOnChanges(changes) {\r\n        this.render();\r\n        if ('lazy' in changes) {\r\n            changes.lazy.currentValue ? this.loadEventsForLazyMode() : this.unloadEventsForLazyMode();\r\n        }\r\n    }\r\n};\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], CircleProgressComponent.prototype, \"onClick\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"name\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"class\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"backgroundGradient\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"backgroundColor\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"backgroundGradientStopColor\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], CircleProgressComponent.prototype, \"backgroundOpacity\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"backgroundStroke\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], CircleProgressComponent.prototype, \"backgroundStrokeWidth\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], CircleProgressComponent.prototype, \"backgroundPadding\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], CircleProgressComponent.prototype, \"radius\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], CircleProgressComponent.prototype, \"space\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], CircleProgressComponent.prototype, \"percent\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], CircleProgressComponent.prototype, \"toFixed\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], CircleProgressComponent.prototype, \"maxPercent\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"renderOnClick\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"units\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"unitsFontSize\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"unitsFontWeight\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"unitsColor\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"outerStrokeGradient\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], CircleProgressComponent.prototype, \"outerStrokeWidth\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"outerStrokeColor\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"outerStrokeGradientStopColor\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"outerStrokeLinecap\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"innerStrokeColor\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], CircleProgressComponent.prototype, \"innerStrokeWidth\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Function)\r\n], CircleProgressComponent.prototype, \"titleFormat\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], CircleProgressComponent.prototype, \"title\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"titleColor\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"titleFontSize\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"titleFontWeight\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Function)\r\n], CircleProgressComponent.prototype, \"subtitleFormat\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], CircleProgressComponent.prototype, \"subtitle\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"subtitleColor\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"subtitleFontSize\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"subtitleFontWeight\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"imageSrc\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], CircleProgressComponent.prototype, \"imageHeight\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], CircleProgressComponent.prototype, \"imageWidth\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"animation\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"animateTitle\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"animateSubtitle\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], CircleProgressComponent.prototype, \"animationDuration\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"showTitle\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"showSubtitle\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"showUnits\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"showImage\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"showBackground\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"showInnerStroke\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"clockwise\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"responsive\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"startFromZero\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"showZeroOuterStroke\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"lazy\", void 0);\r\n__decorate([\r\n    Input('options'),\r\n    __metadata(\"design:type\", CircleProgressOptions)\r\n], CircleProgressComponent.prototype, \"templateOptions\", void 0);\r\nCircleProgressComponent = __decorate([\r\n    Component({\r\n        selector: 'circle-progress',\r\n        template: `\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" *ngIf=\"svg\"\r\n             [attr.viewBox]=\"svg.viewBox\" preserveAspectRatio=\"xMidYMid meet\"\r\n             [attr.height]=\"svg.height\" [attr.width]=\"svg.width\" (click)=\"emitClickEvent($event)\" [attr.class]=\"options.class\">\r\n            <defs>\r\n                <linearGradient *ngIf=\"options.outerStrokeGradient\" [attr.id]=\"svg.outerLinearGradient.id\">\r\n                    <stop offset=\"5%\" [attr.stop-color]=\"svg.outerLinearGradient.colorStop1\"  [attr.stop-opacity]=\"1\"/>\r\n                    <stop offset=\"95%\" [attr.stop-color]=\"svg.outerLinearGradient.colorStop2\" [attr.stop-opacity]=\"1\"/>\r\n                </linearGradient>\r\n                <radialGradient *ngIf=\"options.backgroundGradient\" [attr.id]=\"svg.radialGradient.id\">\r\n                    <stop offset=\"5%\" [attr.stop-color]=\"svg.radialGradient.colorStop1\" [attr.stop-opacity]=\"1\"/>\r\n                    <stop offset=\"95%\" [attr.stop-color]=\"svg.radialGradient.colorStop2\" [attr.stop-opacity]=\"1\"/>\r\n                </radialGradient>\r\n            </defs>\r\n            <ng-container *ngIf=\"options.showBackground\">\r\n                <circle *ngIf=\"!options.backgroundGradient\"\r\n                        [attr.cx]=\"svg.backgroundCircle.cx\"\r\n                        [attr.cy]=\"svg.backgroundCircle.cy\"\r\n                        [attr.r]=\"svg.backgroundCircle.r\"\r\n                        [attr.fill]=\"svg.backgroundCircle.fill\"\r\n                        [attr.fill-opacity]=\"svg.backgroundCircle.fillOpacity\"\r\n                        [attr.stroke]=\"svg.backgroundCircle.stroke\"\r\n                        [attr.stroke-width]=\"svg.backgroundCircle.strokeWidth\"/>\r\n                <circle *ngIf=\"options.backgroundGradient\"\r\n                        [attr.cx]=\"svg.backgroundCircle.cx\"\r\n                        [attr.cy]=\"svg.backgroundCircle.cy\"\r\n                        [attr.r]=\"svg.backgroundCircle.r\"\r\n                        attr.fill=\"url(#{{svg.radialGradient.id}})\"\r\n                        [attr.fill-opacity]=\"svg.backgroundCircle.fillOpacity\"\r\n                        [attr.stroke]=\"svg.backgroundCircle.stroke\"\r\n                        [attr.stroke-width]=\"svg.backgroundCircle.strokeWidth\"/>\r\n            </ng-container>            \r\n            <circle *ngIf=\"options.showInnerStroke\"\r\n                    [attr.cx]=\"svg.circle.cx\"\r\n                    [attr.cy]=\"svg.circle.cy\"\r\n                    [attr.r]=\"svg.circle.r\"\r\n                    [attr.fill]=\"svg.circle.fill\"\r\n                    [attr.stroke]=\"svg.circle.stroke\"\r\n                    [attr.stroke-width]=\"svg.circle.strokeWidth\"/>\r\n            <ng-container *ngIf=\"+options.percent!==0 || options.showZeroOuterStroke\">\r\n                <path *ngIf=\"!options.outerStrokeGradient\"\r\n                        [attr.d]=\"svg.path.d\"\r\n                        [attr.stroke]=\"svg.path.stroke\"\r\n                        [attr.stroke-width]=\"svg.path.strokeWidth\"\r\n                        [attr.stroke-linecap]=\"svg.path.strokeLinecap\"\r\n                        [attr.fill]=\"svg.path.fill\"/>\r\n                <path *ngIf=\"options.outerStrokeGradient\"\r\n                        [attr.d]=\"svg.path.d\"\r\n                        attr.stroke=\"url(#{{svg.outerLinearGradient.id}})\"\r\n                        [attr.stroke-width]=\"svg.path.strokeWidth\"\r\n                        [attr.stroke-linecap]=\"svg.path.strokeLinecap\"\r\n                        [attr.fill]=\"svg.path.fill\"/>\r\n            </ng-container>\r\n            <text *ngIf=\"!options.showImage && (options.showTitle || options.showUnits || options.showSubtitle)\"\r\n                  alignment-baseline=\"baseline\"\r\n                  [attr.x]=\"svg.circle.cx\"\r\n                  [attr.y]=\"svg.circle.cy\"\r\n                  [attr.text-anchor]=\"svg.title.textAnchor\">\r\n                <ng-container *ngIf=\"options.showTitle\">\r\n                    <tspan *ngFor=\"let tspan of svg.title.tspans\"\r\n                           [attr.x]=\"svg.title.x\"\r\n                           [attr.y]=\"svg.title.y\"\r\n                           [attr.dy]=\"tspan.dy\"\r\n                           [attr.font-size]=\"svg.title.fontSize\"\r\n                           [attr.font-weight]=\"svg.title.fontWeight\"\r\n                           [attr.fill]=\"svg.title.color\">{{tspan.span}}</tspan>\r\n                </ng-container>\r\n                <tspan *ngIf=\"options.showUnits\"\r\n                       [attr.font-size]=\"svg.units.fontSize\"\r\n                       [attr.font-weight]=\"svg.units.fontWeight\"\r\n                       [attr.fill]=\"svg.units.color\">{{svg.units.text}}</tspan>\r\n                <ng-container *ngIf=\"options.showSubtitle\">\r\n                    <tspan *ngFor=\"let tspan of svg.subtitle.tspans\"\r\n                           [attr.x]=\"svg.subtitle.x\"\r\n                           [attr.y]=\"svg.subtitle.y\"\r\n                           [attr.dy]=\"tspan.dy\"\r\n                           [attr.font-size]=\"svg.subtitle.fontSize\"\r\n                           [attr.font-weight]=\"svg.subtitle.fontWeight\"\r\n                           [attr.fill]=\"svg.subtitle.color\">{{tspan.span}}</tspan>\r\n                </ng-container>\r\n            </text>\r\n            <image *ngIf=\"options.showImage\" preserveAspectRatio=\"none\" \r\n                [attr.height]=\"svg.image.height\"\r\n                [attr.width]=\"svg.image.width\"\r\n                [attr.xlink:href]=\"svg.image.src\"\r\n                [attr.x]=\"svg.image.x\"\r\n                [attr.y]=\"svg.image.y\"\r\n            />\r\n        </svg>\r\n    `\r\n    }),\r\n    __param(2, Inject(DOCUMENT)),\r\n    __metadata(\"design:paramtypes\", [CircleProgressOptions, ElementRef, Object])\r\n], CircleProgressComponent);\n\nvar NgCircleProgressModule_1;\r\nlet NgCircleProgressModule = NgCircleProgressModule_1 = class NgCircleProgressModule {\r\n    static forRoot(options = {}) {\r\n        return {\r\n            ngModule: NgCircleProgressModule_1,\r\n            providers: [\r\n                { provide: CircleProgressOptions, useValue: options }\r\n            ]\r\n        };\r\n    }\r\n};\r\nNgCircleProgressModule = NgCircleProgressModule_1 = __decorate([\r\n    NgModule({\r\n        imports: [\r\n            CommonModule\r\n        ],\r\n        declarations: [\r\n            CircleProgressComponent,\r\n        ],\r\n        exports: [\r\n            CircleProgressComponent,\r\n        ]\r\n    })\r\n], NgCircleProgressModule);\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { CircleProgressComponent, CircleProgressOptions, NgCircleProgressModule };\n//# sourceMappingURL=ng-circle-progress.js.map\n","export default \"<header-route-menu></header-route-menu>\\n<div class=\\\"container-fluid mt--6\\\">\\n    <div class=\\\"row\\\">\\n        <!-- Speaking -->\\n        <div class=\\\"col-md-6 col-xl-3\\\" (click)=\\\"goToQBank('speaking')\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"left-content\\\">\\n                    <p class=\\\"question-title\\\">\\n                        {{homeData[3].moduleType}}\\n                    </p>\\n                    <p class=\\\"question-count\\\">\\n                        {{homeData[3].moduleQuestionCount}}\\n                    </p>\\n\\n                    <progress-bar [progress-percent]=\\\"homeData[3].progressPercent\\\"></progress-bar>\\n\\n                </div>\\n                <div class=\\\"icon-content speaking\\\">\\n                    <div class=\\\"question-icon \\\">\\n                        <img src=\\\"assets/icon/menu/speaking.svg\\\">\\n                    </div>\\n                    <p>Speaking</p>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <!-- Writing -->\\n        <div class=\\\"col-md-6 col-xl-3\\\" (click)=\\\"goToQBank('writing')\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"left-content\\\">\\n                    <p class=\\\"question-title\\\">\\n                        {{homeData[0].moduleType}}\\n                    </p>\\n                    <p class=\\\"question-count\\\">\\n                        {{homeData[0].moduleQuestionCount}}\\n                    </p>\\n\\n                    <progress-bar [progress-percent]=\\\"homeData[0].progressPercent\\\"></progress-bar>\\n\\n                </div>\\n                <div class=\\\"icon-content writing\\\">\\n                    <div class=\\\"question-icon\\\">\\n                        <img src=\\\"assets/icon/menu/writing.svg\\\">\\n                    </div>\\n                    <p>Writing</p>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <!-- Reading -->\\n        <div class=\\\"col-md-6 col-xl-3\\\" (click)=\\\"goToQBank('reading')\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"left-content\\\">\\n                    <p class=\\\"question-title\\\">\\n                        {{homeData[1].moduleType}}\\n                    </p>\\n                    <p class=\\\"question-count\\\">\\n                        {{homeData[1].moduleQuestionCount}}\\n                    </p>\\n\\n                    <progress-bar [progress-percent]=\\\"homeData[1].progressPercent\\\"></progress-bar>\\n\\n                </div>\\n                <div class=\\\"icon-content reading\\\">\\n                    <div class=\\\"question-icon \\\">\\n                        <img src=\\\"assets/icon/menu/reading.svg\\\">\\n                    </div>\\n                    <p>Reading</p>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <!-- Listening -->\\n        <div class=\\\"col-md-6 col-xl-3\\\" (click)=\\\"goToQBank('listening')\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"left-content\\\">\\n                    <p class=\\\"question-title\\\">\\n                        {{homeData[2].moduleType}}\\n                    </p>\\n                    <p class=\\\"question-count\\\">\\n                        {{homeData[2].moduleQuestionCount}}\\n                    </p>\\n\\n                    <progress-bar [progress-percent]=\\\"homeData[2].progressPercent\\\"></progress-bar>\\n\\n                </div>\\n                <div class=\\\"icon-content listening\\\">\\n                    <div class=\\\"question-icon\\\">\\n                        <img src=\\\"assets/icon/menu/listening.svg\\\">\\n                    </div>\\n                    <p>Listening</p>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 col-xl-4\\\">\\n            <div class=\\\"card p-0\\\" style=\\\"flex-direction: column;\\\">\\n                <p class=\\\"plan-title \\\">\\n                    Study Plan\\n                </p>\\n                <div class=\\\"studyplan-img \\\">\\n                    <ng-lottie height=\\\"200px\\\" [styles]=\\\"styles\\\" [options]=\\\"options\\\"></ng-lottie>\\n                </div>\\n                <ng-container *ngFor=\\\"let qb of homeData[4].questionBank\\\">\\n                    <div class=\\\"prediction-question\\\">\\n                        <div [class]=\\\"qb.moduleType.toLowerCase()\\\">\\n                            <p>\\n                                {{qb.moduleType}}\\n                            </p>\\n                            <div style=\\\"height: 80px;\\\">\\n                                <circle-progress [percent]=\\\"qb.progress\\\" [radius]=\\\"100\\\" [outerStrokeColor]=\\\"'#D6980C'\\\"\\n                                    [showSubtitle]=false [innerStrokeColor]=\\\"'rgb(248, 248, 219)'\\\" [animation]=\\\"true\\\"\\n                                    [outerStrokeWidth]=\\\"24\\\" [animationDuration]=\\\"500\\\" [responsive]=\\\"true\\\"\\n                                    [showBackground]=true [unitsFontSize]=\\\"32\\\" [titleFontSize]=\\\"46\\\"\\n                                    [backgroundColor]=\\\"'rgb(248, 248, 219)'\\\"></circle-progress>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </ng-container>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"col-md-6 col-xl-4\\\">\\n            <div class=\\\"card card-training\\\" style=\\\"flex-direction: column;\\\" (click)=\\\"goToVocab()\\\">\\n                <div class=\\\"d-flex justify-content-between\\\">\\n                    <div class=\\\"d-flex flex-column justify-content-start\\\">\\n                        <div class=\\\"training-title-box\\\">\\n                            Learn\\n                        </div>\\n                        <p class=\\\"training-title\\\">\\n                            Vocabulary\\n                        </p>\\n                    </div>\\n                    <div class=\\\"studyplan-img\\\">\\n                        <ng-lottie height=\\\"120px\\\" [styles]=\\\"styles\\\" [options]=\\\"option2\\\"></ng-lottie>\\n                    </div>\\n                </div>\\n                <span class=\\\"training-description\\\">Learn new vocabulary and pronunciation</span>\\n            </div>\\n\\n            <div class=\\\"card card-training training-grammar\\\" style=\\\"flex-direction: column;\\\" (click)=\\\"goToGrammar()\\\">\\n                <div class=\\\"d-flex justify-content-between\\\">\\n                    <div class=\\\"d-flex flex-column justify-content-center\\\">\\n                        <div class=\\\"training-title-box title-box-grammar\\\">\\n                            Learn\\n                        </div>\\n                        <p class=\\\"training-title\\\">\\n                            Grammar\\n                        </p>\\n                    </div>\\n                    <div class=\\\"studyplan-img\\\">\\n                        <ng-lottie height=\\\"110px\\\" [styles]=\\\"styles\\\" [options]=\\\"option3\\\"></ng-lottie>\\n                    </div>\\n                </div>\\n                <span class=\\\"training-description\\\">Our grammar guide will help you</span>\\n            </div>\\n\\n            <div class=\\\"card card-subscribe\\\" (click)=\\\"goToChannel()\\\">\\n                <ng-lottie height=\\\"150px\\\" [styles]=\\\"styles\\\" [options]=\\\"option5\\\"></ng-lottie>\\n            </div>            \\n        </div>\\n\\n        <div class=\\\"col-md-6 col-xl-4\\\">\\n            <div class=\\\"col-md-12 col-xl-12 mb-3\\\">\\n                <div class=\\\"card p-0 subscribe__card\\\" (click)=\\\"goToLiveClass()\\\">\\n                    <div class=\\\"studyplan-img\\\">\\n                        <ng-lottie height=\\\"220px\\\" [styles]=\\\"styles\\\" [options]=\\\"option4\\\"></ng-lottie>\\n                    </div>\\n                    <p class=\\\"plan-title subscrib__title\\\">Live Classes</p>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"col-md-12 col-xl-12 mb-3\\\">\\n                <div class=\\\"card p-0 mb-3\\\" (click)=\\\"goToPrediction()\\\">\\n                    <div class=\\\"d-flex w-100\\\">\\n                        <div class=\\\"img\\\">\\n                            <img src=\\\"assets/icon/menu/prediction-file.svg\\\">\\n                        </div>\\n                        <div class=\\\"right-text\\\"> Prediction</div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"card p-0\\\" (click)=\\\"goToMock()\\\">\\n                    <div class=\\\"d-flex w-100\\\">\\n                        <div class=\\\"img\\\">\\n                            <img src=\\\"assets/icon/menu/individual-mock.svg\\\">\\n                        </div>\\n                        <div class=\\\"right-text\\\"> Mock Test</div>\\n                    </div>\\n                </div>\\n            </div>\\n          \\n          \\n        </div>\\n    </div>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HometResolver } from '@app/modules/home/reslovers/home.reslover';\n\nimport { HomeComponent } from \"./home/home.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    resolve:{\n      data:HometResolver\n    }\n    }\n];\n\n  @NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n    providers:[\n      HometResolver\n    ]\n  })\nexport class HomeRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from \"./home/home.component\";\nimport { HomeRoutingModule } from '@app/modules/home/home-routing.moudule';\nimport { BasicModule } from '@app/shared/basic-components/basic.module';\n// Import ng-circle-progress\nimport { NgCircleProgressModule } from 'ng-circle-progress';\nimport { LottieModule } from 'ngx-lottie';\nimport player from 'lottie-web';\n\nexport function playerFactory() {\n  return player;\n}\n\n@NgModule({\n  declarations: [\n    HomeComponent\n  ],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    BasicModule,\n    // Specify ng-circle-progress as an import\n    NgCircleProgressModule.forRoot({}),\n    LottieModule.forRoot({ player: playerFactory })\n  ],\n  exports:[\n    HomeRoutingModule\n  ]\n})\nexport class HomeModule { }\n","export default \"p.question-title,p.question-count,.question-progress-percent,.icon-content p,\\n.plan-title,.reading>p,.listening>p,.right-text,.training-title{\\n    font-family: Lullabies;\\n}\\np {\\n    margin-bottom: 10px;\\n}\\n.card {\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-orient: horizontal;\\n    -webkit-box-direction: normal;\\n            flex-direction: row;\\n    -webkit-box-pack: justify;\\n            justify-content: space-between;\\n    box-shadow: var(--card-boxshadow);\\n}\\n/* ---------------------------------------------------\\n    CARD LEFT CONTENT\\n----------------------------------------------------- */\\n.left-content {\\n    width: 60%;\\n}\\np.question-title {\\n    color: var(--text-fade-color);\\n}\\n/* ---------------------------------------------------\\n    ICON CONTENT\\n----------------------------------------------------- */\\n.icon-content {\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n            flex-direction: column;\\n    -webkit-box-align: center;\\n            align-items: center;\\n    -webkit-box-pack: center;\\n            justify-content: center;\\n    width: 40%;\\n}\\n.icon-content p {\\n    font-weight: 500;\\n}\\n.question-icon {\\n    width: 50%;\\n    height: 50%;\\n    margin-bottom: 6px;\\n}\\n.question-icon img {\\n    width: 100%;\\n    height: 100%;\\n    -o-object-fit: contain;\\n       object-fit: contain;\\n}\\n.speaking .question-icon img {\\n    -webkit-filter: var(--speaking-filter-color);\\n            filter: var(--speaking-filter-color);\\n}\\n.listening .question-icon img {\\n    -webkit-filter: var(--listening-filter-color);\\n            filter: var(--listening-filter-color);\\n}\\n.writing .question-icon img {\\n    -webkit-filter: var(--writing-filter-color);\\n            filter: var(--writing-filter-color);\\n}\\n.reading .question-icon img {\\n    -webkit-filter: var(--reading-filter-color);\\n            filter: var(--reading-filter-color);\\n}\\n.speaking p {\\n    color: var(--speaking-color)\\n}\\n.listening p {\\n    color: var(--listening-color)\\n}\\n.writing p {\\n    color: var(--writing-color);\\n}\\n.reading p {\\n    color: var(--reading-color);\\n}\\n/* \\np.question-count {\\n    color: var(--text-dark-color);\\n} */\\n/* ---------------------------------------------------\\n    STUDY PLAN,Individual Mock Test,Prediction File\\n----------------------------------------------------- */\\nul {\\n    width: 100%;\\n    margin-bottom: 0;\\n}\\nli {\\n    padding: 16px;\\n    border-bottom: solid 1px #ececec;\\n}\\nli.title {\\n    text-align: center;\\n    FONT-WEIGHT: 600;\\n    color: var(--text-dark-color);\\n}\\n.bar {\\n    width: 6px;\\n    background-color: var(--text-fade-color);\\n    height: 40px;\\n    border-radius: 5px;\\n    display: inline-block;\\n    margin-right: 10px;\\n}\\n.speaking .bar {\\n    background-color: var(--speaking-color);\\n    color: var(--speaking-color);\\n}\\n.listening .bar {\\n    background-color: var(--listening-color);\\n    color: var(--listening-color);\\n}\\n.reading .bar {\\n    background-color: var(--reading-color);\\n    color: var(--reading-color);\\n}\\n.writing .bar {\\n    background-color: var(--writing-color);\\n    color: var(--writing-color);\\n}\\n.speaking {\\n    color: var(--speaking-color);\\n}\\n.listening {\\n    color: var(--listening-color);\\n}\\n.reading {\\n    color: var(--reading-color);\\n}\\n.writing {\\n    color: var(--writing-color);\\n}\\n.question>div {\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-align: center;\\n            align-items: center;\\n}\\nli.prediction-question {\\n    display: -webkit-box;\\n    display: flex;\\n    flex-wrap: wrap;\\n}\\n.prediction-question>div {\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n    flex-direction: row;\\n    -webkit-box-align: center;\\n            align-items: center;\\n    margin: 8px;\\n    border-radius: 10px;\\n    padding: 10px;\\n    -webkit-box-pack: justify;\\n            justify-content: space-between;\\n}\\n.prediction-question>.speaking,.mock-question>.speaking {\\n    background-color: #d1ffd1;\\n}\\n.prediction-question>.listening,.mock-question>.listening {\\n    background-color: #ffe1e7;\\n}\\n.prediction-question>.reading,.mock-question>.reading {\\n    background-color: #d6f8ff;\\n}\\n.mock-question>div{\\n    display: -webkit-box;\\n    display: flex;\\n    height: 105px;\\n    -webkit-box-pack: justify;\\n            justify-content: space-between;\\n    padding: 10px;\\n    border-radius: 10px;\\n}\\n.right-text{\\n    background-color: var(--half-bg-color);\\n    color: white;\\n    text-transform: uppercase;\\n    /* font-weight: 500; */\\n    width: 100%;\\n    /* font-size: 18px; */\\n    padding: 20px;\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-align: center;\\n            align-items: center;\\n    cursor: pointer;\\n    border-radius: 0px 14px 14px 0px;\\n}\\n.img {\\n    width: 100px;\\n    height: 80px;\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-align: center;\\n            align-items: center;\\n    -webkit-box-pack: center;\\n            justify-content: center;\\n}\\n.uncheck-box {\\n    border: solid 1px var(--text-fade-color);\\n    height: 20px;\\n    width: 20px;\\n}\\n@media only screen and (max-width: 760px) {\\n    .prediction-question>div {\\n        width:100%;\\n    }\\n}\\n.prediction-question{\\n    border-bottom: solid 1px #ebebeb;\\n}\\n.prediction-question:last-child{\\n    border-bottom: unset;\\n}\\np.plan-title {\\n    padding: 18px;\\n    font-weight: 500;\\n    border-bottom: solid;\\n    border-bottom: solid 1px #ebebeb;\\n    color: var(--text-fade-color);\\n    text-align: center;\\n}\\n.card-training {\\n    border: solid;\\n    background-color: #dcfaff;\\n    margin-bottom: 30px;\\n}\\n.training-title-box {\\n    background-color: #40c0d6;\\n    color: white;\\n    border: solid 1px black;\\n    border-radius: 26px;\\n    padding: 2px;\\n    font-size: 14px;\\n    font-weight: 500;\\n    width: 70px;\\n    text-align: center;\\n    margin-bottom: 10px;\\n}\\n.title-box-grammar{\\n    background-color: #fc86a1;\\n    color: #2d2c2c;\\n}\\n.training-grammar{\\n    border: solid;\\n    background-color: #fff1f4;\\n}\\np.training-title {\\n    font-size: 30px;\\n    font-weight: 600;\\n}\\n.training-description{\\n    font-size: 14px;\\n    font-weight: 500;\\n}\\n.card__subscribe--img {\\n    height: 40px;\\n}\\n.subscribe__card{\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n            flex-direction: column;\\n    /* margin-top: 20px; */\\n}\\n.subscrib__title{\\n    border-bottom: 0;\\n    border-top: solid 1px #ebebeb;\\n    color: var(--half-bg-color);\\n    margin-bottom: 0;\\n}\\n.card.card-subscribe {\\n    height: 80px;\\n    padding: 0;\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-pack: center;\\n            justify-content: center;\\n    -webkit-box-align: center;\\n            align-items: center;\\n}\\n.card.card-subscribe {\\n    background-color: #c90403;\\n    height: 80px;\\n    padding: 0;\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-pack: center;\\n            justify-content: center;\\n    -webkit-box-align: center;\\n            align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AnimationOptions } from 'ngx-lottie';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  public homeData:any;\n  options: AnimationOptions = {\n    path: 'assets/icon/lottie/studyplan.json',\n  };\n  \n  option2: AnimationOptions = {\n    path: 'assets/icon/lottie/questions-and-answer.json',\n  };\n\n  option3: AnimationOptions = {\n    path: 'assets/icon/lottie/change-answer.json',\n  };\n\n  option4: AnimationOptions = {\n    path: 'assets/icon/lottie/easy-to-learn.json',\n  };\n  \n  option5: AnimationOptions = {\n    path: 'assets/icon/lottie/subscribe-red.json',\n  };\n  constructor(private _activeRoute:ActivatedRoute,private _router:Router) { }\n\n  ngOnInit() {\n    this.homeData=this._activeRoute.snapshot.data['data'];\n  }\n\n  goToQBank(qb){\n    this._router.navigateByUrl(`alchemist-academy/question-bank/${qb}`)\n  }\n\n  goToStudyPlan(qb){\n    this._router.navigateByUrl(`alchemist-academy/evaluate-question/study-plan/${qb}`)\n  }\n\n  goToPrediction(qb){\n    this._router.navigateByUrl(`alchemist-academy/evaluate-question/prediction`)\n  }\n\n  goToMock(qb){\n    this._router.navigateByUrl(`alchemist-academy/evaluate-question/mock-test`)\n  }\n  goToVocab(){\n    this._router.navigateByUrl(`alchemist-academy/training-game/vocabulary`)\n  }\n\n  goToGrammar(){\n    this._router.navigateByUrl(`alchemist-academy/training-game/grammar`)\n  }\n\n  goToLiveClass(){\n    this._router.navigateByUrl(`alchemist-academy/live-classes`)\n  }\n\n\n  goToChannel(){\n    window.open('https://www.youtube.com/channel/UCNL1ZadSjHpjm4q9j2sVtOA', \"_blank\");\n  }\n}\n","import { Resolve } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';;\n\nimport { DetailService } from '@app/core/http/detail.service';\n\n\n@Injectable()\nexport class HometResolver implements Resolve<any> {\n\n    constructor(private service: DetailService) {\n    }\n\n    resolve():\n        Observable<any> {\n        return this.service.getHome();\n    }\n}"],"sourceRoot":"webpack:///"}