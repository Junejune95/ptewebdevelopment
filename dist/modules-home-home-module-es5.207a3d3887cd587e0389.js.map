{"version":3,"sources":["node_modules/ng-circle-progress/fesm2015/ng-circle-progress.js","src/app/modules/home/home/home.component.html","src/app/modules/home/home-routing.moudule.ts","src/app/modules/home/home.module.ts","src/app/modules/home/home/home.component.css","src/app/modules/home/home/home.component.ts","src/app/modules/home/reslovers/home.reslover.ts"],"names":[],"mappings":"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","sourcesContent":["import { __decorate, __metadata, __param } from 'tslib';\nimport { EventEmitter, Output, Input, Component, Inject, ElementRef, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { timer } from 'rxjs';\n\nclass CircleProgressOptions {\r\n    constructor() {\r\n        this.class = '';\r\n        this.backgroundGradient = false;\r\n        this.backgroundColor = 'transparent';\r\n        this.backgroundGradientStopColor = 'transparent';\r\n        this.backgroundOpacity = 1;\r\n        this.backgroundStroke = 'transparent';\r\n        this.backgroundStrokeWidth = 0;\r\n        this.backgroundPadding = 5;\r\n        this.percent = 0;\r\n        this.radius = 90;\r\n        this.space = 4;\r\n        this.toFixed = 0;\r\n        this.maxPercent = 1000;\r\n        this.renderOnClick = true;\r\n        this.units = '%';\r\n        this.unitsFontSize = '10';\r\n        this.unitsFontWeight = 'normal';\r\n        this.unitsColor = '#444444';\r\n        this.outerStrokeGradient = false;\r\n        this.outerStrokeWidth = 8;\r\n        this.outerStrokeColor = '#78C000';\r\n        this.outerStrokeGradientStopColor = 'transparent';\r\n        this.outerStrokeLinecap = 'round';\r\n        this.innerStrokeColor = '#C7E596';\r\n        this.innerStrokeWidth = 4;\r\n        this.titleFormat = undefined;\r\n        this.title = 'auto';\r\n        this.titleColor = '#444444';\r\n        this.titleFontSize = '20';\r\n        this.titleFontWeight = 'normal';\r\n        this.subtitleFormat = undefined;\r\n        this.subtitle = 'progress';\r\n        this.subtitleColor = '#A9A9A9';\r\n        this.subtitleFontSize = '10';\r\n        this.subtitleFontWeight = 'normal';\r\n        this.imageSrc = undefined;\r\n        this.imageHeight = undefined;\r\n        this.imageWidth = undefined;\r\n        this.animation = true;\r\n        this.animateTitle = true;\r\n        this.animateSubtitle = false;\r\n        this.animationDuration = 500;\r\n        this.showTitle = true;\r\n        this.showSubtitle = true;\r\n        this.showUnits = true;\r\n        this.showImage = false;\r\n        this.showBackground = true;\r\n        this.showInnerStroke = true;\r\n        this.clockwise = true;\r\n        this.responsive = false;\r\n        this.startFromZero = true;\r\n        this.showZeroOuterStroke = true;\r\n        this.lazy = false;\r\n    }\r\n}\r\n/** @dynamic Prevent compiling error when using type `Document` https://github.com/angular/angular/issues/20351 */\r\nlet CircleProgressComponent = class CircleProgressComponent {\r\n    constructor(defaultOptions, elRef, document) {\r\n        this.elRef = elRef;\r\n        this.document = document;\r\n        this.onClick = new EventEmitter();\r\n        // <svg> of component\r\n        this.svgElement = null;\r\n        // whether <svg> is in viewport\r\n        this.isInViewport = false;\r\n        // event for notifying viewport change caused by scrolling or resizing\r\n        this.onViewportChanged = new EventEmitter;\r\n        this._viewportChangedSubscriber = null;\r\n        this.options = new CircleProgressOptions();\r\n        this.defaultOptions = new CircleProgressOptions();\r\n        this._lastPercent = 0;\r\n        this._gradientUUID = null;\r\n        this.render = () => {\r\n            this.applyOptions();\r\n            if (this.options.lazy) {\r\n                // Draw svg if it doesn't exist\r\n                this.svgElement === null && this.draw(this._lastPercent);\r\n                // Draw it only when it's in the viewport\r\n                if (this.isInViewport) {\r\n                    // Draw it at the latest position when I am in.\r\n                    if (this.options.animation && this.options.animationDuration > 0) {\r\n                        this.animate(this._lastPercent, this.options.percent);\r\n                    }\r\n                    else {\r\n                        this.draw(this.options.percent);\r\n                    }\r\n                    this._lastPercent = this.options.percent;\r\n                }\r\n            }\r\n            else {\r\n                if (this.options.animation && this.options.animationDuration > 0) {\r\n                    this.animate(this._lastPercent, this.options.percent);\r\n                }\r\n                else {\r\n                    this.draw(this.options.percent);\r\n                }\r\n                this._lastPercent = this.options.percent;\r\n            }\r\n        };\r\n        this.polarToCartesian = (centerX, centerY, radius, angleInDegrees) => {\r\n            let angleInRadius = angleInDegrees * Math.PI / 180;\r\n            let x = centerX + Math.sin(angleInRadius) * radius;\r\n            let y = centerY - Math.cos(angleInRadius) * radius;\r\n            return { x: x, y: y };\r\n        };\r\n        this.draw = (percent) => {\r\n            // make percent reasonable\r\n            percent = (percent === undefined) ? this.options.percent : Math.abs(percent);\r\n            // circle percent shouldn't be greater than 100%.\r\n            let circlePercent = (percent > 100) ? 100 : percent;\r\n            // determine box size\r\n            let boxSize = this.options.radius * 2 + this.options.outerStrokeWidth * 2;\r\n            if (this.options.showBackground) {\r\n                boxSize += (this.options.backgroundStrokeWidth * 2 + this.max(0, this.options.backgroundPadding * 2));\r\n            }\r\n            // the centre of the circle\r\n            let centre = { x: boxSize / 2, y: boxSize / 2 };\r\n            // the start point of the arc\r\n            let startPoint = { x: centre.x, y: centre.y - this.options.radius };\r\n            // get the end point of the arc\r\n            let endPoint = this.polarToCartesian(centre.x, centre.y, this.options.radius, 360 * (this.options.clockwise ?\r\n                circlePercent :\r\n                (100 - circlePercent)) / 100); // ####################\r\n            // We'll get an end point with the same [x, y] as the start point when percent is 100%, so move x a little bit.\r\n            if (circlePercent === 100) {\r\n                endPoint.x = endPoint.x + (this.options.clockwise ? -0.01 : +0.01);\r\n            }\r\n            // largeArcFlag and sweepFlag\r\n            let largeArcFlag, sweepFlag;\r\n            if (circlePercent > 50) {\r\n                [largeArcFlag, sweepFlag] = this.options.clockwise ? [1, 1] : [1, 0];\r\n            }\r\n            else {\r\n                [largeArcFlag, sweepFlag] = this.options.clockwise ? [0, 1] : [0, 0];\r\n            }\r\n            // percent may not equal the actual percent\r\n            let titlePercent = this.options.animateTitle ? percent : this.options.percent;\r\n            let titleTextPercent = titlePercent > this.options.maxPercent ?\r\n                `${this.options.maxPercent.toFixed(this.options.toFixed)}+` : titlePercent.toFixed(this.options.toFixed);\r\n            let subtitlePercent = this.options.animateSubtitle ? percent : this.options.percent;\r\n            // get title object\r\n            let title = {\r\n                x: centre.x,\r\n                y: centre.y,\r\n                textAnchor: 'middle',\r\n                color: this.options.titleColor,\r\n                fontSize: this.options.titleFontSize,\r\n                fontWeight: this.options.titleFontWeight,\r\n                texts: [],\r\n                tspans: []\r\n            };\r\n            // from v0.9.9, both title and titleFormat(...) may be an array of string.\r\n            if (this.options.titleFormat !== undefined && this.options.titleFormat.constructor.name === 'Function') {\r\n                let formatted = this.options.titleFormat(titlePercent);\r\n                if (formatted instanceof Array) {\r\n                    title.texts = [...formatted];\r\n                }\r\n                else {\r\n                    title.texts.push(formatted.toString());\r\n                }\r\n            }\r\n            else {\r\n                if (this.options.title === 'auto') {\r\n                    title.texts.push(titleTextPercent);\r\n                }\r\n                else {\r\n                    if (this.options.title instanceof Array) {\r\n                        title.texts = [...this.options.title];\r\n                    }\r\n                    else {\r\n                        title.texts.push(this.options.title.toString());\r\n                    }\r\n                }\r\n            }\r\n            // get subtitle object\r\n            let subtitle = {\r\n                x: centre.x,\r\n                y: centre.y,\r\n                textAnchor: 'middle',\r\n                color: this.options.subtitleColor,\r\n                fontSize: this.options.subtitleFontSize,\r\n                fontWeight: this.options.subtitleFontWeight,\r\n                texts: [],\r\n                tspans: []\r\n            };\r\n            // from v0.9.9, both subtitle and subtitleFormat(...) may be an array of string.\r\n            if (this.options.subtitleFormat !== undefined && this.options.subtitleFormat.constructor.name === 'Function') {\r\n                let formatted = this.options.subtitleFormat(subtitlePercent);\r\n                if (formatted instanceof Array) {\r\n                    subtitle.texts = [...formatted];\r\n                }\r\n                else {\r\n                    subtitle.texts.push(formatted.toString());\r\n                }\r\n            }\r\n            else {\r\n                if (this.options.subtitle instanceof Array) {\r\n                    subtitle.texts = [...this.options.subtitle];\r\n                }\r\n                else {\r\n                    subtitle.texts.push(this.options.subtitle.toString());\r\n                }\r\n            }\r\n            // get units object\r\n            let units = {\r\n                text: `${this.options.units}`,\r\n                fontSize: this.options.unitsFontSize,\r\n                fontWeight: this.options.unitsFontWeight,\r\n                color: this.options.unitsColor\r\n            };\r\n            // get total count of text lines to be shown\r\n            let rowCount = 0, rowNum = 1;\r\n            this.options.showTitle && (rowCount += title.texts.length);\r\n            this.options.showSubtitle && (rowCount += subtitle.texts.length);\r\n            // calc dy for each tspan for title\r\n            if (this.options.showTitle) {\r\n                for (let span of title.texts) {\r\n                    title.tspans.push({ span: span, dy: this.getRelativeY(rowNum, rowCount) });\r\n                    rowNum++;\r\n                }\r\n            }\r\n            // calc dy for each tspan for subtitle\r\n            if (this.options.showSubtitle) {\r\n                for (let span of subtitle.texts) {\r\n                    subtitle.tspans.push({ span: span, dy: this.getRelativeY(rowNum, rowCount) });\r\n                    rowNum++;\r\n                }\r\n            }\r\n            // create ID for gradient element\r\n            if (null === this._gradientUUID) {\r\n                this._gradientUUID = this.uuid();\r\n            }\r\n            // Bring it all together\r\n            this.svg = {\r\n                viewBox: `0 0 ${boxSize} ${boxSize}`,\r\n                // Set both width and height to '100%' if it's responsive\r\n                width: this.options.responsive ? '100%' : boxSize,\r\n                height: this.options.responsive ? '100%' : boxSize,\r\n                backgroundCircle: {\r\n                    cx: centre.x,\r\n                    cy: centre.y,\r\n                    r: this.options.radius + this.options.outerStrokeWidth / 2 + this.options.backgroundPadding,\r\n                    fill: this.options.backgroundColor,\r\n                    fillOpacity: this.options.backgroundOpacity,\r\n                    stroke: this.options.backgroundStroke,\r\n                    strokeWidth: this.options.backgroundStrokeWidth,\r\n                },\r\n                path: {\r\n                    // A rx ry x-axis-rotation large-arc-flag sweep-flag x y (https://developer.mozilla.org/en/docs/Web/SVG/Tutorial/Paths#Arcs)\r\n                    d: `M ${startPoint.x} ${startPoint.y}\r\n        A ${this.options.radius} ${this.options.radius} 0 ${largeArcFlag} ${sweepFlag} ${endPoint.x} ${endPoint.y}`,\r\n                    stroke: this.options.outerStrokeColor,\r\n                    strokeWidth: this.options.outerStrokeWidth,\r\n                    strokeLinecap: this.options.outerStrokeLinecap,\r\n                    fill: 'none'\r\n                },\r\n                circle: {\r\n                    cx: centre.x,\r\n                    cy: centre.y,\r\n                    r: this.options.radius - this.options.space - this.options.outerStrokeWidth / 2 - this.options.innerStrokeWidth / 2,\r\n                    fill: 'none',\r\n                    stroke: this.options.innerStrokeColor,\r\n                    strokeWidth: this.options.innerStrokeWidth,\r\n                },\r\n                title: title,\r\n                units: units,\r\n                subtitle: subtitle,\r\n                image: {\r\n                    x: centre.x - this.options.imageWidth / 2,\r\n                    y: centre.y - this.options.imageHeight / 2,\r\n                    src: this.options.imageSrc,\r\n                    width: this.options.imageWidth,\r\n                    height: this.options.imageHeight,\r\n                },\r\n                outerLinearGradient: {\r\n                    id: 'outer-linear-' + this._gradientUUID,\r\n                    colorStop1: this.options.outerStrokeColor,\r\n                    colorStop2: this.options.outerStrokeGradientStopColor === 'transparent' ? '#FFF' : this.options.outerStrokeGradientStopColor,\r\n                },\r\n                radialGradient: {\r\n                    id: 'radial-' + this._gradientUUID,\r\n                    colorStop1: this.options.backgroundColor,\r\n                    colorStop2: this.options.backgroundGradientStopColor === 'transparent' ? '#FFF' : this.options.backgroundGradientStopColor,\r\n                }\r\n            };\r\n        };\r\n        this.getAnimationParameters = (previousPercent, currentPercent) => {\r\n            const MIN_INTERVAL = 10;\r\n            let times, step, interval;\r\n            let fromPercent = this.options.startFromZero ? 0 : (previousPercent < 0 ? 0 : previousPercent);\r\n            let toPercent = currentPercent < 0 ? 0 : this.min(currentPercent, this.options.maxPercent);\r\n            let delta = Math.abs(Math.round(toPercent - fromPercent));\r\n            if (delta >= 100) {\r\n                // we will finish animation in 100 times\r\n                times = 100;\r\n                if (!this.options.animateTitle && !this.options.animateSubtitle) {\r\n                    step = 1;\r\n                }\r\n                else {\r\n                    // show title or subtitle animation even if the arc is full, we also need to finish it in 100 times.\r\n                    step = Math.round(delta / times);\r\n                }\r\n            }\r\n            else {\r\n                // we will finish in as many times as the number of percent.\r\n                times = delta;\r\n                step = 1;\r\n            }\r\n            // Get the interval of timer\r\n            interval = Math.round(this.options.animationDuration / times);\r\n            // Readjust all values if the interval of timer is extremely small.\r\n            if (interval < MIN_INTERVAL) {\r\n                interval = MIN_INTERVAL;\r\n                times = this.options.animationDuration / interval;\r\n                if (!this.options.animateTitle && !this.options.animateSubtitle && delta > 100) {\r\n                    step = Math.round(100 / times);\r\n                }\r\n                else {\r\n                    step = Math.round(delta / times);\r\n                }\r\n            }\r\n            // step must be greater than 0.\r\n            if (step < 1) {\r\n                step = 1;\r\n            }\r\n            return { times: times, step: step, interval: interval };\r\n        };\r\n        this.animate = (previousPercent, currentPercent) => {\r\n            if (this._timerSubscription && !this._timerSubscription.closed) {\r\n                this._timerSubscription.unsubscribe();\r\n            }\r\n            let fromPercent = this.options.startFromZero ? 0 : previousPercent;\r\n            let toPercent = currentPercent;\r\n            let { step: step, interval: interval } = this.getAnimationParameters(fromPercent, toPercent);\r\n            let count = fromPercent;\r\n            if (fromPercent < toPercent) {\r\n                this._timerSubscription = timer(0, interval).subscribe(() => {\r\n                    count += step;\r\n                    if (count <= toPercent) {\r\n                        if (!this.options.animateTitle && !this.options.animateSubtitle && count >= 100) {\r\n                            this.draw(toPercent);\r\n                            this._timerSubscription.unsubscribe();\r\n                        }\r\n                        else {\r\n                            this.draw(count);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.draw(toPercent);\r\n                        this._timerSubscription.unsubscribe();\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                this._timerSubscription = timer(0, interval).subscribe(() => {\r\n                    count -= step;\r\n                    if (count >= toPercent) {\r\n                        if (!this.options.animateTitle && !this.options.animateSubtitle && toPercent >= 100) {\r\n                            this.draw(toPercent);\r\n                            this._timerSubscription.unsubscribe();\r\n                        }\r\n                        else {\r\n                            this.draw(count);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.draw(toPercent);\r\n                        this._timerSubscription.unsubscribe();\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        this.emitClickEvent = (event) => {\r\n            if (this.options.renderOnClick) {\r\n                this.animate(0, this.options.percent);\r\n            }\r\n            this.onClick.emit(event);\r\n        };\r\n        this.applyOptions = () => {\r\n            // the options of <circle-progress> may change already\r\n            for (let name of Object.keys(this.options)) {\r\n                if (this.hasOwnProperty(name) && this[name] !== undefined) {\r\n                    this.options[name] = this[name];\r\n                }\r\n                else if (this.templateOptions && this.templateOptions[name] !== undefined) {\r\n                    this.options[name] = this.templateOptions[name];\r\n                }\r\n            }\r\n            // make sure key options valid\r\n            this.options.radius = Math.abs(+this.options.radius);\r\n            this.options.space = +this.options.space;\r\n            this.options.percent = +this.options.percent > 0 ? +this.options.percent : 0;\r\n            this.options.maxPercent = Math.abs(+this.options.maxPercent);\r\n            this.options.animationDuration = Math.abs(this.options.animationDuration);\r\n            this.options.outerStrokeWidth = Math.abs(+this.options.outerStrokeWidth);\r\n            this.options.innerStrokeWidth = Math.abs(+this.options.innerStrokeWidth);\r\n            this.options.backgroundPadding = +this.options.backgroundPadding;\r\n        };\r\n        this.getRelativeY = (rowNum, rowCount) => {\r\n            // why '-0.18em'? It's a magic number when property 'alignment-baseline' equals 'baseline'. :)\r\n            let initialOffset = -0.18, offset = 1;\r\n            return (initialOffset + offset * (rowNum - rowCount / 2)).toFixed(2) + 'em';\r\n        };\r\n        this.min = (a, b) => {\r\n            return a < b ? a : b;\r\n        };\r\n        this.max = (a, b) => {\r\n            return a > b ? a : b;\r\n        };\r\n        this.uuid = () => {\r\n            // https://www.w3resource.com/javascript-exercises/javascript-math-exercise-23.php\r\n            var dt = new Date().getTime();\r\n            var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                var r = (dt + Math.random() * 16) % 16 | 0;\r\n                dt = Math.floor(dt / 16);\r\n                return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n            });\r\n            return uuid;\r\n        };\r\n        this.findSvgElement = function () {\r\n            if (this.svgElement === null) {\r\n                let tags = this.elRef.nativeElement.getElementsByTagName('svg');\r\n                if (tags.length > 0) {\r\n                    this.svgElement = tags[0];\r\n                }\r\n            }\r\n        };\r\n        this.checkViewport = () => {\r\n            this.findSvgElement();\r\n            let previousValue = this.isInViewport;\r\n            this.isInViewport = this.isElementInViewport(this.svgElement);\r\n            if (previousValue !== this.isInViewport) {\r\n                this.onViewportChanged.emit({ oldValue: previousValue, newValue: this.isInViewport });\r\n            }\r\n        };\r\n        this.onScroll = (event) => {\r\n            this.checkViewport();\r\n        };\r\n        this.loadEventsForLazyMode = () => {\r\n            if (this.options.lazy) {\r\n                this.document.addEventListener('scroll', this.onScroll, true);\r\n                this.window.addEventListener('resize', this.onScroll, true);\r\n                if (this._viewportChangedSubscriber === null) {\r\n                    this._viewportChangedSubscriber = this.onViewportChanged.subscribe(({ oldValue, newValue }) => {\r\n                        newValue ? this.render() : null;\r\n                    });\r\n                }\r\n                // svgElement must be created in DOM before being checked.\r\n                // Is there a better way to check the existence of svgElemnt?\r\n                let _timer = timer(0, 50).subscribe(() => {\r\n                    this.svgElement === null ? this.checkViewport() : _timer.unsubscribe();\r\n                });\r\n            }\r\n        };\r\n        this.unloadEventsForLazyMode = () => {\r\n            // Remove event listeners\r\n            this.document.removeEventListener('scroll', this.onScroll, true);\r\n            this.window.removeEventListener('resize', this.onScroll, true);\r\n            // Unsubscribe onViewportChanged\r\n            if (this._viewportChangedSubscriber !== null) {\r\n                this._viewportChangedSubscriber.unsubscribe();\r\n                this._viewportChangedSubscriber = null;\r\n            }\r\n        };\r\n        this.document = document;\r\n        this.window = this.document.defaultView;\r\n        Object.assign(this.options, defaultOptions);\r\n        Object.assign(this.defaultOptions, defaultOptions);\r\n    }\r\n    isDrawing() {\r\n        return (this._timerSubscription && !this._timerSubscription.closed);\r\n    }\r\n    isElementInViewport(el) {\r\n        // Return false if el has not been created in page.\r\n        if (el === null || el === undefined)\r\n            return false;\r\n        // Check if the element is out of view due to a container scrolling\r\n        let rect = el.getBoundingClientRect(), parent = el.parentNode, parentRect;\r\n        do {\r\n            parentRect = parent.getBoundingClientRect();\r\n            if (rect.top >= parentRect.bottom)\r\n                return false;\r\n            if (rect.bottom <= parentRect.top)\r\n                return false;\r\n            if (rect.left >= parentRect.right)\r\n                return false;\r\n            if (rect.right <= parentRect.left)\r\n                return false;\r\n            parent = parent.parentNode;\r\n        } while (parent != this.document.body);\r\n        // Check its within the document viewport\r\n        if (rect.top >= (this.window.innerHeight || this.document.documentElement.clientHeight))\r\n            return false;\r\n        if (rect.bottom <= 0)\r\n            return false;\r\n        if (rect.left >= (this.window.innerWidth || this.document.documentElement.clientWidth))\r\n            return false;\r\n        if (rect.right <= 0)\r\n            return false;\r\n        return true;\r\n    }\r\n    ngOnInit() {\r\n        this.loadEventsForLazyMode();\r\n    }\r\n    ngOnDestroy() {\r\n        this.unloadEventsForLazyMode();\r\n    }\r\n    ngOnChanges(changes) {\r\n        this.render();\r\n        if ('lazy' in changes) {\r\n            changes.lazy.currentValue ? this.loadEventsForLazyMode() : this.unloadEventsForLazyMode();\r\n        }\r\n    }\r\n};\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], CircleProgressComponent.prototype, \"onClick\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"name\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"class\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"backgroundGradient\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"backgroundColor\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"backgroundGradientStopColor\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], CircleProgressComponent.prototype, \"backgroundOpacity\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"backgroundStroke\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], CircleProgressComponent.prototype, \"backgroundStrokeWidth\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], CircleProgressComponent.prototype, \"backgroundPadding\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], CircleProgressComponent.prototype, \"radius\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], CircleProgressComponent.prototype, \"space\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], CircleProgressComponent.prototype, \"percent\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], CircleProgressComponent.prototype, \"toFixed\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], CircleProgressComponent.prototype, \"maxPercent\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"renderOnClick\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"units\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"unitsFontSize\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"unitsFontWeight\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"unitsColor\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"outerStrokeGradient\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], CircleProgressComponent.prototype, \"outerStrokeWidth\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"outerStrokeColor\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"outerStrokeGradientStopColor\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"outerStrokeLinecap\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"innerStrokeColor\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], CircleProgressComponent.prototype, \"innerStrokeWidth\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Function)\r\n], CircleProgressComponent.prototype, \"titleFormat\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], CircleProgressComponent.prototype, \"title\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"titleColor\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"titleFontSize\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"titleFontWeight\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Function)\r\n], CircleProgressComponent.prototype, \"subtitleFormat\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object)\r\n], CircleProgressComponent.prototype, \"subtitle\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"subtitleColor\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"subtitleFontSize\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"subtitleFontWeight\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], CircleProgressComponent.prototype, \"imageSrc\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], CircleProgressComponent.prototype, \"imageHeight\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], CircleProgressComponent.prototype, \"imageWidth\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"animation\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"animateTitle\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"animateSubtitle\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], CircleProgressComponent.prototype, \"animationDuration\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"showTitle\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"showSubtitle\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"showUnits\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"showImage\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"showBackground\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"showInnerStroke\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"clockwise\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"responsive\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"startFromZero\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"showZeroOuterStroke\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], CircleProgressComponent.prototype, \"lazy\", void 0);\r\n__decorate([\r\n    Input('options'),\r\n    __metadata(\"design:type\", CircleProgressOptions)\r\n], CircleProgressComponent.prototype, \"templateOptions\", void 0);\r\nCircleProgressComponent = __decorate([\r\n    Component({\r\n        selector: 'circle-progress',\r\n        template: `\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" *ngIf=\"svg\"\r\n             [attr.viewBox]=\"svg.viewBox\" preserveAspectRatio=\"xMidYMid meet\"\r\n             [attr.height]=\"svg.height\" [attr.width]=\"svg.width\" (click)=\"emitClickEvent($event)\" [attr.class]=\"options.class\">\r\n            <defs>\r\n                <linearGradient *ngIf=\"options.outerStrokeGradient\" [attr.id]=\"svg.outerLinearGradient.id\">\r\n                    <stop offset=\"5%\" [attr.stop-color]=\"svg.outerLinearGradient.colorStop1\"  [attr.stop-opacity]=\"1\"/>\r\n                    <stop offset=\"95%\" [attr.stop-color]=\"svg.outerLinearGradient.colorStop2\" [attr.stop-opacity]=\"1\"/>\r\n                </linearGradient>\r\n                <radialGradient *ngIf=\"options.backgroundGradient\" [attr.id]=\"svg.radialGradient.id\">\r\n                    <stop offset=\"5%\" [attr.stop-color]=\"svg.radialGradient.colorStop1\" [attr.stop-opacity]=\"1\"/>\r\n                    <stop offset=\"95%\" [attr.stop-color]=\"svg.radialGradient.colorStop2\" [attr.stop-opacity]=\"1\"/>\r\n                </radialGradient>\r\n            </defs>\r\n            <ng-container *ngIf=\"options.showBackground\">\r\n                <circle *ngIf=\"!options.backgroundGradient\"\r\n                        [attr.cx]=\"svg.backgroundCircle.cx\"\r\n                        [attr.cy]=\"svg.backgroundCircle.cy\"\r\n                        [attr.r]=\"svg.backgroundCircle.r\"\r\n                        [attr.fill]=\"svg.backgroundCircle.fill\"\r\n                        [attr.fill-opacity]=\"svg.backgroundCircle.fillOpacity\"\r\n                        [attr.stroke]=\"svg.backgroundCircle.stroke\"\r\n                        [attr.stroke-width]=\"svg.backgroundCircle.strokeWidth\"/>\r\n                <circle *ngIf=\"options.backgroundGradient\"\r\n                        [attr.cx]=\"svg.backgroundCircle.cx\"\r\n                        [attr.cy]=\"svg.backgroundCircle.cy\"\r\n                        [attr.r]=\"svg.backgroundCircle.r\"\r\n                        attr.fill=\"url(#{{svg.radialGradient.id}})\"\r\n                        [attr.fill-opacity]=\"svg.backgroundCircle.fillOpacity\"\r\n                        [attr.stroke]=\"svg.backgroundCircle.stroke\"\r\n                        [attr.stroke-width]=\"svg.backgroundCircle.strokeWidth\"/>\r\n            </ng-container>            \r\n            <circle *ngIf=\"options.showInnerStroke\"\r\n                    [attr.cx]=\"svg.circle.cx\"\r\n                    [attr.cy]=\"svg.circle.cy\"\r\n                    [attr.r]=\"svg.circle.r\"\r\n                    [attr.fill]=\"svg.circle.fill\"\r\n                    [attr.stroke]=\"svg.circle.stroke\"\r\n                    [attr.stroke-width]=\"svg.circle.strokeWidth\"/>\r\n            <ng-container *ngIf=\"+options.percent!==0 || options.showZeroOuterStroke\">\r\n                <path *ngIf=\"!options.outerStrokeGradient\"\r\n                        [attr.d]=\"svg.path.d\"\r\n                        [attr.stroke]=\"svg.path.stroke\"\r\n                        [attr.stroke-width]=\"svg.path.strokeWidth\"\r\n                        [attr.stroke-linecap]=\"svg.path.strokeLinecap\"\r\n                        [attr.fill]=\"svg.path.fill\"/>\r\n                <path *ngIf=\"options.outerStrokeGradient\"\r\n                        [attr.d]=\"svg.path.d\"\r\n                        attr.stroke=\"url(#{{svg.outerLinearGradient.id}})\"\r\n                        [attr.stroke-width]=\"svg.path.strokeWidth\"\r\n                        [attr.stroke-linecap]=\"svg.path.strokeLinecap\"\r\n                        [attr.fill]=\"svg.path.fill\"/>\r\n            </ng-container>\r\n            <text *ngIf=\"!options.showImage && (options.showTitle || options.showUnits || options.showSubtitle)\"\r\n                  alignment-baseline=\"baseline\"\r\n                  [attr.x]=\"svg.circle.cx\"\r\n                  [attr.y]=\"svg.circle.cy\"\r\n                  [attr.text-anchor]=\"svg.title.textAnchor\">\r\n                <ng-container *ngIf=\"options.showTitle\">\r\n                    <tspan *ngFor=\"let tspan of svg.title.tspans\"\r\n                           [attr.x]=\"svg.title.x\"\r\n                           [attr.y]=\"svg.title.y\"\r\n                           [attr.dy]=\"tspan.dy\"\r\n                           [attr.font-size]=\"svg.title.fontSize\"\r\n                           [attr.font-weight]=\"svg.title.fontWeight\"\r\n                           [attr.fill]=\"svg.title.color\">{{tspan.span}}</tspan>\r\n                </ng-container>\r\n                <tspan *ngIf=\"options.showUnits\"\r\n                       [attr.font-size]=\"svg.units.fontSize\"\r\n                       [attr.font-weight]=\"svg.units.fontWeight\"\r\n                       [attr.fill]=\"svg.units.color\">{{svg.units.text}}</tspan>\r\n                <ng-container *ngIf=\"options.showSubtitle\">\r\n                    <tspan *ngFor=\"let tspan of svg.subtitle.tspans\"\r\n                           [attr.x]=\"svg.subtitle.x\"\r\n                           [attr.y]=\"svg.subtitle.y\"\r\n                           [attr.dy]=\"tspan.dy\"\r\n                           [attr.font-size]=\"svg.subtitle.fontSize\"\r\n                           [attr.font-weight]=\"svg.subtitle.fontWeight\"\r\n                           [attr.fill]=\"svg.subtitle.color\">{{tspan.span}}</tspan>\r\n                </ng-container>\r\n            </text>\r\n            <image *ngIf=\"options.showImage\" preserveAspectRatio=\"none\" \r\n                [attr.height]=\"svg.image.height\"\r\n                [attr.width]=\"svg.image.width\"\r\n                [attr.xlink:href]=\"svg.image.src\"\r\n                [attr.x]=\"svg.image.x\"\r\n                [attr.y]=\"svg.image.y\"\r\n            />\r\n        </svg>\r\n    `\r\n    }),\r\n    __param(2, Inject(DOCUMENT)),\r\n    __metadata(\"design:paramtypes\", [CircleProgressOptions, ElementRef, Object])\r\n], CircleProgressComponent);\n\nvar NgCircleProgressModule_1;\r\nlet NgCircleProgressModule = NgCircleProgressModule_1 = class NgCircleProgressModule {\r\n    static forRoot(options = {}) {\r\n        return {\r\n            ngModule: NgCircleProgressModule_1,\r\n            providers: [\r\n                { provide: CircleProgressOptions, useValue: options }\r\n            ]\r\n        };\r\n    }\r\n};\r\nNgCircleProgressModule = NgCircleProgressModule_1 = __decorate([\r\n    NgModule({\r\n        imports: [\r\n            CommonModule\r\n        ],\r\n        declarations: [\r\n            CircleProgressComponent,\r\n        ],\r\n        exports: [\r\n            CircleProgressComponent,\r\n        ]\r\n    })\r\n], NgCircleProgressModule);\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { CircleProgressComponent, CircleProgressOptions, NgCircleProgressModule };\n//# sourceMappingURL=ng-circle-progress.js.map\n","export default \"<header-route-menu></header-route-menu>\\n<div class=\\\"container-fluid mt--6\\\">\\n    <div class=\\\"row\\\">\\n        <!-- Speaking -->\\n        <div class=\\\"col-md-6 col-xl-3\\\" (click)=\\\"goToQBank('speaking')\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"left-content\\\">\\n                    <p class=\\\"question-title\\\">\\n                        {{homeData[3].moduleType}}\\n                    </p>\\n                    <p class=\\\"question-count\\\">\\n                        {{homeData[3].moduleQuestionCount}}\\n                    </p>\\n\\n                    <progress-bar [progress-percent]=\\\"homeData[3].progressPercent\\\"></progress-bar>\\n\\n                </div>\\n                <div class=\\\"icon-content speaking\\\">\\n                    <div class=\\\"question-icon \\\">\\n                        <img src=\\\"assets/icon/menu/speaking.svg\\\">\\n                    </div>\\n                    <p>Speaking</p>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <!-- Writing -->\\n        <div class=\\\"col-md-6 col-xl-3\\\" (click)=\\\"goToQBank('writing')\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"left-content\\\">\\n                    <p class=\\\"question-title\\\">\\n                        {{homeData[0].moduleType}}\\n                    </p>\\n                    <p class=\\\"question-count\\\">\\n                        {{homeData[0].moduleQuestionCount}}\\n                    </p>\\n\\n                    <progress-bar [progress-percent]=\\\"homeData[0].progressPercent\\\"></progress-bar>\\n\\n                </div>\\n                <div class=\\\"icon-content writing\\\">\\n                    <div class=\\\"question-icon\\\">\\n                        <img src=\\\"assets/icon/menu/writing.svg\\\">\\n                    </div>\\n                    <p>Writing</p>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <!-- Reading -->\\n        <div class=\\\"col-md-6 col-xl-3\\\" (click)=\\\"goToQBank('reading')\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"left-content\\\">\\n                    <p class=\\\"question-title\\\">\\n                        {{homeData[1].moduleType}}\\n                    </p>\\n                    <p class=\\\"question-count\\\">\\n                        {{homeData[1].moduleQuestionCount}}\\n                    </p>\\n\\n                    <progress-bar [progress-percent]=\\\"homeData[1].progressPercent\\\"></progress-bar>\\n\\n                </div>\\n                <div class=\\\"icon-content reading\\\">\\n                    <div class=\\\"question-icon \\\">\\n                        <img src=\\\"assets/icon/menu/reading.svg\\\">\\n                    </div>\\n                    <p>Reading</p>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <!-- Listening -->\\n        <div class=\\\"col-md-6 col-xl-3\\\" (click)=\\\"goToQBank('listening')\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"left-content\\\">\\n                    <p class=\\\"question-title\\\">\\n                        {{homeData[2].moduleType}}\\n                    </p>\\n                    <p class=\\\"question-count\\\">\\n                        {{homeData[2].moduleQuestionCount}}\\n                    </p>\\n\\n                    <progress-bar [progress-percent]=\\\"homeData[2].progressPercent\\\"></progress-bar>\\n\\n                </div>\\n                <div class=\\\"icon-content listening\\\">\\n                    <div class=\\\"question-icon \\\">\\n                        <img src=\\\"assets/icon/menu/listening.svg\\\">\\n                    </div>\\n                    <p>Listening</p>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 col-xl-6\\\">\\n            <div class=\\\"card p-0\\\" style=\\\"flex-direction: column;\\\">\\n                <!-- <ul class=\\\"list-unstyled\\\">\\n                    <li class=\\\"title\\\">\\n                        Study Plan\\n                    </li>\\n                    <li class=\\\"question\\\" *ngFor=\\\"let data of homeData[4].questionBank\\\">\\n                        <div [class]=\\\"data.moduleType.toLowerCase()\\\">\\n                            <div class=\\\"bar\\\"></div>\\n                            <div class=\\\"d-flex justify-content-between w-100\\\">\\n                                <p (click)=\\\"goToStudyPlan(data.moduleType)\\\" style=\\\"cursor: pointer;\\\">\\n                                    {{data.moduleType}}\\n                                </p>\\n                                <div class=\\\"uncheck-box\\\"></div>\\n                            </div>\\n                        </div>\\n                    </li>\\n                </ul> -->\\n                <p class=\\\"plan-title\\\">\\n                    Study Plan\\n                </p>\\n                <div class=\\\"studyplan-img\\\">\\n                    <ng-lottie height=\\\"200px\\\"  [styles]=\\\"styles\\\" [options]=\\\"options\\\"></ng-lottie>\\n                </div>\\n                <ng-container *ngFor=\\\"let qb of homeData[4].questionBank\\\">\\n                    <div class=\\\"prediction-question\\\">\\n                        <div [class]=\\\"qb.moduleType.toLowerCase()\\\">\\n                            <p>\\n                                {{qb.moduleType}}\\n                            </p>\\n                            <div style=\\\"height: 80px;\\\">\\n                                <circle-progress [percent]=\\\"qb.progress\\\" [radius]=\\\"100\\\" [outerStrokeColor]=\\\"'#D6980C'\\\"\\n                                    [showSubtitle]=false [innerStrokeColor]=\\\"'rgb(248, 248, 219)'\\\" [animation]=\\\"true\\\"\\n                                    [outerStrokeWidth]=\\\"24\\\" [animationDuration]=\\\"500\\\" [responsive]=\\\"true\\\"\\n                                    [showBackground]=true [unitsFontSize]=\\\"32\\\" [titleFontSize]=\\\"46\\\"\\n                                    [backgroundColor]=\\\"'rgb(248, 248, 219)'\\\"></circle-progress>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </ng-container>\\n\\n\\n            </div>\\n        </div>\\n\\n        <div class=\\\"col-md-6 col-xl-6\\\">\\n            <div class=\\\"col-md-12 col-xl-12 mb-3\\\">\\n                <div class=\\\"card p-0\\\" (click)=\\\"goToPrediction()\\\">\\n                    <div class=\\\"d-flex w-100\\\">\\n                        <div class=\\\"img\\\">\\n                            <img src=\\\"assets/icon/menu/prediction-file.svg\\\">\\n                        </div>\\n                        <div class=\\\"right-text\\\"> Prediction</div>\\n                    </div>\\n\\n\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-12 col-xl-12\\\">\\n                <div class=\\\"card p-0\\\" (click)=\\\"goToMock()\\\">\\n                    <div class=\\\"d-flex w-100\\\">\\n                        <div class=\\\"img\\\">\\n                            <img src=\\\"assets/icon/menu/individual-mock.svg\\\">\\n                        </div>\\n                        <div class=\\\"right-text\\\"> Mock Test</div>\\n                    </div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HometResolver } from '@app/modules/home/reslovers/home.reslover';\n\nimport { HomeComponent } from \"./home/home.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    resolve:{\n      data:HometResolver\n    }\n    }\n];\n\n  @NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n    providers:[\n      HometResolver\n    ]\n  })\nexport class HomeRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from \"./home/home.component\";\nimport { HomeRoutingModule } from '@app/modules/home/home-routing.moudule';\nimport { BasicModule } from '@app/shared/basic-components/basic.module';\n// Import ng-circle-progress\nimport { NgCircleProgressModule } from 'ng-circle-progress';\nimport { LottieModule } from 'ngx-lottie';\nimport player from 'lottie-web';\n\nexport function playerFactory() {\n  return player;\n}\n\n@NgModule({\n  declarations: [\n    HomeComponent\n  ],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    BasicModule,\n    // Specify ng-circle-progress as an import\n    NgCircleProgressModule.forRoot({}),\n    LottieModule.forRoot({ player: playerFactory })\n  ],\n  exports:[\n    HomeRoutingModule\n  ]\n})\nexport class HomeModule { }\n","export default \"p.question-title,p.question-count,.question-progress-percent,.icon-content p,\\n.plan-title,.reading>p,.listening>p,.right-text{\\n    font-family: Lullabies;\\n}\\np {\\n    margin-bottom: 10px;\\n}\\n.card {\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-orient: horizontal;\\n    -webkit-box-direction: normal;\\n            flex-direction: row;\\n    -webkit-box-pack: justify;\\n            justify-content: space-between;\\n    box-shadow: var(--card-boxshadow);\\n}\\n/* ---------------------------------------------------\\n    CARD LEFT CONTENT\\n----------------------------------------------------- */\\n.left-content {\\n    width: 60%;\\n}\\np.question-title {\\n    color: var(--text-fade-color);\\n}\\n/* ---------------------------------------------------\\n    ICON CONTENT\\n----------------------------------------------------- */\\n.icon-content {\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n            flex-direction: column;\\n    -webkit-box-align: center;\\n            align-items: center;\\n    -webkit-box-pack: center;\\n            justify-content: center;\\n    width: 40%;\\n}\\n.icon-content p {\\n    font-weight: 500;\\n}\\n.question-icon {\\n    width: 50%;\\n    height: 50%;\\n    margin-bottom: 6px;\\n}\\n.question-icon img {\\n    width: 100%;\\n    height: 100%;\\n    -o-object-fit: contain;\\n       object-fit: contain;\\n}\\n.speaking .question-icon img {\\n    -webkit-filter: var(--speaking-filter-color);\\n            filter: var(--speaking-filter-color);\\n}\\n.listening .question-icon img {\\n    -webkit-filter: var(--listening-filter-color);\\n            filter: var(--listening-filter-color);\\n}\\n.writing .question-icon img {\\n    -webkit-filter: var(--writing-filter-color);\\n            filter: var(--writing-filter-color);\\n}\\n.reading .question-icon img {\\n    -webkit-filter: var(--reading-filter-color);\\n            filter: var(--reading-filter-color);\\n}\\n.speaking p {\\n    color: var(--speaking-color)\\n}\\n.listening p {\\n    color: var(--listening-color)\\n}\\n.writing p {\\n    color: var(--writing-color);\\n}\\n.reading p {\\n    color: var(--reading-color);\\n}\\n/* \\np.question-count {\\n    color: var(--text-dark-color);\\n} */\\n/* ---------------------------------------------------\\n    STUDY PLAN,Individual Mock Test,Prediction File\\n----------------------------------------------------- */\\nul {\\n    width: 100%;\\n    margin-bottom: 0;\\n}\\nli {\\n    padding: 16px;\\n    border-bottom: solid 1px #ececec;\\n}\\nli.title {\\n    text-align: center;\\n    FONT-WEIGHT: 600;\\n    color: var(--text-dark-color);\\n}\\n.bar {\\n    width: 6px;\\n    background-color: var(--text-fade-color);\\n    height: 40px;\\n    border-radius: 5px;\\n    display: inline-block;\\n    margin-right: 10px;\\n}\\n.speaking .bar {\\n    background-color: var(--speaking-color);\\n    color: var(--speaking-color);\\n}\\n.listening .bar {\\n    background-color: var(--listening-color);\\n    color: var(--listening-color);\\n}\\n.reading .bar {\\n    background-color: var(--reading-color);\\n    color: var(--reading-color);\\n}\\n.writing .bar {\\n    background-color: var(--writing-color);\\n    color: var(--writing-color);\\n}\\n.speaking {\\n    color: var(--speaking-color);\\n}\\n.listening {\\n    color: var(--listening-color);\\n}\\n.reading {\\n    color: var(--reading-color);\\n}\\n.writing {\\n    color: var(--writing-color);\\n}\\n.question>div {\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-align: center;\\n            align-items: center;\\n}\\nli.prediction-question {\\n    display: -webkit-box;\\n    display: flex;\\n    flex-wrap: wrap;\\n}\\n.prediction-question>div {\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n    flex-direction: row;\\n    -webkit-box-align: center;\\n            align-items: center;\\n    margin: 8px;\\n    border-radius: 10px;\\n    padding: 10px;\\n    -webkit-box-pack: justify;\\n            justify-content: space-between;\\n}\\n.prediction-question>.speaking,.mock-question>.speaking {\\n    background-color: #d1ffd1;\\n}\\n.prediction-question>.listening,.mock-question>.listening {\\n    background-color: #ffe1e7;\\n}\\n.prediction-question>.reading,.mock-question>.reading {\\n    background-color: #d6f8ff;\\n}\\n.mock-question>div{\\n    display: -webkit-box;\\n    display: flex;\\n    height: 105px;\\n    -webkit-box-pack: justify;\\n            justify-content: space-between;\\n    padding: 10px;\\n    border-radius: 10px;\\n}\\n.right-text{\\n    background-color: var(--half-bg-color);\\n    color: white;\\n    text-transform: uppercase;\\n    /* font-weight: 500; */\\n    width: 100%;\\n    /* font-size: 18px; */\\n    padding: 20px;\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-align: center;\\n            align-items: center;\\n    cursor: pointer;\\n    border-radius: 0px 14px 14px 0px;\\n}\\n.img {\\n    width: 100px;\\n    height: 80px;\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-align: center;\\n            align-items: center;\\n    -webkit-box-pack: center;\\n            justify-content: center;\\n}\\n.uncheck-box {\\n    border: solid 1px var(--text-fade-color);\\n    height: 20px;\\n    width: 20px;\\n}\\n@media only screen and (max-width: 760px) {\\n    .prediction-question>div {\\n        width:100%;\\n    }\\n}\\n.prediction-question{\\n    border-bottom: solid 1px #ebebeb;\\n}\\n.prediction-question:last-child{\\n    border-bottom: unset;\\n}\\np.plan-title {\\n    padding: 18px;\\n    font-weight: 500;\\n    border-bottom: solid;\\n    border-bottom: solid 1px #ebebeb;\\n    color: var(--text-fade-color);\\n    text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AnimationOptions } from 'ngx-lottie';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  public homeData:any;\n  options: AnimationOptions = {\n    path: 'assets/icon/lottie/studyplan.json',\n  };\n  \n  constructor(private _activeRoute:ActivatedRoute,private _router:Router) { }\n\n  ngOnInit() {\n    this.homeData=this._activeRoute.snapshot.data['data'];\n  }\n\n  goToQBank(qb){\n    this._router.navigateByUrl(`alchemist-academy/question-bank/${qb}`)\n  }\n\n  goToStudyPlan(qb){\n    this._router.navigateByUrl(`alchemist-academy/evaluate-question/study-plan/${qb}`)\n  }\n\n  goToPrediction(qb){\n    this._router.navigateByUrl(`alchemist-academy/evaluate-question/prediction`)\n  }\n\n  goToMock(qb){\n    this._router.navigateByUrl(`alchemist-academy/evaluate-question/mock-test`)\n  }\n}\n","import { Resolve } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';;\n\nimport { DetailService } from '@app/core/http/detail.service';\n\n\n@Injectable()\nexport class HometResolver implements Resolve<any> {\n\n    constructor(private service: DetailService) {\n    }\n\n    resolve():\n        Observable<any> {\n        return this.service.getHome();\n    }\n}"],"sourceRoot":"webpack:///","file":"modules-home-home-module-es5.207a3d3887cd587e0389.js"}