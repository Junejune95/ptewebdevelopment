{"version":3,"sources":["./src/app/modules/manage/individual-mock/individual-mock-create/individual-mock-create.component.html","./src/app/modules/manage/individual-mock/mock-board/mock-board.component.html","./src/app/modules/manage/individual-mock/mock-lists/mock-lists.component.html","./src/app/modules/manage/individual-mock/mocks/mocks.component.html","./src/app/modules/manage/individual-mock/individual-mock-create/individual-mock-create.component.css","./src/app/modules/manage/individual-mock/individual-mock-create/individual-mock-create.component.ts","./src/app/modules/manage/individual-mock/individual-mock.module.ts","./src/app/modules/manage/individual-mock/individualMock-routing.module.ts","./src/app/modules/manage/individual-mock/mock-board/mock-board.component.css","./src/app/modules/manage/individual-mock/mock-board/mock-board.component.ts","./src/app/modules/manage/individual-mock/mock-lists/mock-lists.component.css","./src/app/modules/manage/individual-mock/mock-lists/mock-lists.component.ts","./src/app/modules/manage/individual-mock/mocks/mocks.component.css","./src/app/modules/manage/individual-mock/mocks/mocks.component.ts"],"names":[],"mappings":"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","file":"app-modules-manage-individual-mock-individual-mock-module-es2015.b2864924b6b0460a765c.js","sourcesContent":["export default \"<header-route-menu-light [currentPageName]=\\\"'Individual Mock Test'\\\" [moduleName]=\\\"moduleName\\\"></header-route-menu-light>\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\"d-flex step-wrapper\\\">\\n        <div class=\\\"step-1\\\" [ngClass]=\\\"{ 'step-active': isStep1 == true }\\\">\\n            <p>Step 1</p>\\n        </div>\\n        <div class=\\\"step-2\\\" [ngClass]=\\\"{ 'step-active': isStep1 == false }\\\">\\n            <p>Step 2</p>\\n        </div>\\n    </div>\\n\\n    <div *ngIf=\\\"isStep1\\\">\\n        <form [formGroup]=\\\"createForm\\\">\\n            <div class=\\\"row my-2\\\">\\n                <div class=\\\"col-md-12 mb-2\\\">\\n                    <label-text>Mock Test Title</label-text>\\n                    <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control pb_height-50 reverse;\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\" placeholder=\\\"Write Mock Test Title\\\" />\\n                </div>\\n            </div>\\n            <div class=\\\"row mb-2\\\">\\n                <div class=\\\"col-md-12 mb-2\\\">\\n                    <label-text>Select Status</label-text>\\n                    <select  class=\\\"select-box form-control\\\" formControlName=\\\"status\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.status.errors }\\\">\\n                        <option value=\\\"\\\" disabled selected hidden>Select Status</option>\\n\\n                        <option *ngFor=\\\"let status of statusLists\\\" [ngValue]=\\\"status\\\">{{ status }}\\n                        </option>\\n                    </select>\\n               \\n                </div>\\n            </div>\\n            <div class=\\\"footer-button-block\\\">\\n                <cancel-btn>Cancel</cancel-btn>\\n                <button class=\\\"btn btn-next\\\" (click)=\\\"goToStep2()\\\">Continue</button>\\n            </div>\\n        </form>\\n    </div>\\n    <dialog-box *ngIf=\\\"isDialog\\\" [dialogEntry]=\\\"dialog\\\" (onconfirm)=\\\"onSubmit($event)\\\"></dialog-box>\\n    <div *ngIf=\\\"!isStep1\\\" class=\\\"d-flex flex-column\\\">\\n        <div class=\\\"tab-wrapper\\\">\\n            <div class=\\\"d-flex align-items-end\\\">\\n                <button [class]=\\\"selectedType.questionType === type.questionType ? 'tab-active' : 'tab-default'\\\"\\n                    (click)=\\\"onTab(type)\\\" *ngFor=\\\"let type of qTypeList; let i = index\\\">\\n                    {{ type.questionType }}\\n                </button>\\n            </div>\\n            <div class=\\\"tab-block\\\">\\n                <div class=\\\"row my-2 mark-wrapper\\\">\\n                    <div class=\\\"col-md-12 mb-2\\\">\\n                        <label class=\\\"lbl-text\\\">Mark Distribution(OUT OF 100)</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                            (input)=\\\"onInput($event.target.value)\\\"\\n                            oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\"\\n                            [ngClass]=\\\"{ 'is-invalid': submitted && !getMockObj.markDistribution }\\\"\\n                            placeholder=\\\"Write Mock Test Title\\\" #markDistribution/>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <show-entries (data)=\\\"selectedData($event)\\\"></show-entries>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <search-box [hint]=\\\"'Search Question'\\\" (searchData)=\\\"searchDatas($event)\\\" [isEmit]=\\\"true\\\">\\n                        </search-box>\\n                    </div>\\n                </div>\\n\\n                <ng-container *ngIf=\\\"isProgress; else showData\\\">\\n                    <div>\\n                        <table-loading [tType]=\\\"'c4-1'\\\"></table-loading>\\n                    </div>\\n                </ng-container>\\n                <ng-template #showData>\\n                    <table role=\\\"table\\\" class=\\\"table-responsive\\\">\\n                        <thead role=\\\"rowgroup\\\">\\n                            <tr role=\\\"row\\\">\\n                                <th role=\\\"columnheader\\\" (click)=\\\"fitter('createdDate')\\\" class=\\\"fitter-able\\\"\\n                                    [class.fitter-active]='tableFilter.sortColumn==\\\"createdDate\\\"'>Created Date</th>\\n\\n                                <th role=\\\"columnheader\\\" (click)=\\\"fitter('name')\\\" class=\\\"fitter-able\\\"\\n                                    [class.fitter-active]='tableFilter.sortColumn==\\\"name\\\"'>Name</th>\\n\\n                                <th role=\\\"columnheader\\\">Question Name</th>\\n\\n                                <th role=\\\"columnheader\\\" style=\\\"width: 20%;\\\">Action</th>\\n                            </tr>\\n                        </thead>\\n\\n                        <tbody role=\\\"rowgroup\\\">\\n                            <ng-container *ngFor=\\\"let data of questionLists\\\">\\n                                <tr role=\\\"row\\\" (click)=\\\"selectfile(data.questionId)\\\"\\n                                    [class.table-selected]=\\\"isQIdInclude(data.questionId)== true\\\">\\n                                    <td role=\\\"cell\\\">{{data.createdDate | defaultDate}}</td>\\n\\n                                    <td role=\\\"cell\\\">{{data.name}}</td>\\n                                    <td role=\\\"cell\\\">{{data.questionType}}</td>\\n                                    <td>\\n                                        <action-btn-gp [btnName]=\\\"'view'\\\" [directLink]=\\\"\\\" isNewTab=\\\"true\\\">\\n                                        </action-btn-gp>\\n                                    </td>\\n                                </tr>\\n                            </ng-container>\\n\\n                            <tr *ngIf=\\\"tableFilter.totalCount == 0\\\" role=\\\"row\\\">\\n                                <td colspan=\\\"4\\\" class=\\\"text-center\\\">\\n                                    No Data Exit\\n                                </td>\\n                            </tr>\\n                        </tbody>\\n\\n                    </table>\\n\\n                        <pagination [tableFilter]='tableFilter' (getPage)=\\\"changePage($event)\\\">\\n                        </pagination>\\n\\n                    <div class=\\\"footer-button-block\\\">\\n                        <button class=\\\"btn btn-cancel\\\" (click)=\\\"backStep1()\\\">Cancel</button>\\n                        <button class=\\\"btn btn-next\\\" (click)=\\\"onSave()\\\">Submit</button>\\n                    </div>\\n\\n                    <dialog-box *ngIf=\\\"isDialog\\\" (onconfirm)=\\\"checkconfirm($event)\\\" [dialogEntry]=\\\"dialog\\\"></dialog-box>\\n\\n                </ng-template>\\n            </div>\\n\\n        </div>\\n\\n\\n\\n    </div>\\n</div>\"","export default \"<header-route-menu-light [currentPageName]=\\\"'Mock Test'\\\" [moduleName]=\\\"'Question Bank'\\\"\\n></header-route-menu-light>\\n<div class=\\\"row\\\">\\n    <ng-container *ngFor=\\\"let qb of questionBank.questionBank\\\">\\n        <div class=\\\"col-md-6 col-xl-3\\\">\\n            <question-card [questionBank]=\\\"qb\\\" (click)=\\\"goToList(qb)\\\" [isManage]=\\\"true\\\"></question-card>\\n        </div>\\n    </ng-container>\\n</div>\\n\"","export default \"<header-route-menu-light [currentPageName]=\\\"'Question Bank'\\\" [moduleName]=\\\"currentModule\\\"\\n    [prevUrl]=\\\"'../'\\\"\\n    [createRoute]=\\\"'alchemist-academy/manage/full-mock-test/create'\\\"></header-route-menu-light>\\n\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 p-0\\\">\\n        <show-entries></show-entries>\\n    </div>\\n    <div class=\\\"col-md-6 p-0\\\">\\n        <search-box [hint]=\\\"'Search'\\\"></search-box>\\n    </div>\\n</div>\\n<ng-container *ngIf=\\\"isLoading; else showData\\\">\\n    <div>\\n        <table-loading [tType]=\\\"'c3-3'\\\"></table-loading>\\n    </div>\\n\\n</ng-container>\\n<ng-template #showData>\\n    <table role=\\\"table\\\" class=\\\"table-responsive\\\">\\n        <thead role=\\\"rowgroup\\\">\\n            <tr role=\\\"row\\\">\\n                <th role=\\\"columnheader\\\" class=\\\"fitter-able\\\" (click)=\\\"fitter('name')\\\"\\n                    [class.fitter-active]='tableFilter.sortColumn==\\\"name\\\"'>Name</th>\\n\\n                <th role=\\\"columnheader\\\" style=\\\"width: 30%;\\\">Status</th>\\n\\n                <th role=\\\"columnheader\\\" style=\\\"width: 15%;\\\">Action</th>\\n            </tr>\\n        </thead>\\n\\n\\n        <tbody role=\\\"rowgroup\\\" [class]=\\\"currentModule.moduleName\\\">\\n            <ng-container *ngFor=\\\"let data of mocks\\\">\\n                <tr role=\\\"row\\\">\\n                    <td role=\\\"cell\\\">{{data.name}}</td>\\n                    <td role=\\\"cell\\\">{{data.status}}</td>\\n                    <td>\\n                        <action-btn-gp [btnName]=\\\"'start'\\\" [data]=\\\"data\\\" *ngIf=\\\"data.isActive == 'Not Active'\\\"\\n                            (onSubmit)=\\\"startClass($event)\\\"></action-btn-gp>\\n                        <action-btn-gp [btnName]=\\\"'end'\\\" [data]=\\\"data\\\" *ngIf=\\\"data.isActive == 'Running'\\\"\\n                            (onSubmit)=\\\"startClass($event)\\\"></action-btn-gp>\\n                        <action-btn-gp [btnName]=\\\"'edit'\\\" [editId]=\\\"data.questionId\\\"></action-btn-gp>\\n                        <action-btn-gp [btnName]=\\\"'delete'\\\" [data]=\\\"data\\\" (onSubmit)=\\\"deleteMock($event)\\\">\\n                        </action-btn-gp>\\n                    </td>\\n\\n            </ng-container>\\n\\n\\n\\n            <tr *ngIf=\\\"tableFilter.totalCount == 0\\\" role=\\\"row\\\">\\n                <td colspan=\\\"4\\\" class=\\\"text-center\\\">\\n                    No Data Exit\\n                </td>\\n            </tr>\\n        </tbody>\\n\\n    </table>\\n\\n        <pagination [totalCount]='tableFilter.totalCount'>\\n        </pagination>\\n\\n</ng-template>\"","export default \"\\n<header-route-menu [currentPageName]=\\\"'Manage'\\\"></header-route-menu>\\n\\n<div class=\\\"container-fluid mt--6\\\">\\n\\n   <router-outlet></router-outlet>\\n   \\n\\n</div>\\n\\n\\n\"","export default \".mark-wrapper {\\n    background: var(--sidemenu-active);\\n    padding: 15px;\\n    border-radius: 10px;\\n}\\n\\n.lbl-text{\\n    color: var(--primary-color);\\n    font-weight: 500;\\n    font-size: 18;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9tYW5hZ2UvaW5kaXZpZHVhbC1tb2NrL2luZGl2aWR1YWwtbW9jay1jcmVhdGUvaW5kaXZpZHVhbC1tb2NrLWNyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0NBQWtDO0lBQ2xDLGFBQWE7SUFDYixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSwyQkFBMkI7SUFDM0IsZ0JBQWdCO0lBQ2hCLGFBQWE7QUFDakIiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL21hbmFnZS9pbmRpdmlkdWFsLW1vY2svaW5kaXZpZHVhbC1tb2NrLWNyZWF0ZS9pbmRpdmlkdWFsLW1vY2stY3JlYXRlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFyay13cmFwcGVyIHtcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1zaWRlbWVudS1hY3RpdmUpO1xuICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbn1cblxuLmxibC10ZXh0e1xuICAgIGNvbG9yOiB2YXIoLS1wcmltYXJ5LWNvbG9yKTtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGZvbnQtc2l6ZTogMTg7XG59Il19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/save.service';\nimport { TableListService } from '@app/core/http/table-list.service';\nimport { QuestionsList } from '@app/shared/models/question-list';\nimport { TableFilter } from '@app/shared/models/table-filter';\n\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-individual-mock-create',\n  templateUrl: './individual-mock-create.component.html',\n  styleUrls: ['./individual-mock-create.component.css']\n})\nexport class IndividualMockCreateComponent implements OnInit {\n  @ViewChild('markDistribution', { static: false }) private markDistribution;\n\n  public createForm: FormGroup = this.formBuilder.group({\n    name: [\"\", [Validators.required]],\n    status: [\"\", [Validators.required]],\n  });\n\n  public selectedType: any;\n  public mockData: any = [];\n\n  // boolean\n  public isStep1: boolean = true\n  public submitted: boolean = false\n  public isAsc: boolean = true\n  public isProgress: boolean = true;\n  public isDialog: boolean = false\n\n  // any\n  public statusLists: any = [\"ACTIVE\", \"INACTIVE\"]\n  public dialog: any = {\n    showText: \"\",\n    isDelete: false,\n    isWarning: true,\n    isconfirmBtn: false\n  }\n  public questionLists: any\n  public mockId: any\n  // table\n\n  public moduleName: string;\n  public subscription: Subscription\n  public qTypeList: any;\n\n  public tableFilter = <TableFilter>{\n    limit: 10,\n    page: 1,\n    sortColumn: 'createdDate',\n    sortDirection: 'desc',\n    search: ''\n  };\n\n  constructor(\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _tableService: TableListService,\n    private _saveService: SaveService\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.moduleName = this._activeRoute.snapshot.paramMap.get(\"moduleName\");\n    this.qTypeList = this._activeRoute.snapshot.data['questionType'].questions;\n    this.selectedType = this.qTypeList[0];\n    this.mockId = this._activeRoute.snapshot.paramMap.get(\"detailId\");\n    if (this.mockId) {\n      this.mockData = this._activeRoute.snapshot.data['mockDetail']\n      this.createForm = this.formBuilder.group({\n        name: [this.mockData['name'], [Validators.required]],\n        status: [this.mockData['status'], [Validators.required]],\n      });\n    }\n    else\n      this.mockData = this.generateMockFinalFormat();\n\n  }\n\n\n  generateMockFinalFormat() {\n    let createData = { name: '', status: '', duration: 0 }\n    this.qTypeList.map(q => {\n      createData[q.questionType] = { markDistribution: '', list: [] }\n    })\n    return createData\n  }\n\n  goToStep2() {\n    this.submitted = true\n    if (this.createForm.invalid) return\n    else {\n      this.isStep1 = false;\n      this.mockData.name = this.createForm.value['name'];\n      this.mockData.status = this.createForm.value['status'];\n\n      this.submitted = false;\n      this.getQuestionLists();\n      setTimeout(() => {\n        if (this.markDistribution)\n          this.markDistribution.nativeElement.value = this.getMockObj().markDistribution;\n      }, 100);\n    }\n\n\n  }\n\n  backStep1() {\n    this.isStep1 = true;\n  }\n\n  onTab(seletedType) {\n    if (!this.getMockObj().markDistribution || !this.getMockObj().list.length) {\n      this.isDialog = true\n      this.dialog.showText = \"Select Question.\"\n      return\n    }\n    else {\n      this.submitted = false;\n      this.addMockData(seletedType);\n    }\n\n  }\n\n  addMockData(type) {\n    this.isProgress = true;\n    if (type.questionType != this.selectedType.questionType) {\n      this.selectedType = type;\n      if (this.markDistribution)\n        this.markDistribution.nativeElement.value = this.getMockObj().markDistribution;\n      this.isProgress = true;\n      this.getQuestionLists();\n    }\n\n  }\n\n\n  getQuestionLists() {\n    this.subscription = this._tableService.getManageQuestionList(this.tableFilter, { moduleType: this.moduleName.toLocaleLowerCase(), questionType: this.selectedType.questionType })\n      .subscribe((res: QuestionsList) => {\n        this.questionLists = res.questions;\n        this.tableFilter = res.filter;\n        this.isProgress = false;\n      })\n  }\n\n\n  onInput(value) {\n    this.getMockObj().markDistribution = value;\n  }\n\n  onSave() {\n    if (!this.getMockObj().markDistribution || !this.getMockObj().list.length) {\n      this.isDialog = true\n      this.dialog.showText = \"Select Question.\"\n    } else {\n      if (this.isEmptyMock()) {\n        this.isDialog = true\n        this.dialog.showText = \"Select question for all questions type.\"\n        return\n      }\n      this.submitted = true\n      this.isProgress = true\n      this.addMockData(this.selectedType);\n\n\n      this.subscription = this._saveService.onSaveIndividualMock(this.mockData, this.moduleName, this.mockId).subscribe((res) => {\n        this.isProgress = false\n        this.goBack();\n      })\n    }\n\n  }\n\n  isEmptyMock() {\n    let res: boolean;\n    this.qTypeList.map(q => {\n      res = this.mockData[q.questionType].list.length == 0;\n      if (res == true) {\n        return res;\n      }\n    });\n    return res;\n  }\n\n  changePage(e) {\n    this.tableFilter.page = e;\n    this.getQuestionLists();\n  }\n\n  selectfile(selectedId) {\n    if (this.isQIdInclude(selectedId))\n      this.getMockObj().list.splice(this.getMockObj().list.indexOf(selectedId), 1);\n    else\n      this.getMockObj().list.push(selectedId)\n  }\n\n  getMockObj() {\n    return this.mockData[this.selectedType.questionType];\n  }\n\n\n  isQIdInclude(qId) {\n    return this.getMockObj().list.includes(qId)\n  }\n\n  get f() {\n    return this.createForm.controls;\n  }\n\n  checkconfirm(e: boolean) {\n    this.isDialog = false;\n  }\n\n\n\n  goBack() {\n    this._saveService.goBackPrev();\n  }\n\n  fitter(sortColumn) {\n    this.isAsc = !this.isAsc ? this.isAsc = true : this.isAsc = false;\n    this.tableFilter.sortDirection = this.isAsc ? 'asc' : 'desc';\n    this.tableFilter.sortColumn = sortColumn;\n    this.getQuestionLists();\n  }\n\n\n  searchDatas(e) {\n    this.tableFilter.search = e\n    this.getQuestionLists();\n  }\n\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe()\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MocksComponent } from './mocks/mocks.component';\nimport { MockBoardComponent } from './mock-board/mock-board.component';\nimport { MockListsComponent } from './mock-lists/mock-lists.component';\nimport { IndividualMockRoutingModule } from '@app/modules/manage/individual-mock/individualMock-routing.module';\nimport { BasicModule } from '@app/shared/basic-components/basic.module';\nimport { IndividualMockCreateComponent } from '@app/modules/manage/individual-mock/individual-mock-create/individual-mock-create.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [MocksComponent, MockBoardComponent, MockListsComponent,IndividualMockCreateComponent],\n  imports: [\n    CommonModule,\n    IndividualMockRoutingModule,\n    BasicModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  exports:[\n    IndividualMockRoutingModule,\n  ]\n})\nexport class IndividualMockModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, Route } from \"@angular/router\";\nimport { OtherDetailResolver } from '@app/modules/manage/reslovers/other-detail.reslover';\nimport { OtherQuestionResolver } from '@app/modules/manage/reslovers/otherQuestion.reslover';\nimport { QuestionTypeResolver } from '@app/modules/manage/reslovers/questions-type.reslover';\nimport { IndividualMockCreateComponent } from '@app/modules/manage/individual-mock/individual-mock-create/individual-mock-create.component';\nimport { MockBoardComponent } from '@app/modules/manage/individual-mock/mock-board/mock-board.component';\nimport { MockListsComponent } from '@app/modules/manage/individual-mock/mock-lists/mock-lists.component';\nimport { MocksComponent } from '@app/modules/manage/individual-mock/mocks/mocks.component';\n\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: MocksComponent,\n    resolve: {\n      questionBank: OtherQuestionResolver\n    },\n    data: {\n      type: 'mock-test'\n    },\n    children:[\n      {\n        path: \"\",\n        component:MockBoardComponent,\n      },\n      {\n        path: \":moduleName\",\n        component:MockListsComponent,\n      },\n      {\n        path: \":moduleName/create\",\n        component:IndividualMockCreateComponent,\n        resolve:{\n          questionType:QuestionTypeResolver\n        }\n      },\n      {\n        path: \":moduleName/create/:detailId\",\n        component:IndividualMockCreateComponent,\n        resolve:{\n          questionType:QuestionTypeResolver,\n          mockDetail:OtherDetailResolver\n        },\n        data: {\n          detailName: 'mock-test'\n        },\n      }\n    ]\n\n  }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    OtherQuestionResolver,\n    OtherDetailResolver,\n    QuestionTypeResolver\n  ]\n})\n\nexport class IndividualMockRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL2luZGl2aWR1YWwtbW9jay9tb2NrLWJvYXJkL21vY2stYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CheckProgress } from '@app/shared/models/check-progress';\n\n@Component({\n  selector: 'app-mock-board',\n  templateUrl: './mock-board.component.html',\n  styleUrls: ['./mock-board.component.css']\n})\nexport class MockBoardComponent implements OnInit {\n\n  public questionBank:CheckProgress;\n\n  constructor(private _activeRoute:ActivatedRoute,private _router:Router) { }\n\n  ngOnInit() {\n    this.questionBank=this._activeRoute.snapshot.data[\"questionBank\"];\n  }\n\n  goToList(data){\n    this._router.navigate([data.moduleType], { relativeTo: this._activeRoute });\n\n  }\n\n}\n","export default \"\\n/* table responsive */\\n\\n@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {\\n    /*\\n                      Label the data\\n                  You could also use a data-* attribute and content for this. That way \\\"bloats\\\" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.\\n                      */\\n    td:nth-of-type(1):before {\\n        content: \\\"Name\\\";\\n    }\\n    td:nth-of-type(2):before {\\n        content: \\\"Status\\\";\\n    }\\n    td:nth-of-type(3):before {\\n        content: \\\"Action\\\";\\n    }\\n\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9tYW5hZ2UvaW5kaXZpZHVhbC1tb2NrL21vY2stbGlzdHMvbW9jay1saXN0cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxxQkFBcUI7O0FBRXJCO0lBQ0k7Ozt1QkFHbUI7SUFDbkI7UUFDSSxlQUFlO0lBQ25CO0lBQ0E7UUFDSSxpQkFBaUI7SUFDckI7SUFDQTtRQUNJLGlCQUFpQjtJQUNyQjs7QUFFSiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL2luZGl2aWR1YWwtbW9jay9tb2NrLWxpc3RzL21vY2stbGlzdHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLyogdGFibGUgcmVzcG9uc2l2ZSAqL1xuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2MHB4KSwgKG1pbi1kZXZpY2Utd2lkdGg6IDc2OHB4KSBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDEwMjRweCkge1xuICAgIC8qXG4gICAgICAgICAgICAgICAgICAgICAgTGFiZWwgdGhlIGRhdGFcbiAgICAgICAgICAgICAgICAgIFlvdSBjb3VsZCBhbHNvIHVzZSBhIGRhdGEtKiBhdHRyaWJ1dGUgYW5kIGNvbnRlbnQgZm9yIHRoaXMuIFRoYXQgd2F5IFwiYmxvYXRzXCIgdGhlIEhUTUwsIHRoaXMgd2F5IG1lYW5zIHlvdSBuZWVkIHRvIGtlZXAgSFRNTCBhbmQgQ1NTIGluIHN5bmMuIExlYSBWZXJvdSBoYXMgYSBjbGV2ZXIgd2F5IHRvIGhhbmRsZSB3aXRoIHRleHQtc2hhZG93LlxuICAgICAgICAgICAgICAgICAgICAgICovXG4gICAgdGQ6bnRoLW9mLXR5cGUoMSk6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJOYW1lXCI7XG4gICAgfVxuICAgIHRkOm50aC1vZi10eXBlKDIpOmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiU3RhdHVzXCI7XG4gICAgfVxuICAgIHRkOm50aC1vZi10eXBlKDMpOmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiQWN0aW9uXCI7XG4gICAgfVxuXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TableListService, } from '@app/core/http/serviceIndex';\nimport { IndividualMock, IndividualMockList, } from '@app/shared/models/prediction';\nimport { TableFilter } from '@app/shared/models/table-filter';\nimport { MockTest } from '@app/shared/models/CommonModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-mock-lists',\n  templateUrl: './mock-lists.component.html',\n  styleUrls: ['./mock-lists.component.css']\n})\nexport class MockListsComponent implements OnInit {\n  public currentModule: string;\n\n  public tableFilter = <TableFilter>{};\n  public isLoading: boolean = false;\n  public mocks: IndividualMock[];\n  private subscription: Subscription;\n\n  constructor(private _activeRoute: ActivatedRoute, private _tableService: TableListService,) { }\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.currentModule = this._activeRoute.snapshot.params['moduleName'];\n\n    this._activeRoute.queryParams.subscribe(\n      (params) => {\n\n        if (params.page) {\n          this.tableFilter.page = params.page;\n          this.tableFilter.limit = params.limit;\n        } else if (params.search) {\n          this.tableFilter.search = params.search;\n        } else {\n          this.tableFilter.page = 1;\n          this.tableFilter.limit = 10;\n          this.tableFilter.sortDirection = 'desc';\n          this.tableFilter.sortColumn = 'name';\n        }\n        this.getMockList();\n      }\n    )\n  }\n\n  getMockList() {\n\n    this.subscription = this._tableService.getMockList(this.tableFilter, this.currentModule)\n      .subscribe((res: IndividualMockList) => {\n        this.mocks = res.questions;\n        this.tableFilter = res.filter;\n        this.isLoading = false;\n      });\n  }\n\n  startClass(data) {\n    let obj = {\n      isActive: data.isProgess,\n    };\n    this.subscription = this._tableService.onStartClassByPrediction(data.data.questionId, obj, this.currentModule).subscribe((res) => {\n      this.getMockList();\n    });\n  }\n\n\n  deleteMock(data) {\n    this.subscription = this._tableService.onDeleteOtherModule(data.questionId, this.currentModule.toLowerCase(), 'mock-test')\n      .subscribe((res) => {\n        this.getMockList()\n      })\n  }\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    if (this.subscription) this.subscription.unsubscribe();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL2luZGl2aWR1YWwtbW9jay9tb2Nrcy9tb2Nrcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mocks',\n  templateUrl: './mocks.component.html',\n  styleUrls: ['./mocks.component.css']\n})\nexport class MocksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":"webpack:///"}