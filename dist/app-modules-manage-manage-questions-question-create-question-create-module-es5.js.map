{"version":3,"sources":["node_modules/@angular/material/esm2015/snack-bar.js","src/app/modules/manage/manage-questions/question-create/listening/dictation/dictation.component.html","src/app/modules/manage/manage-questions/question-create/listening/fib/fib.component.html","src/app/modules/manage/manage-questions/question-create/listening/highlight-correct-summary/highlight-correct-summary.component.html","src/app/modules/manage/manage-questions/question-create/listening/highlight-incorrect-words/highlight-incorrect-words.component.html","src/app/modules/manage/manage-questions/question-create/listening/mcq-multiple/mcq-multiple.component.html","src/app/modules/manage/manage-questions/question-create/listening/mcq-single/mcq-single.component.html","src/app/modules/manage/manage-questions/question-create/listening/select-missing-words/select-missing-words.component.html","src/app/modules/manage/manage-questions/question-create/listening/summary-spoken-text/summary-spoken-text.component.html","src/app/modules/manage/manage-questions/question-create/question-create/question-create.component.html","src/app/modules/manage/manage-questions/question-create/reading/fib-bank/fib-bank.component.html","src/app/modules/manage/manage-questions/question-create/reading/fib-drop-down/fib-drop-down.component.html","src/app/modules/manage/manage-questions/question-create/reading/mcq-multiple/mcq-multiple.component.html","src/app/modules/manage/manage-questions/question-create/reading/mcq-single/mcq-single.component.html","src/app/modules/manage/manage-questions/question-create/reading/reorder-paragraph/reorder-paragraph.component.html","src/app/modules/manage/manage-questions/question-create/speaking/answer-short-question/answer-short-question.component.html","src/app/modules/manage/manage-questions/question-create/speaking/describe-image/describe-image.component.html","src/app/modules/manage/manage-questions/question-create/speaking/read-aloud/read-aloud.component.html","src/app/modules/manage/manage-questions/question-create/speaking/repeat-sentence/repeat-sentence.component.html","src/app/modules/manage/manage-questions/question-create/speaking/retell-lecture/retell-lecture.component.html","src/app/modules/manage/manage-questions/question-create/speaking/word-checker/word-checker.component.html","src/app/modules/manage/manage-questions/question-create/writing/essay-writing/essay-writing.component.html","src/app/modules/manage/manage-questions/question-create/writing/summarize-written-text/summarize-written-text.component.html","src/app/core/services/errors.service.ts","src/app/core/services/loader.service.ts","src/app/core/services/logging.service.ts","src/app/core/services/notification.service.ts","src/app/modules/manage/manage-questions/question-create/listening/dictation/dictation.component.css","src/app/modules/manage/manage-questions/question-create/listening/dictation/dictation.component.ts","src/app/modules/manage/manage-questions/question-create/listening/fib/fib.component.css","src/app/modules/manage/manage-questions/question-create/listening/fib/fib.component.ts","src/app/modules/manage/manage-questions/question-create/listening/highlight-correct-summary/highlight-correct-summary.component.css","src/app/modules/manage/manage-questions/question-create/listening/highlight-correct-summary/highlight-correct-summary.component.ts","src/app/modules/manage/manage-questions/question-create/listening/highlight-incorrect-words/highlight-incorrect-words.component.css","src/app/modules/manage/manage-questions/question-create/listening/highlight-incorrect-words/highlight-incorrect-words.component.ts","src/app/modules/manage/manage-questions/question-create/listening/mcq-multiple/mcq-multiple.component.css","src/app/modules/manage/manage-questions/question-create/listening/mcq-multiple/mcq-multiple.component.ts","src/app/modules/manage/manage-questions/question-create/listening/mcq-single/mcq-single.component.css","src/app/modules/manage/manage-questions/question-create/listening/mcq-single/mcq-single.component.ts","src/app/modules/manage/manage-questions/question-create/listening/select-missing-words/select-missing-words.component.css","src/app/modules/manage/manage-questions/question-create/listening/select-missing-words/select-missing-words.component.ts","src/app/modules/manage/manage-questions/question-create/listening/summary-spoken-text/summary-spoken-text.component.css","src/app/modules/manage/manage-questions/question-create/listening/summary-spoken-text/summary-spoken-text.component.ts","src/app/modules/manage/manage-questions/question-create/question-create-routing.module.ts","src/app/modules/manage/manage-questions/question-create/question-create.module.ts","src/app/modules/manage/manage-questions/question-create/question-create/question-create.component.css","src/app/modules/manage/manage-questions/question-create/question-create/question-create.component.ts","src/app/modules/manage/manage-questions/question-create/reading/fib-bank/fib-bank.component.css","src/app/modules/manage/manage-questions/question-create/reading/fib-bank/fib-bank.component.ts","src/app/modules/manage/manage-questions/question-create/reading/fib-drop-down/fib-drop-down.component.css","src/app/modules/manage/manage-questions/question-create/reading/fib-drop-down/fib-drop-down.component.ts","src/app/modules/manage/manage-questions/question-create/reading/mcq-multiple/mcq-multiple.component.css","src/app/modules/manage/manage-questions/question-create/reading/mcq-multiple/mcq-multiple.component.ts","src/app/modules/manage/manage-questions/question-create/reading/mcq-single/mcq-single.component.css","src/app/modules/manage/manage-questions/question-create/reading/mcq-single/mcq-single.component.ts","src/app/modules/manage/manage-questions/question-create/reading/reorder-paragraph/reorder-paragraph.component.css","src/app/modules/manage/manage-questions/question-create/reading/reorder-paragraph/reorder-paragraph.component.ts","src/app/modules/manage/manage-questions/question-create/speaking/answer-short-question/answer-short-question.component.css","src/app/modules/manage/manage-questions/question-create/speaking/answer-short-question/answer-short-question.component.ts","src/app/modules/manage/manage-questions/question-create/speaking/describe-image/describe-image.component.css","src/app/modules/manage/manage-questions/question-create/speaking/describe-image/describe-image.component.ts","src/app/modules/manage/manage-questions/question-create/speaking/read-aloud/read-aloud.component.css","src/app/modules/manage/manage-questions/question-create/speaking/read-aloud/read-aloud.component.ts","src/app/modules/manage/manage-questions/question-create/speaking/repeat-sentence/repeat-sentence.component.css","src/app/modules/manage/manage-questions/question-create/speaking/repeat-sentence/repeat-sentence.component.ts","src/app/modules/manage/manage-questions/question-create/speaking/retell-lecture/retell-lecture.component.css","src/app/modules/manage/manage-questions/question-create/speaking/retell-lecture/retell-lecture.component.ts","src/app/modules/manage/manage-questions/question-create/speaking/word-checker/word-checker.component.css","src/app/modules/manage/manage-questions/question-create/speaking/word-checker/word-checker.component.ts","src/app/modules/manage/manage-questions/question-create/writing/essay-writing/essay-writing.component.css","src/app/modules/manage/manage-questions/question-create/writing/essay-writing/essay-writing.component.ts","src/app/modules/manage/manage-questions/question-create/writing/summarize-written-text/summarize-written-text.component.css","src/app/modules/manage/manage-questions/question-create/writing/summarize-written-text/summarize-written-text.component.ts","src/app/modules/manage/manage-questions/reslovers/question-detail.reslover.ts","src/app/shared/models/ListeningModel.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Subject } from 'rxjs';\nimport { InjectionToken, Component, ViewEncapsulation, Inject, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef, NgZone, ViewChild, NgModule, Injectable, Injector, Optional, SkipSelf, TemplateRef, ɵɵdefineInjectable, ɵɵinject, INJECTOR } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, ComponentPortal, PortalInjector, TemplatePortal } from '@angular/cdk/portal';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { OverlayModule, Overlay, OverlayConfig } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n * @template T\n */\nclass MatSnackBarRef {\n    /**\n     * @param {?} containerInstance\n     * @param {?} _overlayRef\n     */\n    constructor(containerInstance, _overlayRef) {\n        this._overlayRef = _overlayRef;\n        /**\n         * Subject for notifying the user that the snack bar has been dismissed.\n         */\n        this._afterDismissed = new Subject();\n        /**\n         * Subject for notifying the user that the snack bar has opened and appeared.\n         */\n        this._afterOpened = new Subject();\n        /**\n         * Subject for notifying the user that the snack bar action was called.\n         */\n        this._onAction = new Subject();\n        /**\n         * Whether the snack bar was dismissed using the action button.\n         */\n        this._dismissedByAction = false;\n        this.containerInstance = containerInstance;\n        // Dismiss snackbar on action.\n        this.onAction().subscribe((/**\n         * @return {?}\n         */\n        () => this.dismiss()));\n        containerInstance._onExit.subscribe((/**\n         * @return {?}\n         */\n        () => this._finishDismiss()));\n    }\n    /**\n     * Dismisses the snack bar.\n     * @return {?}\n     */\n    dismiss() {\n        if (!this._afterDismissed.closed) {\n            this.containerInstance.exit();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /**\n     * Marks the snackbar action clicked.\n     * @return {?}\n     */\n    dismissWithAction() {\n        if (!this._onAction.closed) {\n            this._dismissedByAction = true;\n            this._onAction.next();\n            this._onAction.complete();\n        }\n    }\n    /**\n     * Marks the snackbar action clicked.\n     * @deprecated Use `dismissWithAction` instead.\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    closeWithAction() {\n        this.dismissWithAction();\n    }\n    /**\n     * Dismisses the snack bar after some duration\n     * @param {?} duration\n     * @return {?}\n     */\n    _dismissAfter(duration) {\n        this._durationTimeoutId = setTimeout((/**\n         * @return {?}\n         */\n        () => this.dismiss()), duration);\n    }\n    /**\n     * Marks the snackbar as opened\n     * @return {?}\n     */\n    _open() {\n        if (!this._afterOpened.closed) {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }\n    }\n    /**\n     * Cleans up the DOM after closing.\n     * @private\n     * @return {?}\n     */\n    _finishDismiss() {\n        this._overlayRef.dispose();\n        if (!this._onAction.closed) {\n            this._onAction.complete();\n        }\n        this._afterDismissed.next({ dismissedByAction: this._dismissedByAction });\n        this._afterDismissed.complete();\n        this._dismissedByAction = false;\n    }\n    /**\n     * Gets an observable that is notified when the snack bar is finished closing.\n     * @return {?}\n     */\n    afterDismissed() {\n        return this._afterDismissed.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the snack bar has opened and appeared.\n     * @return {?}\n     */\n    afterOpened() {\n        return this.containerInstance._onEnter;\n    }\n    /**\n     * Gets an observable that is notified when the snack bar action is called.\n     * @return {?}\n     */\n    onAction() {\n        return this._onAction.asObservable();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to access the data that was passed in to a snack bar.\n * @type {?}\n */\nconst MAT_SNACK_BAR_DATA = new InjectionToken('MatSnackBarData');\n/**\n * Configuration used when opening a snack-bar.\n * @template D\n */\nclass MatSnackBarConfig {\n    constructor() {\n        /**\n         * The politeness level for the MatAriaLiveAnnouncer announcement.\n         */\n        this.politeness = 'assertive';\n        /**\n         * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n         * component or template, the announcement message will default to the specified message.\n         */\n        this.announcementMessage = '';\n        /**\n         * The length of time in milliseconds to wait before automatically dismissing the snack bar.\n         */\n        this.duration = 0;\n        /**\n         * Data being injected into the child component.\n         */\n        this.data = null;\n        /**\n         * The horizontal position to place the snack bar.\n         */\n        this.horizontalPosition = 'center';\n        /**\n         * The vertical position to place the snack bar.\n         */\n        this.verticalPosition = 'bottom';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n */\nclass SimpleSnackBar {\n    /**\n     * @param {?} snackBarRef\n     * @param {?} data\n     */\n    constructor(snackBarRef, data) {\n        this.snackBarRef = snackBarRef;\n        this.data = data;\n    }\n    /**\n     * Performs the action on the snack bar.\n     * @return {?}\n     */\n    action() {\n        this.snackBarRef.dismissWithAction();\n    }\n    /**\n     * If the action button should be shown.\n     * @return {?}\n     */\n    get hasAction() {\n        return !!this.data.action;\n    }\n}\nSimpleSnackBar.decorators = [\n    { type: Component, args: [{selector: 'simple-snack-bar',\n                template: \"<span>{{data.message}}</span><div class=\\\"mat-simple-snackbar-action\\\" *ngIf=\\\"hasAction\\\"><button mat-button (click)=\\\"action()\\\">{{data.action}}</button></div>\",\n                styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}\"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-simple-snackbar',\n                }\n            },] },\n];\n/** @nocollapse */\nSimpleSnackBar.ctorParameters = () => [\n    { type: MatSnackBarRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SNACK_BAR_DATA,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material snack bar.\n * \\@docs-private\n * @type {?}\n */\nconst matSnackBarAnimations = {\n    /**\n     * Animation that shows and hides a snack bar.\n     */\n    snackBarState: trigger('state', [\n        state('void, hidden', style({\n            transform: 'scale(0.8)',\n            opacity: 0,\n        })),\n        state('visible', style({\n            transform: 'scale(1)',\n            opacity: 1,\n        })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void, * => hidden', animate('75ms cubic-bezier(0.4, 0.0, 1, 1)', style({\n            opacity: 0\n        }))),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Internal component that wraps user-provided snack bar content.\n * \\@docs-private\n */\nclass MatSnackBarContainer extends BasePortalOutlet {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} snackBarConfig\n     */\n    constructor(_ngZone, _elementRef, _changeDetectorRef, snackBarConfig) {\n        super();\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.snackBarConfig = snackBarConfig;\n        /**\n         * Whether the component has been destroyed.\n         */\n        this._destroyed = false;\n        /**\n         * Subject for notifying that the snack bar has exited from view.\n         */\n        this._onExit = new Subject();\n        /**\n         * Subject for notifying that the snack bar has finished entering the view.\n         */\n        this._onEnter = new Subject();\n        /**\n         * The state of the snack bar animations.\n         */\n        this._animationState = 'void';\n        // Based on the ARIA spec, `alert` and `status` roles have an\n        // implicit `assertive` and `polite` politeness respectively.\n        if (snackBarConfig.politeness === 'assertive' && !snackBarConfig.announcementMessage) {\n            this._role = 'alert';\n        }\n        else if (snackBarConfig.politeness === 'off') {\n            this._role = null;\n        }\n        else {\n            this._role = 'status';\n        }\n    }\n    /**\n     * Attach a component portal as content to this snack bar container.\n     * @template T\n     * @param {?} portal\n     * @return {?}\n     */\n    attachComponentPortal(portal) {\n        this._assertNotAttached();\n        this._applySnackBarClasses();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a template portal as content to this snack bar container.\n     * @template C\n     * @param {?} portal\n     * @return {?}\n     */\n    attachTemplatePortal(portal) {\n        this._assertNotAttached();\n        this._applySnackBarClasses();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /**\n     * Handle end of animations, updating the state of the snackbar.\n     * @param {?} event\n     * @return {?}\n     */\n    onAnimationEnd(event) {\n        const { fromState, toState } = event;\n        if ((toState === 'void' && fromState !== 'void') || toState === 'hidden') {\n            this._completeExit();\n        }\n        if (toState === 'visible') {\n            // Note: we shouldn't use `this` inside the zone callback,\n            // because it can cause a memory leak.\n            /** @type {?} */\n            const onEnter = this._onEnter;\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                onEnter.next();\n                onEnter.complete();\n            }));\n        }\n    }\n    /**\n     * Begin animation of snack bar entrance into view.\n     * @return {?}\n     */\n    enter() {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Begin animation of the snack bar exiting from view.\n     * @return {?}\n     */\n    exit() {\n        // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case\n        // where multiple snack bars are opened in quick succession (e.g. two consecutive calls to\n        // `MatSnackBar.open`).\n        this._animationState = 'hidden';\n        return this._onExit;\n    }\n    /**\n     * Makes sure the exit callbacks have been invoked when the element is destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed = true;\n        this._completeExit();\n    }\n    /**\n     * Waits for the zone to settle before removing the element. Helps prevent\n     * errors where we end up removing an element which is in the middle of an animation.\n     * @private\n     * @return {?}\n     */\n    _completeExit() {\n        this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._onExit.next();\n            this._onExit.complete();\n        }));\n    }\n    /**\n     * Applies the various positioning and user-configured CSS classes to the snack bar.\n     * @private\n     * @return {?}\n     */\n    _applySnackBarClasses() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const panelClasses = this.snackBarConfig.panelClass;\n        if (panelClasses) {\n            if (Array.isArray(panelClasses)) {\n                // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n                panelClasses.forEach((/**\n                 * @param {?} cssClass\n                 * @return {?}\n                 */\n                cssClass => element.classList.add(cssClass)));\n            }\n            else {\n                element.classList.add(panelClasses);\n            }\n        }\n        if (this.snackBarConfig.horizontalPosition === 'center') {\n            element.classList.add('mat-snack-bar-center');\n        }\n        if (this.snackBarConfig.verticalPosition === 'top') {\n            element.classList.add('mat-snack-bar-top');\n        }\n    }\n    /**\n     * Asserts that no content is already attached to the container.\n     * @private\n     * @return {?}\n     */\n    _assertNotAttached() {\n        if (this._portalOutlet.hasAttached()) {\n            throw Error('Attempting to attach snack bar content after content is already attached');\n        }\n    }\n}\nMatSnackBarContainer.decorators = [\n    { type: Component, args: [{selector: 'snack-bar-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\",\n                styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}@media (-ms-high-contrast:active){.mat-snack-bar-container{border:solid 1px}}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\"],\n                // In Ivy embedded views will be change detected from their declaration place, rather than\n                // where they were stamped out. This means that we can't have the snack bar container be OnPush,\n                // because it might cause snack bars that were opened from a template not to be out of date.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                animations: [matSnackBarAnimations.snackBarState],\n                host: {\n                    '[attr.role]': '_role',\n                    'class': 'mat-snack-bar-container',\n                    '[@state]': '_animationState',\n                    '(@state.done)': 'onAnimationEnd($event)'\n                },\n            },] },\n];\n/** @nocollapse */\nMatSnackBarContainer.ctorParameters = () => [\n    { type: NgZone },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSnackBarConfig }\n];\nMatSnackBarContainer.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSnackBarModule {\n}\nMatSnackBarModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    CommonModule,\n                    MatButtonModule,\n                    MatCommonModule,\n                ],\n                exports: [MatSnackBarContainer, MatCommonModule],\n                declarations: [MatSnackBarContainer, SimpleSnackBar],\n                entryComponents: [MatSnackBarContainer, SimpleSnackBar],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to specify default snack bar.\n * @type {?}\n */\nconst MAT_SNACK_BAR_DEFAULT_OPTIONS = new InjectionToken('mat-snack-bar-default-options', {\n    providedIn: 'root',\n    factory: MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY() {\n    return new MatSnackBarConfig();\n}\n/**\n * Service to dispatch Material Design snack bar messages.\n */\nclass MatSnackBar {\n    /**\n     * @param {?} _overlay\n     * @param {?} _live\n     * @param {?} _injector\n     * @param {?} _breakpointObserver\n     * @param {?} _parentSnackBar\n     * @param {?} _defaultConfig\n     */\n    constructor(_overlay, _live, _injector, _breakpointObserver, _parentSnackBar, _defaultConfig) {\n        this._overlay = _overlay;\n        this._live = _live;\n        this._injector = _injector;\n        this._breakpointObserver = _breakpointObserver;\n        this._parentSnackBar = _parentSnackBar;\n        this._defaultConfig = _defaultConfig;\n        /**\n         * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n         * If there is a parent snack-bar service, all operations should delegate to that parent\n         * via `_openedSnackBarRef`.\n         */\n        this._snackBarRefAtThisLevel = null;\n    }\n    /**\n     * Reference to the currently opened snackbar at *any* level.\n     * @return {?}\n     */\n    get _openedSnackBarRef() {\n        /** @type {?} */\n        const parent = this._parentSnackBar;\n        return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _openedSnackBarRef(value) {\n        if (this._parentSnackBar) {\n            this._parentSnackBar._openedSnackBarRef = value;\n        }\n        else {\n            this._snackBarRefAtThisLevel = value;\n        }\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom component for the content, removing any\n     * currently opened snack bars.\n     *\n     * @template T\n     * @param {?} component Component to be instantiated.\n     * @param {?=} config Extra configuration for the snack bar.\n     * @return {?}\n     */\n    openFromComponent(component, config) {\n        return (/** @type {?} */ (this._attach(component, config)));\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom template for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param {?} template Template to be instantiated.\n     * @param {?=} config Extra configuration for the snack bar.\n     * @return {?}\n     */\n    openFromTemplate(template, config) {\n        return this._attach(template, config);\n    }\n    /**\n     * Opens a snackbar with a message and an optional action.\n     * @param {?} message The message to show in the snackbar.\n     * @param {?=} action The label for the snackbar action.\n     * @param {?=} config Additional configuration options for the snackbar.\n     * @return {?}\n     */\n    open(message, action = '', config) {\n        /** @type {?} */\n        const _config = Object.assign({}, this._defaultConfig, config);\n        // Since the user doesn't have access to the component, we can\n        // override the data to pass in our own message and action.\n        _config.data = { message, action };\n        if (!_config.announcementMessage) {\n            _config.announcementMessage = message;\n        }\n        return this.openFromComponent(SimpleSnackBar, _config);\n    }\n    /**\n     * Dismisses the currently-visible snack bar.\n     * @return {?}\n     */\n    dismiss() {\n        if (this._openedSnackBarRef) {\n            this._openedSnackBarRef.dismiss();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // Only dismiss the snack bar at the current level on destroy.\n        if (this._snackBarRefAtThisLevel) {\n            this._snackBarRefAtThisLevel.dismiss();\n        }\n    }\n    /**\n     * Attaches the snack bar container component to the overlay.\n     * @private\n     * @param {?} overlayRef\n     * @param {?} config\n     * @return {?}\n     */\n    _attachSnackBarContainer(overlayRef, config) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        /** @type {?} */\n        const injector = new PortalInjector(userInjector || this._injector, new WeakMap([\n            [MatSnackBarConfig, config]\n        ]));\n        /** @type {?} */\n        const containerPortal = new ComponentPortal(MatSnackBarContainer, config.viewContainerRef, injector);\n        /** @type {?} */\n        const containerRef = overlayRef.attach(containerPortal);\n        containerRef.instance.snackBarConfig = config;\n        return containerRef.instance;\n    }\n    /**\n     * Places a new component or a template as the content of the snack bar container.\n     * @private\n     * @template T\n     * @param {?} content\n     * @param {?=} userConfig\n     * @return {?}\n     */\n    _attach(content, userConfig) {\n        /** @type {?} */\n        const config = Object.assign({}, new MatSnackBarConfig(), this._defaultConfig, userConfig);\n        /** @type {?} */\n        const overlayRef = this._createOverlay(config);\n        /** @type {?} */\n        const container = this._attachSnackBarContainer(overlayRef, config);\n        /** @type {?} */\n        const snackBarRef = new MatSnackBarRef(container, overlayRef);\n        if (content instanceof TemplateRef) {\n            /** @type {?} */\n            const portal = new TemplatePortal(content, (/** @type {?} */ (null)), (/** @type {?} */ ({\n                $implicit: config.data,\n                snackBarRef\n            })));\n            snackBarRef.instance = container.attachTemplatePortal(portal);\n        }\n        else {\n            /** @type {?} */\n            const injector = this._createInjector(config, snackBarRef);\n            /** @type {?} */\n            const portal = new ComponentPortal(content, undefined, injector);\n            /** @type {?} */\n            const contentRef = container.attachComponentPortal(portal);\n            // We can't pass this via the injector, because the injector is created earlier.\n            snackBarRef.instance = contentRef.instance;\n        }\n        // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\n        // appropriate. This class is applied to the overlay element because the overlay must expand to\n        // fill the width of the screen for full width snackbars.\n        this._breakpointObserver.observe(Breakpoints.HandsetPortrait).pipe(takeUntil(overlayRef.detachments())).subscribe((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state$$1 => {\n            /** @type {?} */\n            const classList = overlayRef.overlayElement.classList;\n            /** @type {?} */\n            const className = 'mat-snack-bar-handset';\n            state$$1.matches ? classList.add(className) : classList.remove(className);\n        }));\n        this._animateSnackBar(snackBarRef, config);\n        this._openedSnackBarRef = snackBarRef;\n        return this._openedSnackBarRef;\n    }\n    /**\n     * Animates the old snack bar out and the new one in.\n     * @private\n     * @param {?} snackBarRef\n     * @param {?} config\n     * @return {?}\n     */\n    _animateSnackBar(snackBarRef, config) {\n        // When the snackbar is dismissed, clear the reference to it.\n        snackBarRef.afterDismissed().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n            if (this._openedSnackBarRef == snackBarRef) {\n                this._openedSnackBarRef = null;\n            }\n            if (config.announcementMessage) {\n                this._live.clear();\n            }\n        }));\n        if (this._openedSnackBarRef) {\n            // If a snack bar is already in view, dismiss it and enter the\n            // new snack bar after exit animation is complete.\n            this._openedSnackBarRef.afterDismissed().subscribe((/**\n             * @return {?}\n             */\n            () => {\n                snackBarRef.containerInstance.enter();\n            }));\n            this._openedSnackBarRef.dismiss();\n        }\n        else {\n            // If no snack bar is in view, enter the new snack bar.\n            snackBarRef.containerInstance.enter();\n        }\n        // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n        if (config.duration && config.duration > 0) {\n            snackBarRef.afterOpened().subscribe((/**\n             * @return {?}\n             */\n            () => snackBarRef._dismissAfter((/** @type {?} */ (config.duration)))));\n        }\n        if (config.announcementMessage) {\n            this._live.announce(config.announcementMessage, config.politeness);\n        }\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @private\n     * @param {?} config The user-specified snack bar config.\n     * @return {?}\n     */\n    _createOverlay(config) {\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig();\n        overlayConfig.direction = config.direction;\n        /** @type {?} */\n        let positionStrategy = this._overlay.position().global();\n        // Set horizontal position.\n        /** @type {?} */\n        const isRtl = config.direction === 'rtl';\n        /** @type {?} */\n        const isLeft = (config.horizontalPosition === 'left' ||\n            (config.horizontalPosition === 'start' && !isRtl) ||\n            (config.horizontalPosition === 'end' && isRtl));\n        /** @type {?} */\n        const isRight = !isLeft && config.horizontalPosition !== 'center';\n        if (isLeft) {\n            positionStrategy.left('0');\n        }\n        else if (isRight) {\n            positionStrategy.right('0');\n        }\n        else {\n            positionStrategy.centerHorizontally();\n        }\n        // Set horizontal position.\n        if (config.verticalPosition === 'top') {\n            positionStrategy.top('0');\n        }\n        else {\n            positionStrategy.bottom('0');\n        }\n        overlayConfig.positionStrategy = positionStrategy;\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a snack bar component.\n     * @private\n     * @template T\n     * @param {?} config Config that was used to create the snack bar.\n     * @param {?} snackBarRef Reference to the snack bar.\n     * @return {?}\n     */\n    _createInjector(config, snackBarRef) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        return new PortalInjector(userInjector || this._injector, new WeakMap([\n            [MatSnackBarRef, snackBarRef],\n            [MAT_SNACK_BAR_DATA, config.data]\n        ]));\n    }\n}\nMatSnackBar.decorators = [\n    { type: Injectable, args: [{ providedIn: MatSnackBarModule },] },\n];\n/** @nocollapse */\nMatSnackBar.ctorParameters = () => [\n    { type: Overlay },\n    { type: LiveAnnouncer },\n    { type: Injector },\n    { type: BreakpointObserver },\n    { type: MatSnackBar, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: MatSnackBarConfig, decorators: [{ type: Inject, args: [MAT_SNACK_BAR_DEFAULT_OPTIONS,] }] }\n];\n/** @nocollapse */ MatSnackBar.ngInjectableDef = ɵɵdefineInjectable({ factory: function MatSnackBar_Factory() { return new MatSnackBar(ɵɵinject(Overlay), ɵɵinject(LiveAnnouncer), ɵɵinject(INJECTOR), ɵɵinject(BreakpointObserver), ɵɵinject(MatSnackBar, 12), ɵɵinject(MAT_SNACK_BAR_DEFAULT_OPTIONS)); }, token: MatSnackBar, providedIn: MatSnackBarModule });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatSnackBarModule, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MAT_SNACK_BAR_DEFAULT_OPTIONS, MatSnackBar, MatSnackBarContainer, MAT_SNACK_BAR_DATA, MatSnackBarConfig, MatSnackBarRef, SimpleSnackBar, matSnackBarAnimations };\n//# sourceMappingURL=snack-bar.js.map\n","export default \"<form [formGroup]=\\\"createDictionForm\\\">\\n  <div class=\\\"container create-form\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Dictation Title</label-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" placeholder=\\\"Write Dictation Title\\\" />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Dictation Duration</label-text>\\n        <warning-text>(IN SECONDS)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"duration\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\" placeholder=\\\"Write Dictation Duration\\\"\\n            OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <file-uploader acceptFile='audio' formControlName=\\\"audioFile\\\"></file-uploader>\\n        <div *ngIf=\\\"submitted && f.audioFile.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.audioFile.errors.required\\\">\\n            You must upload audio file\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>CORRECT ANSWER</label-text>\\n        <warning-text>{{ answerWarningText }}</warning-text>\\n        <textarea class=\\\"form-control\\\" cols=\\\"30\\\" rows=\\\"4\\\" [ngClass]=\\\"{\\n              'is-invalid': submitted && f.answer.errors\\n            }\\\" formControlName=\\\"answer\\\" placeholder=\\\"Write answer\\\"></textarea>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"footer-button-block\\\">\\n      <cancel-btn>Cancel</cancel-btn>\\n      <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n    </div>\\n  </div>\\n</form>\"","export default \"<form [formGroup]=\\\"creatFIBForm\\\">\\n    <div class=\\\"container create-form\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <label-text>Title</label-text>\\n          <div class=\\\"d-flex\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" placeholder=\\\"Write Title\\\" />\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row divider\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <label-text>Duration</label-text>\\n          <warning-text>(IN SECONDS)</warning-text>\\n          <div class=\\\"d-flex\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"duration\\\" class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\" placeholder=\\\"Write Duration\\\" OnlyNumber />\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row divider\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <file-uploader acceptFile='audio' formControlName=\\\"audioFile\\\"></file-uploader>\\n          <div *ngIf=\\\"submitted && f.audioFile.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.audioFile.errors.required\\\">\\n              You must upload audio file\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row divider\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <label-text>Blanks Words Paragraph</label-text>\\n          <warning-text>{{ answerWarningText }}</warning-text>\\n          <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" [ngClass]=\\\"{\\n              'is-invalid': submitted && f.paragraph.errors\\n            }\\\" formControlName=\\\"paragraph\\\" placeholder=\\\"Write answer\\\"></textarea>\\n        </div>\\n      </div>\\n      <div class=\\\"footer-button-block\\\">\\n        <cancel-btn>Cancel</cancel-btn>\\n        <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n      </div>\\n    </div>\\n  </form>\"","export default \"<form [formGroup]=\\\"createCorrectSummaryForm\\\">\\n    <div class=\\\"container create-form\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Title</label-text>\\n          <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" placeholder=\\\"Write Title\\\" />\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Duration</label-text>\\n          <warning-text>(IN SECONDS)</warning-text>\\n          <input type=\\\"text\\\" formControlName=\\\"duration\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\" placeholder=\\\"Write Duration\\\"\\n            OnlyNumber />\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <file-uploader acceptFile='audio' formControlName=\\\"audioFile\\\"></file-uploader>\\n          <div *ngIf=\\\"submitted && f.audioFile.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.audioFile.errors.required\\\">\\n              You must upload audio file\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Question</label-text>\\n          <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" [ngClass]=\\\"{\\n                    'is-invalid': submitted && f.question.errors }\\\" formControlName=\\\"question\\\"\\n            placeholder=\\\"Write Question\\\"></textarea>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Give Single Answer</label-text>\\n          <input type=\\\"text\\\" formControlName=\\\"answer\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.answer.errors }\\\" placeholder=\\\"Write Single Answer\\\" />\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Give Options</label-text>\\n          <warning-text>(SEPARATE BY(;))</warning-text>\\n          <input type=\\\"text\\\" formControlName=\\\"options\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.options.errors }\\\" placeholder=\\\"Write Options\\\" />\\n        </div>\\n      </div>\\n\\n      <div class=\\\"footer-button-block\\\">\\n        <cancel-btn>Cancel</cancel-btn>\\n        <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n      </div>\\n    </div>\\n  </form>\\n\"","export default \"<form [formGroup]=\\\"createIncorrectWordForm\\\">\\n\\n  <div class=\\\"container create-form\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Title</label-text>\\n        <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\"\\n          [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" placeholder=\\\"Write Title\\\" />\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Duration</label-text>\\n        <warning-text>(IN SECONDS)</warning-text>\\n        <input type=\\\"text\\\" formControlName=\\\"duration\\\" class=\\\"form-control\\\"\\n          [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\" placeholder=\\\"Write Duration\\\" OnlyNumber />\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <file-uploader acceptFile='audio' formControlName=\\\"audioFile\\\"></file-uploader>\\n        <div *ngIf=\\\"submitted && f.audioFile.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.audioFile.errors.required\\\">\\n            You must upload audio file\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Words Paragraph</label-text>\\n        <warning-text>{{ answerWarningText }}</warning-text>\\n        <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" [ngClass]=\\\"{\\n                    'is-invalid': submitted && f.paragraph.errors }\\\" formControlName=\\\"paragraph\\\"\\n          placeholder=\\\"Write Question\\\"></textarea>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"footer-button-block\\\">\\n      <cancel-btn>Cancel</cancel-btn>\\n      <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n    </div>\\n  </div>\\n</form>\"","export default \"<form [formGroup]=\\\"creatMCQForm\\\">\\n  <div class=\\\"container create-form\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Title</label-text>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Write Title\\\"\\n          [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" formControlName=\\\"title\\\" />\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Duration</label-text>\\n        <warning-text>(IN SECONDS)</warning-text>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\"\\n          formControlName=\\\"duration\\\" placeholder=\\\"Write Duration\\\" OnlyNumber />\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <file-uploader acceptFile='audio' formControlName=\\\"audioFile\\\"></file-uploader>\\n        <div *ngIf=\\\"submitted && f.audioFile.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.audioFile.errors.required\\\">\\n            You must upload audio file\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Question</label-text>\\n        <div class=\\\"d-flex\\\">\\n          <textarea [ngClass]=\\\"{ 'is-invalid': submitted && f.question.errors }\\\" formControlName=\\\"question\\\"\\n            placeholder=\\\"Question\\\" class=\\\"form-control\\\" cols=\\\"30\\\" rows=\\\"4\\\"\\n            (input)=\\\"str = $event.target.value\\\"></textarea>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Give Answer</label-text>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.answers.errors }\\\"\\n          formControlName=\\\"answers\\\" placeholder=\\\"Write Answer\\\" />\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Give Options</label-text>\\n        <warning-text>(SEPARATE BY(;))</warning-text>\\n          <textarea [ngClass]=\\\"{ 'is-invalid': submitted && f.options.errors }\\\" formControlName=\\\"options\\\"\\n          placeholder=\\\"Write Option\\\" class=\\\"form-control\\\" cols=\\\"30\\\" rows=\\\"4\\\"></textarea>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"footer-button-block\\\">\\n      <cancel-btn>Cancel</cancel-btn>\\n      <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n    </div>\\n  </div>\\n</form>\"","export default \"<form [formGroup]=\\\"creatMCQForm\\\">\\n  <div class=\\\"container create-form\\\">\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Title</label-text>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Write Title\\\"\\n          [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" formControlName=\\\"title\\\" />\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Duration</label-text>\\n        <warning-text>(IN SECONDS)</warning-text>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\"\\n          formControlName=\\\"duration\\\" placeholder=\\\"Write Duration\\\" OnlyNumber />\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <file-uploader acceptFile='audio' formControlName=\\\"audioFile\\\"></file-uploader>\\n        <div *ngIf=\\\"submitted && f.audioFile.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.audioFile.errors.required\\\">\\n            You must upload audio file\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Question</label-text>\\n        <textarea [ngClass]=\\\"{ 'is-invalid': submitted && f.question.errors }\\\" formControlName=\\\"question\\\"\\n          placeholder=\\\"Question\\\" class=\\\"form-control\\\" cols=\\\"30\\\" rows=\\\"4\\\"></textarea>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Give Answer</label-text>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.answers.errors }\\\"\\n          formControlName=\\\"answers\\\" placeholder=\\\"Write Answer\\\" />\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Give Options</label-text>\\n        <warning-text>(SEPARATE BY(;))</warning-text>\\n        <textarea [ngClass]=\\\"{ 'is-invalid': submitted && f.options.errors }\\\" formControlName=\\\"options\\\"\\n          placeholder=\\\"Write Option\\\" class=\\\"form-control\\\" cols=\\\"30\\\" rows=\\\"4\\\"></textarea>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"footer-button-block\\\">\\n      <cancel-btn>Cancel</cancel-btn>\\n      <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n    </div>\\n  </div>\\n</form>\"","export default \"<form [formGroup]=\\\"creatMissingWordForm\\\">\\n    <div class=\\\"container create-form\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Title</label-text>\\n          <div class=\\\"d-flex\\\">\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              placeholder=\\\"Write Title\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\"\\n              formControlName=\\\"title\\\"\\n            />\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Duration</label-text>\\n          <warning-text>(IN SECONDS)</warning-text>\\n          <div class=\\\"d-flex\\\">\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\"\\n              formControlName=\\\"duration\\\"\\n              placeholder=\\\"Write Duration\\\"\\n              OnlyNumber\\n            />\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <file-uploader\\n            acceptFile='audio'\\n            formControlName=\\\"audioFile\\\"\\n          ></file-uploader>\\n\\n          <div *ngIf=\\\"submitted && f.audioFile.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.audioFile.errors.required\\\">\\n              You must upload audio file\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Question</label-text>\\n          <div class=\\\"d-flex\\\">\\n            <textarea\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.question.errors }\\\"\\n              formControlName=\\\"question\\\"\\n              placeholder=\\\"Question\\\"\\n              class=\\\"form-control\\\"\\n              cols=\\\"30\\\"\\n              rows=\\\"4\\\"\\n            ></textarea>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Give Single Answer</label-text>\\n          <div class=\\\"d-flex\\\">\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.answer.errors }\\\"\\n              formControlName=\\\"answer\\\"\\n              placeholder=\\\"Write Single Answer\\\"\\n            />\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Give Options</label-text>\\n          <warning-text>(SEPARATE BY(;))</warning-text>\\n          <div class=\\\"d-flex\\\">\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.option.errors }\\\"\\n              formControlName=\\\"option\\\"\\n              placeholder=\\\"Write Option\\\"\\n            />\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"footer-button-block\\\">\\n        <cancel-btn>Cancel</cancel-btn>\\n        <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n      </div>\\n    </div>\\n  </form>\\n\"","export default \"<form [formGroup]=\\\"createSummary\\\" class=\\\"bg-d25 h-100 overLay\\\">\\n\\n    <div class=\\\"container pb-5\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12 mb-2\\\">\\n                <label-text>Summary Name</label-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" formControlName=\\\"summaryName\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && f.summaryName.errors }\\\" placeholder=\\\"Write Summary Name\\\" />\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12 mb-2\\\">\\n                <div class=\\\"divider\\\"></div>\\n                <label-text>Summmary Type</label-text>\\n                <select class=\\\"select-box form-control\\\" formControlName=\\\"summaryType\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && f.summaryType.errors }\\\">\\n                    <option value=\\\"\\\" disabled selected hidden>Select Summary Type</option>\\n                    <option *ngFor=\\\"let type of typeList\\\" [ngValue]=\\\"type._id\\\">\\n                        {{ type.name }}\\n                    </option>\\n                </select>\\n            </div>\\n        </div>\\n        <div class=\\\"row mt-2\\\" *ngIf=\\\"!isProgress\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Summary Question</label-text>\\n                <editor [index]=\\\"1\\\" (getData)=\\\"getMarkDownForSummaryQuestion($event)\\\" [data]=\\\"editorDataQestion\\\">\\n                </editor>\\n            </div>\\n        </div>\\n        <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col-md-12 mb-2\\\">\\n                <file-uploader acceptFile='audio' formControlName=\\\"audioFile\\\"></file-uploader>\\n                <div *ngIf=\\\"submitted && f.audioFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.audioFile.errors.required\\\">\\n                        You must upload audio file\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n        <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <label-text>Content Keyword</label-text>\\n                <warning-text>(SEPARATE EACH WORD USING SEMICOLON (;))</warning-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" placeholder=\\\"Write Content Keyword...\\\"\\n                    formControlName=\\\"contentKeyword\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && f.contentKeyword.errors }\\\" />\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <label-text>Vocabulary Word</label-text>\\n                <warning-text>(SEPARATE EACH WORD USING SEMICOLON (;))</warning-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" placeholder=\\\"Write Vocabulary Word...\\\"\\n                    formControlName=\\\"vocabularyWord\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && f.vocabularyWord.errors }\\\" />\\n            </div>\\n        </div>\\n        <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <label-text>Content Keyword Limit</label-text>\\n                <warning-text>(LIMIT TO GET MAXIMUN SCORE)</warning-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" placeholder=\\\"0\\\" OnlyNumber\\n                    formControlName=\\\"contentKeywordLimit\\\" [ngClass]=\\\"{\\n              'is-invalid': submitted && f.contentKeywordLimit.errors\\n            }\\\" />\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <label-text>Maximum Word Limit</label-text>\\n                <warning-text>(NUMBER OF WORDS STUDENT CAN WRITE)</warning-text>\\n                <input type=\\\"text\\\" class=\\\"form-control pb_height-50 reverse;\\\" placeholder=\\\"0\\\" OnlyNumber\\n                    formControlName=\\\"maxWordLimit\\\" [ngClass]=\\\"{\\n              'is-invalid': submitted && f.maxWordLimit.errors\\n            }\\\" />\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row mt-2\\\" *ngIf=\\\"!isProgress\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Advise Summary Content</label-text>\\n                <warning-text>(SAMPLE SUMMARY TO GET HIGHEST MARK)</warning-text>\\n                <editor [index]=\\\"2\\\" (getData)=\\\"getMarkDownForAdviseSummary($event)\\\" [data]=\\\"editorDataAdvise\\\"></editor>\\n            </div>\\n        </div>\\n        <div class=\\\"footer-button-block\\\">\\n            <cancel-btn>Cancel</cancel-btn>\\n            <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n        </div>\\n\\n    </div>\\n</form>\"","export default \"<header-route-menu-light [currentPageName]=\\\"currentModule.moduleType\\\"\\n [moduleName]=\\\"questionName\\\">\\n</header-route-menu-light>\\n\\n<ng-container [ngSwitch]=\\\"currentModule.questionType\\\">\\n    <!-- LISTENING -->\\n    <dictation *ngSwitchCase=\\\"'L001'\\\"></dictation>\\n\\n    <fib *ngSwitchCase=\\\"'L002'\\\"></fib>\\n\\n    <highlight-incorrect-words *ngSwitchCase=\\\"'L003'\\\"></highlight-incorrect-words>\\n\\n    <mcq-single-listening *ngSwitchCase=\\\"'L004'\\\"></mcq-single-listening>\\n\\n    <mcq-multiple-listening *ngSwitchCase=\\\"'L005'\\\"></mcq-multiple-listening>\\n\\n    <select-missing-words *ngSwitchCase=\\\"'L006'\\\"></select-missing-words>\\n\\n    <highlight-correct-summary *ngSwitchCase=\\\"'L007'\\\"></highlight-correct-summary>\\n\\n    <summary-spoken-text *ngSwitchCase=\\\"'L008'\\\"></summary-spoken-text>\\n    <!-- READING -->\\n    <reorder-paragraph *ngSwitchCase=\\\"'R001'\\\"></reorder-paragraph>\\n\\n    <fib-drop-down *ngSwitchCase=\\\"'R002'\\\"></fib-drop-down>\\n\\n    <fib-bank *ngSwitchCase=\\\"'R003'\\\"></fib-bank>\\n\\n    <mcq-single *ngSwitchCase=\\\"'R004'\\\"></mcq-single>\\n\\n    <mcq-multiple *ngSwitchCase=\\\"'R005'\\\"></mcq-multiple>\\n\\n    <!--SPEAKING -->\\n    <read-aloud *ngSwitchCase=\\\"'S001'\\\"></read-aloud>\\n\\n    <repeat-sentence *ngSwitchCase=\\\"'S002'\\\"></repeat-sentence>\\n\\n    <describe-image *ngSwitchCase=\\\"'S003'\\\"></describe-image>\\n\\n    <retell-lecture *ngSwitchCase=\\\"'S004'\\\"></retell-lecture>\\n\\n    <answer-short-question *ngSwitchCase=\\\"'S005'\\\"></answer-short-question>\\n\\n    <!-- WRITING -->\\n    <essay-writing *ngSwitchCase=\\\"'W001'\\\"></essay-writing>\\n\\n    <summarize-written-text *ngSwitchCase=\\\"'W002'\\\"></summarize-written-text>\\n</ng-container>\"","export default \"<form [formGroup]=\\\"dragForm\\\">\\n    <div class=\\\"container create-form\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Name</label-text>\\n                <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\" placeholder=\\\"Write Paragraph Name\\\" />\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"!isProgress\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Blank Word Paragraph</label-text>\\n                <warning-text>{{warmingTxt}}</warning-text>\\n                <editor (getData)=\\\"getMarkDown($event)\\\" [data]=\\\"editorData\\\" [index]=\\\"1\\\"></editor>\\n\\n                <div *ngIf=\\\"submitted && f.paragraph.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.paragraph.errors.required\\\">\\n                        You must fill blank word paragraph!\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Give Option</label-text>\\n                <warning-text>(SEPARETED BY “;” )</warning-text>\\n\\n                <input type=\\\"text\\\" formControlName=\\\"options\\\" class=\\\"form-control\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && f.options.errors }\\\" placeholder=\\\"Write Option\\\" />\\n            </div>\\n        </div>\\n        <button-footer>\\n            <cancel-btn>Cancel</cancel-btn>\\n            <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n        </button-footer>\\n    </div>\\n</form>\"","export default \"<form [formGroup]=\\\"dropForm\\\">\\n    <div class=\\\"container create-form\\\">\\n        <div class=\\\"row mb-2\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Name</label-text>\\n                <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\" placeholder=\\\"Write Paragraph Name\\\" />\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\" *ngIf=\\\"!isProgress\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Blank Word Paragraph</label-text>\\n                <warning-text>{{warmingTxt}}</warning-text>\\n                <editor (getData)=\\\"getMarkDown($event)\\\" [data]=\\\"editorData\\\" [index]=\\\"1\\\"></editor>\\n\\n                <div *ngIf=\\\"submitted && f.paragraph.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.paragraph.errors.required\\\">\\n                        You must fill blank word paragraph!\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <button-footer>\\n            <cancel-btn>Cancel</cancel-btn>\\n            <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n          </button-footer>\\n    </div>\\n</form>\\n\"","export default \"<form [formGroup]=\\\"mcqForm\\\">\\n    <div class=\\\"container create-form\\\">\\n        <div class=\\\"row\\\" *ngIf=\\\"!isProgress\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Question</label-text>\\n                <editor (getData)=\\\"getMarkDown($event)\\\" [data]=\\\"editorData\\\" [index]=\\\"1\\\"></editor>\\n                <div *ngIf=\\\"submitted && f.paragraph.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.paragraph.errors.required\\\">\\n                        You must fill question!\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Answer</label-text>\\n                <warning-text>{{warmingTxt}}</warning-text>\\n                <div class=\\\"d-flex\\\">\\n                    <input type=\\\"text\\\" formControlName=\\\"answers\\\" class=\\\"form-control\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.answers.errors }\\\" placeholder=\\\"Write Answer\\\" />\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Option</label-text>\\n                <warning-text>{{warmingTxt}}</warning-text>\\n                <div class=\\\"d-flex\\\">\\n                    <input type=\\\"text\\\" formControlName=\\\"options\\\" class=\\\"form-control\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.options.errors }\\\" placeholder=\\\"Write Options\\\" />\\n                </div>\\n            </div>\\n        </div>\\n\\n        <button-footer>\\n            <cancel-btn>Cancel</cancel-btn>\\n            <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n        </button-footer>\\n    </div>\\n</form>\\n\"","export default \"<form [formGroup]=\\\"mcqForm\\\">\\n    <div class=\\\"container create-form\\\">\\n        <div class=\\\"row\\\" *ngIf=\\\"!isProgress\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Question</label-text>\\n                <editor (getData)=\\\"getMarkDown($event)\\\" [data]=\\\"editorData\\\" [index]=\\\"1\\\"></editor>\\n                <div *ngIf=\\\"submitted && !editorData.innerHTML\\\" class=\\\"invalid-feedback\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && !editorData.innerHTML }\\\">\\n                    <div *ngIf=\\\"!editorData.innerHTML\\\" class=\\\"bold\\\">*Paragraph is required</div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Answer</label-text>\\n                <warning-text>{{warmingTxt}}</warning-text>\\n                <div class=\\\"d-flex\\\">\\n                    <input type=\\\"text\\\" formControlName=\\\"answers\\\" class=\\\"form-control\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.answers.errors }\\\" placeholder=\\\"Write Answer\\\" />\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Option</label-text>\\n                <warning-text>{{warmingTxt}}</warning-text>\\n                <div class=\\\"d-flex\\\">\\n                    <input type=\\\"text\\\" formControlName=\\\"options\\\" class=\\\"form-control\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.options.errors }\\\" placeholder=\\\"Write Options\\\" />\\n                </div>\\n            </div>\\n        </div>\\n\\n        <button-footer>\\n            <cancel-btn>Cancel</cancel-btn>\\n            <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n        </button-footer>\\n    </div>\\n</form>\\n\\n\"","export default \"<form [formGroup]=\\\"createReorderForm\\\">\\n    <div class=\\\"container create-form\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Paragraph Name</label-text>\\n                <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\" placeholder=\\\"Write Paragraph Name\\\" />\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\" *ngIf=\\\"!isProgress\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label-text>Paragraph Order</label-text>\\n                <warning-text>(GIVE ORIGINAL ORDER, SEPARTED BY “;”)</warning-text>\\n                <editor (getData)=\\\"getMarkDown($event)\\\" [data]=\\\"editorData\\\"  [index]=\\\"1\\\"></editor>\\n                <div *ngIf=\\\"submitted && !editorData.innerHTML\\\" class=\\\"invalid-feedback\\\"\\n                [ngClass]=\\\"{ 'is-invalid': submitted && !editorData.innerHTML }\\\">\\n                <div *ngIf=\\\"!editorData.innerHTML\\\" class=\\\"bold\\\">*Paragraph is required</div>\\n            </div>\\n            </div>\\n        </div>\\n        <button-footer>\\n            <cancel-btn>Cancel</cancel-btn>\\n            <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n        </button-footer>\\n    </div>\\n</form>\"","export default \"<form [formGroup]=\\\"createansShortForm\\\">\\n    <div class=\\\"container create-form\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Question Title</label-text>\\n          <div class=\\\"d-flex\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" placeholder=\\\"Write Question Title\\\" />\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"!isCreate\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <button class=\\\"btn btn-link demi-bold pl-0\\\" (click)=\\\"isCheckAudio=!isCheckAudio;\\\">\\n            {{isCheckAudio ? 'Hide' : 'View'}}\\n            Exiting Audio</button>\\n          <div class=\\\"audio-box\\\" [ngClass]=\\\"{ 'setheight': isCheckAudio == true}\\\">\\n            <audio-player [audioLink]=\\\"exitaudioLink\\\" *ngIf=\\\"isCheckAudio\\\" [isControl]=\\\"true\\\"></audio-player>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <file-uploader acceptFile='audio' formControlName=\\\"audioFile\\\"></file-uploader>\\n          <div *ngIf=\\\"submitted && f.audioFile.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.audioFile.errors.required\\\">\\n              You must upload audio file!\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <label-text>Duration</label-text>\\n          <warning-text>(DURATION FOR THE CLOCK /TIMER)</warning-text>\\n          <div class=\\\"d-flex\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"duration\\\" class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\" placeholder=\\\"Write Duration\\\" OnlyNumber />\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <label-text>Record Duration</label-text>\\n          <warning-text>(DURATION FOR THE CLOCK /TIMER)</warning-text>\\n          <div class=\\\"d-flex\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"recordDuration\\\" class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.recordDuration.errors }\\\" placeholder=\\\"Write Record Duration\\\"\\n              OnlyNumber />\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row divider\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Answer</label-text>\\n          <div class=\\\"d-flex\\\">\\n            <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" [ngClass]=\\\"{\\n              'is-invalid': submitted && f.answer.errors\\n            }\\\" formControlName=\\\"answer\\\" placeholder=\\\"Write Answer\\\"></textarea>\\n          </div>\\n        </div>\\n      </div>\\n      <button-footer>\\n        <cancel-btn>Cancel</cancel-btn>\\n        <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n      </button-footer>\\n    </div>\\n  </form>\\n\"","export default \"<form [formGroup]=\\\"createDescribeForm\\\">\\n\\n  <div class=\\\"container create-form\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12 mb-4\\\">\\n        <label-text>Question Title</label-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" placeholder=\\\"Write Question Title\\\" />\\n        </div>\\n      </div>\\n    </div>\\n    <!-- <div class=\\\"row\\\" *ngIf=\\\"!isCreate\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <button class=\\\"btn btn-link demi-bold pl-0\\\" (click)=\\\"isCheckImg=!isCheckImg;isImgLoad=true\\\">\\n            {{isCheckImg ? 'Hide' : 'View'}}\\n            Exiting Image</button>\\n          <div *ngIf=\\\"isCheckImg\\\" class=\\\"img-box\\\"\\n            [ngClass]=\\\"{ 'setWidth': isImgLoad == false ,'removeWidth': isImgLoad == true}\\\">\\n            <img src=\\\"{{exitimgUrl}}\\\" (load)=\\\"onLoad()\\\" [hidden]=\\\"isImgLoad\\\">\\n            <div [hidden]=\\\"!isImgLoad && isCheckImg\\\" class=\\\"img-loading\\\">\\n              <div class=\\\"loader mb-3\\\"></div>\\n              Image Loading.....\\n            </div>\\n          </div>\\n        </div>\\n      </div> -->\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <file-uploader acceptFile='image' formControlName=\\\"imageFile\\\"></file-uploader>\\n        <div *ngIf=\\\"submitted && f.imageFile.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.imageFile.errors.required\\\">\\n            You must upload image!\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <label-text>Duration</label-text>\\n        <warning-text>(DURATION FOR THE CLOCK /TIMER)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"duration\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\" placeholder=\\\"Write Duration\\\" OnlyNumber />\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <label-text>Record Duration</label-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"recordDuration\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.recordDuration.errors }\\\" placeholder=\\\"Write Record Duration\\\"\\n            OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Number Of Keyword Match</label-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"keywordMatch\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.keywordMatch.errors }\\\" placeholder=\\\"Write Number Of Keyword Match\\\"\\n            OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Keywords</label-text>\\n        <warning-text>(PLEASE SEPARATE USING \\\";\\\")</warning-text>\\n        <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" formControlName=\\\"keywords\\\" [ngClass]=\\\"{\\n              'is-invalid': submitted && f.keywords.errors\\n            }\\\" placeholder=\\\"Write Keywords\\\"></textarea>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Fluency Grace</label-text>\\n        <warning-text>(GRACE NUMBER FOR FLUENCY)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"fluentGrade\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.fluentGrade.errors }\\\" placeholder=\\\"Write Fluency Grace\\\" OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Pronounciation Grace</label-text>\\n        <warning-text>(GRACE NUMBER FOR PRONUNCIATION)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"pronounciationGrade\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.pronounciationGrade.errors }\\\"\\n            placeholder=\\\"Write Pronunciation Grace\\\" OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12 mb-4\\\">\\n        <word-checker [wordGroup]='createDescribeForm' [submitted]=\\\"submitted\\\" [wordsArray]=\\\"words\\\"\\n          [isCreate]=\\\"isCreate\\\"></word-checker>\\n      </div>\\n    </div>\\n    <button-footer>\\n      <cancel-btn>Cancel</cancel-btn>\\n      <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n    </button-footer>\\n  </div>\\n</form>\"","export default \"<form [formGroup]=\\\"createReadAloudForm\\\">\\n    <div class=\\\"container create-form\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <label-text>Question Title</label-text>\\n          <div class=\\\"d-flex\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" placeholder=\\\"Write Question title\\\" />\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row divider\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <label-text>Question Paragraph</label-text>\\n          <warning-text>(WRITE WHAT YOU WANT THIS STUDENT TO SPEAK)</warning-text>\\n          <textarea class=\\\"form-control\\\" cols=\\\"30\\\" rows=\\\"4\\\" formControlName=\\\"paragraph\\\"\\n            [ngClass]=\\\"{\\n              'is-invalid': submitted && f.paragraph.errors\\n            }\\\" placeholder=\\\"Write Question Paragraph\\\"></textarea>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row divider\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <label-text>Count Max</label-text>\\n          <warning-text>(COUNT THAT WILL BE CHECKED TO GIVE MAX MARK)</warning-text>\\n          <div class=\\\"d-flex\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"countMax\\\" class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.countMax.errors }\\\" placeholder=\\\"Write Count Max\\\" OnlyNumber />\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row divider\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <label-text>Duration</label-text>\\n          <warning-text>(DURATION FOR THE CLOCK/TIMER)</warning-text>\\n          <div class=\\\"d-flex\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"duration\\\" class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\" placeholder=\\\"Write Duration\\\" OnlyNumber />\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row divider\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <label-text>Record Duration</label-text>\\n          <warning-text>(Record DURATION FOR THE CLOCK/TIMER)</warning-text>\\n          <div class=\\\"d-flex\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"recordDuration\\\" class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.recordDuration.errors }\\\" placeholder=\\\"Write Record Duration\\\"\\n              OnlyNumber />\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row divider\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <label-text>Fluency Grace</label-text>\\n          <warning-text>(GRACE NUMBER FOR FLUENCY)</warning-text>\\n          <div class=\\\"d-flex\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"fluencyGrace\\\" class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.fluencyGrace.errors }\\\" placeholder=\\\"Write Fluency Grace\\\"\\n              OnlyNumber/>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row divider\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <label-text>Pronunciation Grace</label-text>\\n          <warning-text>(GRACE NUMBER FOR PRONUNCIATION)</warning-text>\\n          <div class=\\\"d-flex\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"pronunciationGrace\\\" class=\\\"form-control\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.pronunciationGrace.errors }\\\"\\n              placeholder=\\\"Write Pronunciation Grace\\\" OnlyNumber />\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row divider\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <word-checker [wordGroup]='createReadAloudForm' [submitted]=\\\"submitted\\\" [wordsArray]=\\\"words\\\"></word-checker>\\n        </div>\\n      </div>\\n      <button-footer>\\n        <cancel-btn>Cancel</cancel-btn>\\n        <submit-btn (onClick)=\\\"onSave()\\\">Save</submit-btn>\\n      </button-footer>\\n    </div>\\n  </form>\\n\"","export default \"<form [formGroup]=\\\"createRepeatSentenceForm\\\">\\n  <div class=\\\"container create-form\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Question Title</label-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" placeholder=\\\"Write Question title\\\" />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <file-uploader acceptFile='audio' formControlName=\\\"audioFile\\\"></file-uploader>\\n        <div *ngIf=\\\"submitted && f.audioFile.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.audioFile.errors.required\\\">\\n            You must upload audio file\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Question Paragraph</label-text>\\n        <warning-text>(WRITE WHAT YOU WANT THIS STUDENT TO SPEAK)</warning-text>\\n        <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" formControlName=\\\"paragraph\\\"\\n          [ngClass]=\\\"{\\n              'is-invalid': submitted && f.paragraph.errors\\n            }\\\" placeholder=\\\"Write Question Paragraph\\\"></textarea>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Count Max</label-text>\\n        <warning-text>(COUNT THAT WILL BE CHECKED TO GIVE MAX MARK)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"countMax\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.countMax.errors }\\\" placeholder=\\\"Write Count Max\\\" oninput=\\\"this.value = this.value.replace(/[^0-9.]/g,\\n            '').replace(/(\\\\..*)\\\\./g, '$1');\\\" />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Duration</label-text>\\n        <warning-text>(DURATION FOR THE CLOCK/TIMER)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"duration\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\" placeholder=\\\"Write Duration\\\" OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Record Duration</label-text>\\n        <warning-text>(Record DURATION FOR THE CLOCK/TIMER)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"recordDuration\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.recordDuration.errors }\\\" placeholder=\\\"Write Record Duration\\\"\\n            OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Fluency Grace</label-text>\\n        <warning-text>(GRACE NUMBER FOR FLUENCY)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"fluencyGrace\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.fluencyGrace.errors }\\\" placeholder=\\\"Write Fluency Grace\\\" OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Pronunciation Grace</label-text>\\n        <warning-text>(GRACE NUMBER FOR PRONUNCIATION)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"pronunciationGrace\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.pronunciationGrace.errors }\\\"\\n            placeholder=\\\"Write Pronunciation Grace\\\" OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <word-checker [wordGroup]='createRepeatSentenceForm' [submitted]=\\\"submitted\\\" [wordsArray]=\\\"words\\\"\\n          [isCreate]=\\\"isCreate\\\"></word-checker>\\n      </div>\\n    </div>\\n\\n    <button-footer>\\n      <cancel-btn>Cancel</cancel-btn>\\n      <submit-btn (onClick)=\\\"onSave()\\\">Save</submit-btn>\\n    </button-footer>\\n  </div>\\n</form>\"","export default \"<form [formGroup]=\\\"createRetellLectureForm\\\">\\n  <div class=\\\"container create-form\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Question Title</label-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\"\\n            [class.is-invalid]=\\\"submitted && f.title.errors \\\" placeholder=\\\"Write Question title\\\" />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <file-uploader acceptFile='audio' formControlName=\\\"audioFile\\\"></file-uploader>\\n        <div *ngIf=\\\"submitted && f.audioFile.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.audioFile.errors.required\\\">\\n            You must upload audio file\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Keywords</label-text>\\n        <warning-text>(WRITE KEYWORDS HERE, SEPARATE USING \\\";\\\")</warning-text>\\n        <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" formControlName=\\\"keywords\\\" [ngClass]=\\\"{\\n              'is-invalid': submitted && f.keywords.errors\\n            }\\\" placeholder=\\\"Write Keywords\\\"></textarea>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Count Max</label-text>\\n        <warning-text>(COUNT THAT WILL BE CHECKED TO GIVE MAX MARK)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"countMax\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.countMax.errors }\\\" placeholder=\\\"Write Count Max\\\" OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12 mb-2\\\">\\n        <label-text>Duration</label-text>\\n        <warning-text>(DURATION FOR THE CLOCK/TIMER)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"duration\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\" placeholder=\\\"Write Duration\\\" OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Record Duration</label-text>\\n        <warning-text>(Record DURATION FOR THE CLOCK/TIMER)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"recordDuration\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.recordDuration.errors }\\\" placeholder=\\\"Write Record Duration\\\"\\n            OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Fluency Grace</label-text>\\n        <warning-text>(GRACE NUMBER FOR FLUENCY)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"fluencyGrace\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.fluencyGrace.errors }\\\" placeholder=\\\"Write Fluency Grace\\\"\\n            OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Pronunciation Grace</label-text>\\n        <warning-text>(GRACE NUMBER FOR PRONUNCIATION)</warning-text>\\n        <div class=\\\"d-flex\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"pronunciationGrace\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.pronunciationGrace.errors }\\\"\\n            placeholder=\\\"Write Pronunciation Grace\\\" OnlyNumber />\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label-text>Words To Check</label-text>\\n        <warning-text>(SEPARETED BY “;” )</warning-text>\\n        <textarea formControlName=\\\"words\\\" class=\\\"form-control\\\" rows=\\\"4\\\"\\n          [ngClass]=\\\"{ 'is-invalid': submitted && f.words.errors }\\\" placeholder=\\\"Write word to check\\\"></textarea>\\n      </div>\\n    </div>\\n\\n    <button-footer>\\n      <cancel-btn>Cancel</cancel-btn>\\n      <submit-btn (onClick)=\\\"onSave()\\\">Save</submit-btn>\\n    </button-footer>\\n\\n  </div>\\n</form>\"","export default \"<div>\\n  <label-text>Words To Check</label-text>\\n  <dialog-box *ngIf=\\\"isDialog\\\" [dialogEntry]=\\\"dialog\\\" (onconfirm)=\\\"onSubmit($event)\\\"></dialog-box>\\n  <form [formGroup]=\\\"wordGroup\\\">\\n    <table>\\n      <thead>\\n        <td>\\n          <label class='demi-bold h4-m'>Word Name</label>    \\n        </td>\\n        <td class=\\\"hide\\\"></td>\\n      </thead>    \\n\\n      <tbody>\\n        <ng-container formArrayName=\\\"words\\\" *ngFor=\\\"let group of getFormControls.controls; let i=index\\\">\\n          <tr [formGroupName]=\\\"i\\\">\\n            <td>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                placeholder=\\\"Write Word Name\\\"\\n                formControlName=\\\"word\\\"\\n                [ngClass]=\\\"{ 'is-invalid': submitted && getFormControls.controls[i].get('word').errors?.required }\\\"\\n              />\\n            </td>\\n            <td *ngIf=\\\"group.get('isDeleteAble').value\\\" class=\\\"del\\\">\\n              <a\\n                class=\\\"btn\\\"\\n                (click)=\\\"onDelete(i)\\\"\\n              ><i class=\\\"del-icon fa fa-trash\\\"></i></a>\\n            </td>\\n          </tr>\\n        </ng-container>\\n      </tbody>\\n    </table>\\n\\n    <div class=\\\"add\\\">\\n      <a\\n        class=\\\"btn\\\"\\n        (click)=\\\"onAdd()\\\"\\n      ><i class=\\\"fa fa-plus\\\"></i> Add</a>\\n    </div>\\n\\n  </form>\\n\\n\\n</div>\\n\"","export default \"<form [formGroup]=\\\"createEssayForm\\\">\\n    <div class=\\\"container create-form\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Questions</label-text>\\n          <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\" placeholder=\\\"Write Questions\\\" />\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\" formGroupName=\\\"answer\\\">\\n          <group-title>Essay</group-title>\\n          <label-text>Content Keyword</label-text>\\n          <warning-text>(THIS WILL LIMIT THE MAXIMUM NUMBER OF WORDS)</warning-text>\\n          <textarea class=\\\"form-control input-rectangle reverse;\\\" cols=\\\"30\\\" rows=\\\"4\\\" [ngClass]=\\\"{\\n              'is-invalid':\\n                submitted && f.answer.controls.contentKeywords.errors\\n            }\\\" formControlName=\\\"contentKeywords\\\" placeholder=\\\"Write Content Keyword\\\"></textarea>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" formGroupName=\\\"answer\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <label-text>Introduction Word Limit</label-text>\\n          <warning-text>(THIS WILL LIMIT THE MAXIMUM NUMBER OF WORDS)</warning-text>\\n          <input type=\\\"text\\\" formControlName=\\\"maxWordLimit\\\" class=\\\"form-control\\\" placeholder=\\\"0\\\"\\n          OnlyNumber [ngClass]=\\\"{\\n              'is-invalid':\\n                submitted && f.answer.controls.maxWordLimit.errors\\n            }\\\" />\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <label-text>Maximum Keyword match</label-text>\\n          <warning-text>(TO GET FULL MARKS)</warning-text>\\n          <input type=\\\"text\\\" formControlName=\\\"maxKeyword\\\" class=\\\"form-control\\\" placeholder=\\\"0\\\"\\n            [ngClass]=\\\"{\\n              'is-invalid':\\n                submitted && f.answer.controls.maxKeyword.errors\\n            }\\\" OnlyNumber />\\n        </div>\\n      </div>\\n  \\n\\n      <div class=\\\"row\\\" *ngIf=\\\"!isProgress\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Advise Essay Content</label-text>\\n          <warning-text>(SAMPLE ESSAY TO GET HIGHEST MARKS)</warning-text>\\n          <editor (getData)=\\\"getMarkDown($event)\\\" [data]=\\\"editorData\\\" [index]=\\\"1\\\"></editor>\\n          <div *ngIf=\\\"submitted && f.adviseContent.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.adviseContent.errors.required\\\">\\n              You must fill advise essay content!\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <button-footer>\\n        <cancel-btn>Cancel</cancel-btn>\\n        <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n    </button-footer>\\n    </div>\\n  </form>\\n\"","export default \"<form [formGroup]=\\\"createSummary\\\">\\n    <div class=\\\"container create-form\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Summary Name</label-text>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"name\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\"\\n            placeholder=\\\"Write Summary Name\\\"\\n          />\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"divider\\\"></div>\\n          <label-text>Summmary Type</label-text>\\n          <select\\n            class=\\\"select-box form-control\\\"\\n            formControlName=\\\"type\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.type.errors }\\\"\\n          >\\n            <option value=\\\"\\\" disabled selected hidden\\n              >Select Summary Type</option\\n            >\\n            <option *ngFor=\\\"let type of typeList\\\" [ngValue]=\\\"type._id\\\">\\n              {{ type.name }}\\n            </option>\\n          </select>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"!isProgress\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Summary Question</label-text>\\n          <editor\\n            (getData)=\\\"getMarkDownForSummaryQuestion($event)\\\"\\n            [data]=\\\"editorDataQestion\\\"\\n            [index]=\\\"1\\\"\\n          ></editor>\\n          <div *ngIf=\\\"submitted && f.question.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.question.errors.required\\\">\\n              You must fill summary question!\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <label-text>Content Keyword</label-text>\\n          <warning-text>(SEPARATE EACH WORD USING SEMICOLON (;))</warning-text>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            placeholder=\\\"Write Content Keyword...\\\"\\n            formControlName=\\\"contentKeywords\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.contentKeywords.errors }\\\"\\n          />\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <label-text>Vocabulary Word</label-text>\\n          <warning-text>(SEPARATE EACH WORD USING SEMICOLON (;))</warning-text>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            placeholder=\\\"Write Vocabulary Word...\\\"\\n            formControlName=\\\"vocabularyWords\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.vocabularyWords.errors }\\\"\\n          />\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <label-text>Content Keyword Limit</label-text>\\n          <warning-text>(LIMIT TO GET MAXIMUN SCORE)</warning-text>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            placeholder=\\\"0\\\"\\n            oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\"\\n            formControlName=\\\"maxContentKeywords\\\"\\n            [ngClass]=\\\"{\\n              'is-invalid': submitted && f.maxContentKeywords.errors\\n            }\\\"\\n          />\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <label-text>Maximum Word Limit</label-text>\\n          <warning-text>(NUMBER OF WORDS STUDENT CAN WRITE)</warning-text>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            placeholder=\\\"0\\\"\\n            oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\"\\n            formControlName=\\\"maxWordLimit\\\"\\n            [ngClass]=\\\"{\\n              'is-invalid': submitted && f.maxWordLimit.errors\\n            }\\\"\\n          />\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <label-text>Vocabulary Keyword Limit</label-text>\\n          <warning-text>(LIMIT TO GET MAXIMUN SCORE)</warning-text>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            placeholder=\\\"0\\\"\\n            oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\"\\n            formControlName=\\\"maxVocabularyWords\\\"\\n            [ngClass]=\\\"{\\n              'is-invalid': submitted && f.maxVocabularyWords.errors\\n            }\\\"\\n          />\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <label-text>Unwanted Content Keywords</label-text>\\n          <warning-text>(SEPARATE EACH WORD USING SEMICOLON (;))</warning-text>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            placeholder=\\\"0\\\"\\n            formControlName=\\\"unwantedContentKeywords\\\"\\n            [ngClass]=\\\"{\\n              'is-invalid': submitted && f.unwantedContentKeywords.errors\\n            }\\\"\\n          />\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"!isProgress\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <label-text>Advise Summary Content</label-text>\\n          <warning-text>(SAMPLE SUMMARY TO GET HIGHEST MARK)</warning-text>\\n          <editor\\n            (getData)=\\\"getMarkDownForAdviseSummary($event)\\\"\\n            [data]=\\\"editorDataAdvise\\\"\\n            [index]=\\\"2\\\"\\n          ></editor>\\n          <div *ngIf=\\\"submitted && f.adviseContent.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.adviseContent.errors.required\\\">\\n              You must fill advise summary content!\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <button-footer>\\n        <cancel-btn>Cancel</cancel-btn>\\n        <submit-btn (onClick)=\\\"onCreate()\\\">Save</submit-btn>\\n    </button-footer>\\n    </div>\\n  </form>\\n\"","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorsService {\n\n  getClientErrorMessage(error: Error): string {\n    return error.message ?\n      error.message :\n      error.toString();\n  }\n\n  getServerErrorMessage(error: HttpErrorResponse): string {\n    return navigator.onLine ?\n      error.message :\n      'No Internet Connection';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { LoaderState } from \"./loader\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService  {\n\n  private loaderSubject = new Subject<LoaderState>();\n  loaderState = this.loaderSubject.asObservable();\n  constructor() { }\n  show() {\n    this.loaderSubject.next(<LoaderState>{ show: true });\n  }\n  hide() {\n    this.loaderSubject.next(<LoaderState>{ show: false });\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggingService {\n\n  logError(message: string, stack: string) {\n    // Send errors to server here\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material/snack-bar';\nimport { Router } from \"@angular/router\";\nimport { Location } from \"@angular/common\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  horizontalPosition: MatSnackBarHorizontalPosition = 'end';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n\n  constructor(\n    public snackBar: MatSnackBar,\n    private zone: NgZone,\n    private _router:Router,\n    private _loc:Location) { }\n\n  showSuccess(message: string): void {\n    // Had an issue with the snackbar being ran outside of angular's zone.\n    this.zone.run(() => {\n      this.snackBar.open(message);\n    });\n  }\n\n  showError(message: string): void {\n    this.zone.run(() => {\n      // The second parameter is the text in the button. \n      // In the third, we send in the css class for the snack bar.\n      this.snackBar.open(message, 'X', {\n        panelClass: ['red-snackbar'],\n        duration: 5000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition,\n      });\n      // this._loc.back();\n      // this._router.navigateByUrl(\"404\")\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL2xpc3RlbmluZy9kaWN0YXRpb24vZGljdGF0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { SaveService, CommonService } from '@app/core/http/serviceIndex';\nimport { Dictation } from '@app/shared/models/ListeningModel';\n\n\n@Component({\n  selector: 'dictation',\n  templateUrl: './dictation.component.html',\n  styleUrls: ['./dictation.component.css']\n})\nexport class DictationComponent implements OnInit {\n\n  createDictionForm: FormGroup = this.formBuilder.group({\n    title: [\"\", [Validators.required]],\n    duration: [0, [Validators.required]],\n    answer: [\"\", [Validators.required]],\n    audioFile:[null,Validators.required]\n  });\n\n  private questionCode: string;\n  private questionId: string;\n\n  public audioFile: File;\n  public answerWarningText: string =\n    '(WRITE THE SENTENCE EXACTLY YOU WANT FROM THE STUDENT)';\n  public isErrText: string = 'You must upload audio file';\n\n  private subscription: Subscription;\n  // boolean\n  public submitted: boolean = false;\n  isToast: boolean = false;\n\n  constructor(\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService: SaveService,\n  ) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n  }\n\n\n  getDataEditForm(data: Dictation) {\n    this.questionId = data.questionId;\n    this.createDictionForm = this.formBuilder.group({\n      title: [data.title, [Validators.required]],\n      duration: [data.duration, [Validators.required]],\n      answer: [data.answer, [Validators.required]],\n      audioFile:[null]\n    });\n\n  }\n\n  get f() {\n    return this.createDictionForm.controls;\n  }\n\n  getAudioFile(e) {\n    this.audioFile = e;\n  }\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  onCreate() {\n    this.submitted = true;\n    if (this.createDictionForm.invalid) {\n      return;\n    } else {\n      this.subscription = this._createService.onSaveDictation(this.createDictionForm.value, this.questionCode, this.questionId).subscribe(\n        () => {\n          this.goBack();\n        });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL2xpc3RlbmluZy9maWIvZmliLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/serviceIndex';\nimport { FIB } from '@app/shared/models/ListeningModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'fib',\n  templateUrl: './fib.component.html',\n  styleUrls: ['./fib.component.css']\n})\nexport class FibComponent implements OnInit {\n\n  private questionCode: string;\n  private questionId: string;\n\n  public creatFIBForm: FormGroup = this.formBuilder.group({\n    title: [\"\", [Validators.required]],\n    duration: [\"\", [Validators.required]],\n    paragraph: [\"\", [Validators.required]],\n    audioFile: [null, [Validators.required]],\n  });\n\n  public isErrText: string = \"You must upload audio file\";\n\n  // boolean\n  public submitted: boolean = false;\n  isToast: boolean = false;\n  public answerWarningText: string =\n    '(GIVE ANSWER IN {} EX; \"THIS IS A {PARAGRAPH}.IT HAS .. \")';\n\n  private subscription: Subscription;\n\n  constructor(\n    private _createService: SaveService,\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n  ) { }\n\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n\n  }\n\n  getDataEditForm(data: FIB) {\n    this.questionId = data.questionId;\n    this.creatFIBForm = this.formBuilder.group({\n      title: [data.title, [Validators.required]],\n      duration: [data.duration, [Validators.required]],\n      paragraph: [data.paragraph, [Validators.required]],\n      audioFile: [null],\n    });\n\n  }\n\n  get f() {\n    return this.creatFIBForm.controls;\n  }\n\n\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  onCreate() {\n    this.submitted = true;\n    if (this.creatFIBForm.invalid) {\n      return;\n    } else {\n\n      this._createService.onSaveFIB(this.creatFIBForm.value, this.questionCode, this.questionId).subscribe(\n        (res) => {\n          this.goBack();\n        });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL2xpc3RlbmluZy9oaWdobGlnaHQtY29ycmVjdC1zdW1tYXJ5L2hpZ2hsaWdodC1jb3JyZWN0LXN1bW1hcnkuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/serviceIndex';\nimport { HighlightCorrectSummary } from '@app/shared/models/ListeningModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'highlight-correct-summary',\n  templateUrl: './highlight-correct-summary.component.html',\n  styleUrls: ['./highlight-correct-summary.component.css']\n})\nexport class HighlightCorrectSummaryComponent implements OnInit {\n  private questionCode: string;\n  private questionId: string;\n  // boolean\n  public submitted: boolean = false;\n  public isToast: boolean = false\n\n  public createCorrectSummaryForm: FormGroup = this.formBuilder.group(\n    {\n      title: [\"\", [Validators.required]],\n      duration: [\"\", [Validators.required]],\n      question: [\"\", [Validators.required]],\n      answer: [\"\", [Validators.required]],\n      options: [\"\", [Validators.required]],\n      audioFile: [null, [Validators.required]]\n    }\n  );\n\n  // any\n  public answerWarningText: String = \"(GIVE INCORRECT WORDS IN {} IN EX;\\\"THIS IS A {WORDPARAGRAPH}.IT HAS...\\\"\";\n  public isErrText: string = 'You must upload audio file!';\n  private subscription: Subscription;\n\n  constructor(private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService: SaveService) {\n\n  }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n\n  }\n\n  getDataEditForm(data: HighlightCorrectSummary) {\n    this.questionId = data.questionId;\n    this.createCorrectSummaryForm = this.formBuilder.group(\n      {\n        title: [data.title, [Validators.required]],\n        duration: [data.duration, [Validators.required]],\n        question: [data.question, [Validators.required]],\n        answer: [data.answer, [Validators.required]],\n        options: [data.options, [Validators.required]],\n        audioFile: [null]\n      }\n    );\n\n  }\n\n  get f() {\n    return this.createCorrectSummaryForm.controls;\n  }\n  \n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  onCreate() {\n    this.submitted = true;\n    if (this.createCorrectSummaryForm.invalid) {\n      return\n    }\n    this.subscription = this._createService.onSaveHighlightCorrectSummary(\n      this.createCorrectSummaryForm.value, this.questionCode, this.questionId\n    ).subscribe(\n      () => {\n        this.goBack();\n      })\n\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL2xpc3RlbmluZy9oaWdobGlnaHQtaW5jb3JyZWN0LXdvcmRzL2hpZ2hsaWdodC1pbmNvcnJlY3Qtd29yZHMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/serviceIndex';\nimport { HighlightIncorrectWord } from '@app/shared/models/ListeningModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'highlight-incorrect-words',\n  templateUrl: './highlight-incorrect-words.component.html',\n  styleUrls: ['./highlight-incorrect-words.component.css']\n})\nexport class HighlightIncorrectWordsComponent implements OnInit {\n  private questionCode: string;\n  private questionId:string;\n\n  // boolean\n  public submitted: boolean = false;\n public isToast: boolean = false;\n\n  public createIncorrectWordForm: FormGroup = this.formBuilder.group(\n    {\n      title: [\"\", [Validators.required]],\n      duration: [\"\", [Validators.required]],\n      paragraph: [\"\", [Validators.required]],\n      audioFile: [null, [Validators.required]],\n    }\n  );\n\n  // any\n  public answerWarningText: string = \"(GIVE INCORRECT WORDS IN {} IN EX;\\\"THIS IS A {WORDPARAGRAPH}.IT HAS...\\\")\";\n  isErrText: string = 'You must upload audio file!';\n  public subscription: Subscription;\n\n  constructor(private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder, private _createService: SaveService) {\n\n  }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n\n  }\n\n  getDataEditForm(data: HighlightIncorrectWord) {\n    this.questionId = data.questionId;\n    this.createIncorrectWordForm =this.formBuilder.group(\n      {\n        title: [data.title, [Validators.required]],\n        duration: [data.duration, [Validators.required]],\n        paragraph: [data.paragraph, [Validators.required]],\n        audioFile: [null],\n      }\n    );\n\n  }\n\n  get f() {\n    return this.createIncorrectWordForm.controls;\n  }\n\n\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  onCreate() {\n    this.submitted = true;\n    if (this.createIncorrectWordForm.invalid) {\n      return\n    }else{\n      this.subscription == this._createService.onSaveHighlightIncorrectWord(this.createIncorrectWordForm.value, this.questionCode,this.questionId).subscribe(\n        (res) => {\n          this.goBack();\n        })\n    }\n \n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL2xpc3RlbmluZy9tY3EtbXVsdGlwbGUvbWNxLW11bHRpcGxlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/serviceIndex';\nimport { MCQ } from '@app/shared/models/ListeningModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'mcq-multiple-listening',\n  templateUrl: './mcq-multiple.component.html',\n  styleUrls: ['./mcq-multiple.component.css']\n})\nexport class McqMultipleListeningComponent implements OnInit {\n  private questionId:string;\n\n  public creatMCQForm: FormGroup = this.formBuilder.group({\n    title: [\"\", [Validators.required]],\n    duration: [\"\", [Validators.required]],\n    question: [\"\", [Validators.required]],\n    answers: [\"\", [Validators.required]],\n    options: [\"\", [Validators.required]],\n    audioFile:[null,Validators.required]\n  });\n\n  public questionCode: string;\n  \n  // boolean\n  public submitted: boolean = false;\n\n  isToast: boolean = false\n\n  private subscription: Subscription;\n\n  constructor(\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService: SaveService\n  ) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n\n  }\n\n\n  getDataEditForm(data: MCQ) {\n    this.questionId = data.questionId;\n    this.creatMCQForm= this.formBuilder.group({\n      title: [data.title, [Validators.required]],\n      duration: [data.duration, [Validators.required]],\n      question: [data.question, [Validators.required]],\n      answers: [data.answers, [Validators.required]],\n      options: [data.options, [Validators.required]],\n      audioFile:[null]\n    });\n\n  }\n\n\n\n\n  onCreate() {\n    this.submitted = true;\n    if (this.creatMCQForm.invalid) {\n      return;\n    } else {\n      this.subscription = this._createService.onSaveMCQMultiple(this.creatMCQForm.value, this.questionCode,this.questionId).subscribe(\n        () => {\n          this.goBack();\n        });\n    }\n  }\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  get f() {\n    return this.creatMCQForm.controls;\n  }\n\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL2xpc3RlbmluZy9tY3Etc2luZ2xlL21jcS1zaW5nbGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {  SaveService } from '@app/core/http/serviceIndex';\nimport { MCQ } from '@app/shared/models/ListeningModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'mcq-single-listening',\n  templateUrl: './mcq-single.component.html',\n  styleUrls: ['./mcq-single.component.css']\n})\n\nexport class McqSingleListeningComponent implements OnInit {\n  private questionCode: string;\n  private questionId:string;\n\n  public creatMCQForm: FormGroup = this.formBuilder.group({\n    title: [\"\", [Validators.required]],\n    duration: [\"\", [Validators.required]],\n    question: [\"\", [Validators.required]],\n    answers: [\"\", [Validators.required]],\n    options: [\"\", [Validators.required]],\n    audioFile:[null,Validators.required]\n  });\n\n\n  // boolean\n  public submitted: boolean = false;\n\n  public subscription: Subscription;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private _activeRoute: ActivatedRoute,\n    private _createService: SaveService\n  ) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n\n  }\n\n  getDataEditForm(data: MCQ) {\n    this.questionId = data.questionId;\n    this.creatMCQForm= this.formBuilder.group({\n      title: [data.title, [Validators.required]],\n      duration: [data.duration, [Validators.required]],\n      question: [data.question, [Validators.required]],\n      answers: [data.answers, [Validators.required]],\n      options: [data.options, [Validators.required]],\n      audioFile:[null]\n    });\n\n  }\n\n\n  onCreate() {\n    this.submitted = true;\n\n    if (this.creatMCQForm.invalid) {\n      return;\n    } else {\n      this.subscription = this._createService.onSaveMCQSingle(this.creatMCQForm.value, this.questionCode,this.questionId).subscribe(\n        () => {\n          this.goBack();\n        });\n    }\n  }\n\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  get f() {\n    return this.creatMCQForm.controls;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL2xpc3RlbmluZy9zZWxlY3QtbWlzc2luZy13b3Jkcy9zZWxlY3QtbWlzc2luZy13b3Jkcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/save.service';\nimport { SelectMissingWords } from '@app/shared/models/ListeningModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'select-missing-words',\n  templateUrl: './select-missing-words.component.html',\n  styleUrls: ['./select-missing-words.component.css']\n})\nexport class SelectMissingWordsComponent implements OnInit {\n  private questionCode: string;\n  private questionId:string;\n\n  public creatMissingWordForm: FormGroup = this.formBuilder.group({\n    title: [\"\", [Validators.required]],\n    duration: [\"\", [Validators.required]],\n    question: [\"\", [Validators.required]],\n    answer: [\"\", [Validators.required]],\n    option: [\"\", [Validators.required]],\n    audioFile:[null,Validators.required]\n  });\n\n  isErrText: string = '';\n\n  // boolean\n  public submitted: boolean = false;\n  isToast: boolean = false;\n\n  public subscription: Subscription;\n\n  constructor(\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService: SaveService\n  ) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n\n  }\n\n  getDataEditForm(data:SelectMissingWords){\n    this.questionId = data.questionId;\n\n    this.creatMissingWordForm=this.formBuilder.group({\n      title: [data.title, [Validators.required]],\n      duration: [data.duration, [Validators.required]],\n      question: [data.question, [Validators.required]],\n      answer: [data.answer, [Validators.required]],\n      option: [data.options, [Validators.required]],\n      audioFile:[null]\n    });\n  }\n  get f() {\n    return this.creatMissingWordForm.controls;\n  }\n\n\n\n  goBack() {\n   this._createService.goBackPrev();\n  }\n\n\n\n  onCreate() {\n    this.submitted = true;\n    if (this.creatMissingWordForm.invalid) {\n      return;\n    } else {\n      this.subscription = this._createService.OnSaveMissingWords(this.creatMissingWordForm.value, this.questionCode,this.questionId).subscribe(\n        (res) => {\n          this.goBack();\n        });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL2xpc3RlbmluZy9zdW1tYXJ5LXNwb2tlbi10ZXh0L3N1bW1hcnktc3Bva2VuLXRleHQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/save.service';\nimport { SummaryListening } from '@app/shared/models/ListeningModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'summary-spoken-text',\n  templateUrl: './summary-spoken-text.component.html',\n  styleUrls: ['./summary-spoken-text.component.css']\n})\nexport class SummarySpokenTextComponent implements OnInit {\n\n  createSummary: FormGroup = this.formBuilder.group({\n    summaryName: [\"\", [Validators.required]],\n    summaryType: [\"\", [Validators.required]],\n    contentKeyword: [\"\", [Validators.required]],\n    vocabularyWord: [\"\", [Validators.required]],\n    contentKeywordLimit: [\"\", [Validators.required]],\n    maxWordLimit: [\"\", [Validators.required]],\n    audioFile: [null, Validators.required]\n  });\n\n  // any\n  isErrText: String = null;\n  public summaryId: any;\n  public editorDataQestion: any = \"\";\n  public editorDataAdvise: any = \"\";\n  // boolean\n  public isCreate: boolean = false;\n  public submitted: boolean = false;\n  public isProgress: boolean = false;\n  public isTouchQuestion: boolean = false;\n  public isTouchAdvise: boolean = false;\n  isToast: boolean = false;\n  public subscription: Subscription;\n  public questionCode: string;\n\n  public typeList: any = [\n    {\n      _id: \"SPOKEN\",\n      name: \"SPOKEN\",\n    },\n  ];\n  constructor(\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private dataService: SaveService,\n  ) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n  }\n\n  get f() {\n    return this.createSummary.controls;\n  }\n\n  getMarkDownForSummaryQuestion(e) {\n    this.editorDataQestion = e;\n    this.isTouchQuestion = true;\n  }\n  getMarkDownForAdviseSummary(e) {\n    this.editorDataAdvise = e;\n    this.isTouchAdvise = true;\n  }\n  onCreate() {\n    this.submitted = true;\n    if (this.createSummary.invalid) {\n      this.isProgress = false;\n      return;\n    } else {\n\n      let summaryObj = new SummaryListening();\n      summaryObj.name = this.createSummary.get(\"summaryName\").value;\n      summaryObj.type = this.createSummary.get(\"summaryType\").value;\n      summaryObj.question = this.editorDataQestion\n        ? this.editorDataQestion.innerHTML\n        : \"\";\n      summaryObj.contentKeywords = this.createSummary.get(\n        \"contentKeyword\"\n      ).value;\n      summaryObj.vocabularyWords = this.createSummary.get(\n        \"vocabularyWord\"\n      ).value;\n      summaryObj.maxContentKeywords = Number(\n        this.createSummary.get(\"contentKeywordLimit\").value\n      );\n      summaryObj.maxWordLimit = Number(\n        this.createSummary.get(\"maxWordLimit\").value\n      );\n      summaryObj.adviseContent = this.editorDataAdvise\n        ? this.editorDataAdvise.innerHTML\n        : \"\";\n      summaryObj.audio = this.createSummary.get('audioFile').value;\n      this.subscription = this.dataService.OnSaveSummarySpokenText(summaryObj, this.questionCode, this.summaryId).subscribe(\n        () => {\n          this.goBack()\n        });\n    }\n  }\n\n  goBack() {\n    this.dataService.goBackPrev();\n  }\n  \n\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { QuestionDetailResolver } from \"@app/modules/manage/manage-questions/reslovers/question-detail.reslover\";\nimport { QuestionCreateComponent } from \"@app/modules/manage/manage-questions/question-create/question-create/question-create.component\";\n\n\n\n\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: QuestionCreateComponent,\n  },\n  {\n    path: \":questionId\",\n    component: QuestionCreateComponent,\n    resolve: {\n      questionDetail: QuestionDetailResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    QuestionDetailResolver\n  ]\n})\n\nexport class QuestionCreateRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// modules\nimport { BasicModule } from '@app/shared/basic-components/basic.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n// components\nimport { QuestionCreateComponent } from '@app/modules/manage/manage-questions/question-create/question-create/question-create.component';\nimport { ReadAloudComponent } from '@app/modules/manage/manage-questions/question-create/speaking/read-aloud/read-aloud.component';\nimport { RepeatSentenceComponent } from '@app/modules/manage/manage-questions/question-create/speaking/repeat-sentence/repeat-sentence.component';\nimport { DescribeImageComponent } from '@app/modules/manage/manage-questions/question-create/speaking/describe-image/describe-image.component';\nimport { RetellLectureComponent } from '@app/modules/manage/manage-questions/question-create/speaking/retell-lecture/retell-lecture.component';\nimport { AnswerShortQuestionComponent } from '@app/modules/manage/manage-questions/question-create/speaking/answer-short-question/answer-short-question.component';\nimport { FibDropDownComponent } from '@app/modules/manage/manage-questions/question-create/reading/fib-drop-down/fib-drop-down.component';\nimport { FibBankComponent } from '@app/modules/manage/manage-questions/question-create/reading/fib-bank/fib-bank.component';\nimport { McqSingleComponent } from '@app/modules/manage/manage-questions/question-create/reading/mcq-single/mcq-single.component';\nimport { McqMultipleComponent } from '@app/modules/manage/manage-questions/question-create/reading/mcq-multiple/mcq-multiple.component';\nimport { DictationComponent } from '@app/modules/manage/manage-questions/question-create/listening/dictation/dictation.component';\nimport { FibComponent } from '@app/modules/manage/manage-questions/question-create/listening/fib/fib.component';\nimport { HighlightIncorrectWordsComponent } from '@app/modules/manage/manage-questions/question-create/listening/highlight-incorrect-words/highlight-incorrect-words.component';\nimport { SelectMissingWordsComponent } from '@app/modules/manage/manage-questions/question-create/listening/select-missing-words/select-missing-words.component';\nimport { HighlightCorrectSummaryComponent } from '@app/modules/manage/manage-questions/question-create/listening/highlight-correct-summary/highlight-correct-summary.component';\nimport { EssayWritingComponent } from '@app/modules/manage/manage-questions/question-create/writing/essay-writing/essay-writing.component';\nimport { SummarizeWrittenTextComponent } from '@app/modules/manage/manage-questions/question-create/writing/summarize-written-text/summarize-written-text.component';\nimport { QuestionCreateRoutingModule } from '@app/modules/manage/manage-questions/question-create/question-create-routing.module';\nimport { ReorderParagraphComponent } from '@app/modules/manage/manage-questions/question-create/reading/reorder-paragraph/reorder-paragraph.component';\nimport { McqSingleListeningComponent } from '@app/modules/manage/manage-questions/question-create/listening/mcq-single/mcq-single.component';\nimport { McqMultipleListeningComponent } from '@app/modules/manage/manage-questions/question-create/listening/mcq-multiple/mcq-multiple.component';\nimport { WordCheckerComponent } from '@app/modules/manage/manage-questions/question-create/speaking/word-checker/word-checker.component';\nimport { SummarySpokenTextComponent } from '@app/modules/manage/manage-questions/question-create/listening/summary-spoken-text/summary-spoken-text.component';\n\n\n\n@NgModule({\n  declarations: [\n    QuestionCreateComponent,\n    // Speaking\n    ReadAloudComponent,\n    RepeatSentenceComponent,\n    DescribeImageComponent,\n    RetellLectureComponent,\n    AnswerShortQuestionComponent,\n    WordCheckerComponent,\n    // Reading\n    ReorderParagraphComponent,\n    FibDropDownComponent,\n    FibBankComponent,\n    McqSingleComponent,\n    McqMultipleComponent,\n    // Listening\n    DictationComponent,\n    FibComponent,\n    HighlightIncorrectWordsComponent,\n    SelectMissingWordsComponent,\n    HighlightCorrectSummaryComponent,\n    McqSingleListeningComponent,\n    McqMultipleListeningComponent,\n    SummarySpokenTextComponent,\n    // Writing\n    EssayWritingComponent,\n    SummarizeWrittenTextComponent,\n  ],\n  imports: [\n    CommonModule,\n    BasicModule,\n    QuestionCreateRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  exports:[\n    QuestionCreateRoutingModule\n  ]\n})\nexport class QuestionCreateModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3F1ZXN0aW9uLWNyZWF0ZS9xdWVzdGlvbi1jcmVhdGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonService } from '@app/core/http/common.service';\n\n@Component({\n  selector: 'app-question-create',\n  templateUrl: './question-create.component.html',\n  styleUrls: ['./question-create.component.css']\n})\nexport class QuestionCreateComponent implements OnInit {\n  public currentModule:any={};\n  public questionName:string;\n\n\n  constructor(private _activeRoute:ActivatedRoute,private _cservice:CommonService) { }\n\n  ngOnInit() {\n    this.currentModule=this._activeRoute.snapshot.params;\n\n    this.questionName=this._cservice.getquestionName(this.currentModule.questionType);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3JlYWRpbmcvZmliLWJhbmsvZmliLWJhbmsuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/serviceIndex';\nimport { FIBDrag } from '@app/shared/models/ReadingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'fib-bank',\n  templateUrl: './fib-bank.component.html',\n  styleUrls: ['./fib-bank.component.css']\n})\nexport class FibBankComponent implements OnInit {\n  private questionCode: string;\n  private questionId: string;\n\n  // boolean\n  public submitted: boolean = false;\n  public isToast: boolean = false;\n\n  dragForm: FormGroup = this.formBuilder.group(\n    {\n      name: [\"\", [Validators.required]],\n      paragraph: [\"\", Validators.required],\n      options: [\"\", [Validators.required]]\n    }\n  );\n\n  // any\n  public editorData: any;\n  public isProgress: boolean = false;\n  public warmingTxt: any = \"(GIVE BLANKS WITH {WORD} IN THE PLACE YOU WANT IT TO BE BLANK)\";\n  public subscription: Subscription;\n\n  constructor(private _activeRoute: ActivatedRoute, private _createService: SaveService,\n    private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n\n  }\n\n  getDataEditForm(data: FIBDrag) {\n    this.questionId = data.dragId;\n    this.dragForm = this.formBuilder.group(\n      {\n        name: [data.name, [Validators.required]],\n        paragraph: [data.paragraph],\n        options: [data.options, [Validators.required]]\n      }\n    );\n    this.editorData = data.paragraph;\n  }\n\n  get f() {\n    return this.dragForm.controls;\n  }\n\n  getMarkDown(e) {\n    this.editorData = e;\n  }\n\n  onCreate() {\n    this.submitted = true;\n    if (this.dragForm.invalid && !this.editorData.innerHTML) {\n      return;\n    } else {\n      this.isProgress = true;\n      this.dragForm.value.paragraph = this.editorData.innerHTML ? this.editorData.innerHTML : this.editorData;\n      this.subscription = this._createService.onSaveDrag(this.dragForm.value, this.questionCode, this.questionId).subscribe(\n        (res) => {\n          this.isProgress = false;\n          this.goBack();\n        }\n      )\n    }\n  }\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3JlYWRpbmcvZmliLWRyb3AtZG93bi9maWItZHJvcC1kb3duLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/serviceIndex';\nimport { DropDown } from '@app/shared/models/ReadingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'fib-drop-down',\n  templateUrl: './fib-drop-down.component.html',\n  styleUrls: ['./fib-drop-down.component.css']\n})\nexport class FibDropDownComponent implements OnInit {\n  private questionCode: string;\n  private questionId:string;\n\n  // boolean\n  public submitted: boolean = false;\n  public isToast: boolean = false;\n  public isProgress: boolean = false;\n\n  public dropForm: FormGroup = this.formBuilder.group(\n    {\n      name: [\"\", [Validators.required]],\n      paragraph: [\"\",Validators.required]\n    }\n  );\n\n  // any\n  public editorData: any = \"\";\n  public isErrText: string;\n  public warmingTxt: any = \"(GIVE OPTIONS IN “{} “ SEPARETED BY “;” EX: {ANSWER;OPTION1;OPTION2;OPTION3})\";\n  public subscription: Subscription;\n\n  constructor(private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService: SaveService,) { }\n\n    ngOnInit() {\n      this.questionCode = this._activeRoute.snapshot.params['questionType'];\n      let data = this._activeRoute.snapshot.data['questionDetail'];\n      if (data)\n        this.getDataEditForm(data);\n    }\n  \n    getDataEditForm(data: DropDown) {\n      this.questionId = data.dropdownId;\n      this.dropForm = this.formBuilder.group(\n        {\n          name: [data.name, [Validators.required]],\n          paragraph: [data.paragraph, [Validators.required]]\n        }\n      );\n        this.editorData=data.paragraph;\n    }\n\n  get f() {\n    return this.dropForm.controls;\n  }\n\n  getMarkDown(e) {\n    this.editorData = e;\n    this.dropForm.get('paragraph').setValue(e.innerHTML);\n  }\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  onCreate() {\n    this.submitted = true;\n    if (this.dropForm.invalid && !this.editorData.innerHTML) {\n      return;\n    } else {\n      this.isProgress = true;\n\n      this.subscription = this._createService.onSaveropDown(\n        this.dropForm.value, this.questionCode,this.questionId\n      ).subscribe(\n        (res) => {\n          this.isProgress = false;\n          this.goBack();\n        }, (err) => {\n          this.isErrText = err;\n          this.isToast = true;\n          this.isProgress = false;\n          if (this.editorData.innerHTML) {\n            this.editorData = this.editorData.innerHTML;\n          } else this.editorData = this.editorData;\n        }\n      )\n    }\n  }\n\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3JlYWRpbmcvbWNxLW11bHRpcGxlL21jcS1tdWx0aXBsZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport {  SaveService } from '@app/core/http/serviceIndex';\nimport { MCq } from '@app/shared/models/ReadingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'mcq-multiple',\n  templateUrl: './mcq-multiple.component.html',\n  styleUrls: ['./mcq-multiple.component.css']\n})\nexport class McqMultipleComponent implements OnInit {\n  private questionCode: string;\n  private questionId:string;\n\n  // boolean\n  public isCreate: boolean = false;\n  public submitted: boolean = false;\n\n  mcqForm: FormGroup = this.formBuilder.group(\n    {\n      question:[\"\",Validators.required],\n      answers: [\"\", [Validators.required]],\n      options: [\"\", [Validators.required]]\n    }\n  );\n\n  // any\n  public editorData: any = \"\";\n  public isProgress: boolean = false;\n  public type: any;\n  public warmingTxt: any = \"(SEPARETED BY “;” EX: ANSWER;OPTION1;OPTION2;OPTION3 )\";\n  public subscription: Subscription;\n\n  constructor(private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService: SaveService) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n\n  }\n\n  getDataEditForm(data: MCq) {\n    this.questionId = data.mcqId;\n    this.mcqForm = this.formBuilder.group(\n      {\n        question:[data.question,Validators.required],\n        answers: [data.answers, [Validators.required]],\n        options: [data.options, [Validators.required]]\n      }\n    );\n      this.editorData=data.question;\n  }\n\n  get f() {\n    return this.mcqForm.controls;\n  }\n\n  getMarkDown(e) {\n    this.editorData = e;\n    this.mcqForm.get('question').setValue(e.innerHTML);\n  }\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  onCreate() {\n    this.submitted = true;\n    if (this.mcqForm.invalid && !this.editorData.innerHTML) {\n      return;\n    } else {\n\n      this.isProgress = true;\n   \n\n      this.subscription = this._createService.onSaveMCQ(this.mcqForm.value, this.questionCode,this.questionId).subscribe(\n        (res) => {\n          this.isProgress = false;\n          this.goBack();\n        })\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3JlYWRpbmcvbWNxLXNpbmdsZS9tY3Etc2luZ2xlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CommonService, SaveService } from '@app/core/http/serviceIndex';\nimport { MCq } from '@app/shared/models/ReadingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'mcq-single',\n  templateUrl: './mcq-single.component.html',\n  styleUrls: ['./mcq-single.component.css']\n})\nexport class McqSingleComponent implements OnInit {\n  private questionCode: string;\n  private questionId:string;\n\n  // boolean\n  public isCreate: boolean = false;\n  public submitted: boolean = false;\n\n  mcqForm: FormGroup = this.formBuilder.group(\n    {\n      question:[\"\",Validators.required],\n      answers: [\"\", [Validators.required]],\n      options: [\"\", [Validators.required]]\n    }\n  );\n\n  // any\n  public editorData: any = \"\";\n  public isProgress: boolean = false;\n  public type: any;\n  public warmingTxt: any = \"(SEPARETED BY “;” EX: ANSWER;OPTION1;OPTION2;OPTION3 )\";\n  public subscription: Subscription;\n\n  constructor(private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService: SaveService) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n\n  }\n\n  getDataEditForm(data: MCq) {\n    this.questionId = data.mcqId;\n    this.mcqForm = this.formBuilder.group(\n      {\n        question:[data.question,Validators.required],\n        answers: [data.answers, [Validators.required]],\n        options: [data.options, [Validators.required]]\n      }\n    );\n      this.editorData=data.question;\n  }\n\n  get f() {\n    return this.mcqForm.controls;\n  }\n\n  getMarkDown(e) {\n    this.editorData = e;\n    this.mcqForm.get('question').setValue(e.innerHTML);\n  }\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  onCreate() {\n    this.submitted = true;\n    if (this.mcqForm.invalid && !this.editorData.innerHTML) {\n      return;\n    } else {\n\n      this.isProgress = true;\n   \n\n      this.subscription = this._createService.onSaveMCQ(this.mcqForm.value, this.questionCode,this.questionId).subscribe(\n        (res) => {\n          this.isProgress = false;\n          this.goBack();\n        })\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3JlYWRpbmcvcmVvcmRlci1wYXJhZ3JhcGgvcmVvcmRlci1wYXJhZ3JhcGguY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {  SaveService } from '@app/core/http/serviceIndex';\nimport { Reorder } from '@app/shared/models/ReadingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'reorder-paragraph',\n  templateUrl: './reorder-paragraph.component.html',\n  styleUrls: ['./reorder-paragraph.component.css']\n})\nexport class ReorderParagraphComponent implements OnInit {\n  public questionCode: string;\n  private questionId: string;\n\n  // boolean\n  public submitted: boolean = false;\n  public isHint: boolean = false;\n  createReorderForm: FormGroup = this.formBuilder.group(\n    {\n      name: [\"\", [Validators.required]],\n      paragraph: [\"\", [Validators.required]]\n    }\n  );\n\n  // any\n  public reorderId: any;\n  public editorData: any = \"\";\n  public isProgress: boolean = false;\n  public subscription: Subscription;\n\n  constructor(private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder, private _createService: SaveService,) {\n\n  }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n  }\n\n  getDataEditForm(data: Reorder) {\n    this.questionId = data.reorderId;\n    this.createReorderForm = this.formBuilder.group(\n      {\n        name: [data.name, [Validators.required]],\n        paragraph: [data.paragraph, [Validators.required]]\n      }\n    );\n      this.editorData=data.paragraph;\n  }\n\n  get f() {\n    return this.createReorderForm.controls;\n  }\n\n  getMarkDown(e) {\n    this.editorData = e;\n    this.createReorderForm.get('paragraph').setValue(e.innerHTML);\n  }\n\n  goBack() {\n   this._createService.goBackPrev();\n  }\n\n  onCreate() {\n    this.submitted = true;\n    if (this.createReorderForm.invalid && !this.editorData.innerHTML) {\n      return;\n    } else {\n      this.isProgress = true;\n\n      this.subscription = this._createService.onSaveReorder(this.createReorderForm.value, this.questionCode,this.questionId).subscribe(\n        (res) => {\n          this.isProgress = false;\n          this.goBack();\n        })\n    }\n  }\n\n \n\n  clickClose(e) {\n    this.isHint = !this.isHint;\n\n  }\n\n  btnHint() {\n    this.submitted = true;\n    if (this.createReorderForm.invalid) {\n      return;\n    } else {\n      this.isHint = !this.isHint;\n      //  let arr = this._service.strToArrbySemicolon(this.createReorderForm.value.paragraph);\n      //  this.editorData = this._service.formatarrtoHTML(arr);\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3NwZWFraW5nL2Fuc3dlci1zaG9ydC1xdWVzdGlvbi9hbnN3ZXItc2hvcnQtcXVlc3Rpb24uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport {  SaveService } from '@app/core/http/serviceIndex';\nimport { ShortQuestion } from '@app/shared/models/SpeakingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'answer-short-question',\n  templateUrl: './answer-short-question.component.html',\n  styleUrls: ['./answer-short-question.component.css']\n})\nexport class AnswerShortQuestionComponent implements OnInit {\n  private questionCode: string;\n  private questionId: string;\n\n  public createansShortForm: FormGroup = this.formBuilder.group({\n    title: [\"\", [Validators.required]],\n    duration: [\"\", [Validators.required]],\n    answer: [\"\", [Validators.required]],\n    recordDuration: [\"\", [Validators.required]],\n    audioFile: [null, Validators.required]\n  });\n\n  // boolean\n  public submitted: boolean = false;\n  public isProgress: boolean = false;\n  isToast: boolean = false;\n  public isCheckAudio: boolean = false;\n  // any\n  public editorData: any = \"\";\n  public audioFile: any;\n  isErrText: String;\n  public exitaudioLink: String;\n\n  public subscription: Subscription;\n\n  constructor(private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService: SaveService) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n  }\n\n  getDataEditForm(data: ShortQuestion) {\n    this.questionId = data.questionId;\n    this.createansShortForm =  this.formBuilder.group({\n      title: [data.title, [Validators.required]],\n      duration: [data.duration, [Validators.required]],\n      answer: [data.answer, [Validators.required]],\n      recordDuration: [data.recordDuration, [Validators.required]],\n      audioFile: [null]\n    });\n  \n  }\n\n  onCreate() {\n    this.submitted = true;\n\n    if (this.createansShortForm.invalid) {\n      return;\n    } else {\n      this.isProgress = true;\n\n      this.subscription = this._createService.onSaveShortQuestion(\n        this.createansShortForm.value, this.questionCode, this.questionId\n      ).subscribe(\n        (res) => {\n          this.goBack();\n        },\n        (err) => {\n          this.isErrText = err;\n          this.isToast = true;\n          this.isProgress = false;\n        }\n      );\n    }\n  }\n\n\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  get f() {\n    return this.createansShortForm.controls;\n  }\n\n  getAudioFile(e) {\n    this.audioFile = e;\n  }\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3NwZWFraW5nL2Rlc2NyaWJlLWltYWdlL2Rlc2NyaWJlLWltYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/serviceIndex';\nimport { DescribeImage } from '@app/shared/models/SpeakingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'describe-image',\n  templateUrl: './describe-image.component.html',\n  styleUrls: ['./describe-image.component.css']\n})\nexport class DescribeImageComponent implements OnInit {\n  public questionCode: string;\n  public questionId: string;\n\n  createDescribeForm: FormGroup = this.formBuilder.group({\n    title: [\"\", [Validators.required]],\n    duration: [\"\", [Validators.required]],\n    recordDuration: [\"\", [Validators.required]],\n    keywordMatch: [\"\", [Validators.required]],\n    keywords: [\"\", [Validators.required]],\n    fluentGrade: [\"\", [Validators.required]],\n    pronounciationGrade: [\"\", [Validators.required]],\n    words: this.formBuilder.array([], [Validators.required]),\n    imageFile: [null, Validators.required]\n  });\n\n  // boolean\n  public submitted: boolean = false;\n  public isProgress: boolean = false;\n  public isCheckImg: boolean = false;\n  isToast: boolean = false;\n  public isImgLoad: boolean = true;\n\n  // any\n  public editorData: any = \"\";\n  isErrText: string;\n  public exitimgUrl: string;\n  public subscription: Subscription;\n  public words: any = [];\n\n  constructor(private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService: SaveService) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n  }\n\n  getDataEditForm(data: DescribeImage) {\n    this.questionId = data.questionId;\n    this.createDescribeForm = this.formBuilder.group({\n      title: [data.title, [Validators.required]],\n      duration: [data.duration, [Validators.required]],\n      recordDuration: [data.recordDuration, [Validators.required]],\n      keywordMatch: [data.keywordMatch, [Validators.required]],\n      keywords: [data.keywords, [Validators.required]],\n      fluentGrade: [data.fluentGrade, [Validators.required]],\n      pronounciationGrade: [data.pronounciationGrade, [Validators.required]],\n      words: this.formBuilder.array([], [Validators.required]),\n      imageFile: [null]\n    });\n    this.words = data.words.map(d => ({ word: d.word }))\n  }\n\n  onCreate() {\n    this.submitted = true;\n\n    if (this.createDescribeForm.invalid) {\n      return;\n    } else {\n      this.isProgress = true;\n\n      this.subscription = this._createService.onSaveDescribeImg(\n        this.createDescribeForm.value, this.questionCode, this.questionId\n      ).subscribe(\n        (res) => {\n          this.goBack();\n        },\n        (err) => {\n          this.isErrText = err;\n          this.isToast = true;\n          this.isProgress = false;\n        }\n      );\n    }\n  }\n\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  get f() {\n    return this.createDescribeForm.controls;\n  }\n\n\n\n\n  onLoad() {\n    this.isImgLoad = false;\n  }\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3NwZWFraW5nL3JlYWQtYWxvdWQvcmVhZC1hbG91ZC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport {  SaveService } from '@app/core/http/serviceIndex';\nimport { ReadAloud } from '@app/shared/models/SpeakingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'read-aloud',\n  templateUrl: './read-aloud.component.html',\n  styleUrls: ['./read-aloud.component.css']\n})\nexport class ReadAloudComponent implements OnInit {\n  private questionCode: string;\n  private questionId: string;\n\n  public createReadAloudForm: FormGroup = this.formBuilder.group({\n    title: [\"\", [Validators.required]],\n    paragraph: [\"\", [Validators.required]],\n    countMax: [\"\", [Validators.required]],\n    duration: [\"\", [Validators.required]],\n    recordDuration: [\"\", [Validators.required]],\n    fluencyGrace: [\"\", [Validators.required]],\n    pronunciationGrace: [\"\", [Validators.required]],\n    words: this.formBuilder.array([], [Validators.required]),\n  });\n\n  // boolean\n  public submitted: boolean = false;\n  public isProgress: boolean = false;\n  public isToast: boolean = false;\n  //any\n  public words: any = [];\n  public readAloudId: any\n  public isErrText: String = null\n  public subscription: Subscription;\n\n  constructor(\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService: SaveService) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n\n  }\n\n  getDataEditForm(data: ReadAloud) {\n    this.words = data.words;\n    this.questionId = data.questionId;\n    this.createReadAloudForm = this.formBuilder.group({\n      title: [data.title, [Validators.required]],\n      paragraph: [data.paragraph, [Validators.required]],\n      countMax: [data.countMax, [Validators.required]],\n      duration: [data.duration, [Validators.required]],\n      recordDuration: [data.recordDuration, [Validators.required]],\n      fluencyGrace: [data.fluencyGrace, [Validators.required]],\n      pronunciationGrace: [data.pronunciationGrace, [Validators.required]],\n      words: this.formBuilder.array([], [Validators.required]),\n    });\n    this.words = data.words.map(d => ({ word: d.word }))\n  }\n\n  onSave() {\n    this.submitted = true;\n    if (this.createReadAloudForm.invalid)\n      return\n\n    this.isProgress = true\n\n    this.subscription = this._createService.onSaveReadAloud(\n      this.createReadAloudForm.value, this.questionCode, this.questionId\n    ).subscribe(\n      (res) => {\n        this.goBack();\n      },\n      (err) => {\n        this.isErrText = err.error.message;\n        this.isToast = true;\n        this.isProgress = false;\n      }\n    )\n\n  }\n\n  get f() {\n    return this.createReadAloudForm.controls;\n  }\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3NwZWFraW5nL3JlcGVhdC1zZW50ZW5jZS9yZXBlYXQtc2VudGVuY2UuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/serviceIndex';\nimport { RepeatSentence } from '@app/shared/models/SpeakingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'repeat-sentence',\n  templateUrl: './repeat-sentence.component.html',\n  styleUrls: ['./repeat-sentence.component.css']\n})\nexport class RepeatSentenceComponent implements OnInit {\n  private questionCode: string\n  private questionId: string\n\n  public createRepeatSentenceForm: FormGroup = this.formBuilder.group({\n    title: [\"\", [Validators.required]],\n    paragraph: [\"\", [Validators.required]],\n    countMax: [\"\", [Validators.required]],\n    duration: [\"\", [Validators.required]],\n    recordDuration: [\"\", [Validators.required]],\n    fluencyGrace: [\"\", [Validators.required]],\n    pronunciationGrace: [\"\", [Validators.required]],\n    words: this.formBuilder.array([], [Validators.required]),\n    audioFile:[null,[Validators.required]]\n  });\n\n  // boolean\n  public submitted: boolean = false;\n  public isProgress: boolean = false;\n  public isToast: boolean = false;\n  //any\n  public words: any = [];\n  public repeatSentenceId: any\n  public isErrText: String = null\n  public subscription: Subscription\n  public audioFile: File = null\n\n  constructor(\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService: SaveService,) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n  }\n\n  getDataEditForm(data: RepeatSentence) {\n    this.questionId = data.questionId;\n    this.createRepeatSentenceForm = this.formBuilder.group({\n      title: [data.title, [Validators.required]],\n      paragraph: [data.paragraph, [Validators.required]],\n      countMax: [data.countMax, [Validators.required]],\n      duration: [data.duration, [Validators.required]],\n      recordDuration: [data.recordDuration, [Validators.required]],\n      fluencyGrace: [data.fluencyGrace, [Validators.required]],\n      pronunciationGrace: [data.pronunciationGrace, [Validators.required]],\n      words: this.formBuilder.array([], [Validators.required]),\n      audioFile:[null]\n    });\n    this.words = data.words.map(d => ({ word: d.word }))\n  }\n\n\n  onSave() {\n    this.submitted = true;\n    if (this.createRepeatSentenceForm.invalid)\n      return\n\n    this.isProgress = true\n\n    this.subscription = this._createService.onSaveRepeatSentence(\n      this.createRepeatSentenceForm.value,\n      this.questionCode, this.questionId\n    ).subscribe(\n      (res) => {\n        this.goBack()\n      },\n      (err) => {\n        this.isErrText = err.error.message;\n        this.isToast = true;\n        this.isProgress = false;\n      }\n    )\n\n  }\n\n  getAudioFile(e) {\n    this.createRepeatSentenceForm.value.audioFile=e;\n  }\n\n  get f() {\n    return this.createRepeatSentenceForm.controls;\n  }\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3NwZWFraW5nL3JldGVsbC1sZWN0dXJlL3JldGVsbC1sZWN0dXJlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonService, SaveService } from '@app/core/http/serviceIndex';\nimport { RetellLecture } from '@app/shared/models/SpeakingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'retell-lecture',\n  templateUrl: './retell-lecture.component.html',\n  styleUrls: ['./retell-lecture.component.css']\n})\nexport class RetellLectureComponent implements OnInit {\n  private questionCode:string;\n  private questionId:string;\n  \n  public createRetellLectureForm: FormGroup= this.formBuilder.group({\n    title: [\"\", [Validators.required]],\n    keywords: [\"\", [Validators.required]],\n    countMax: [\"\", [Validators.required]],\n    duration: [\"\", [Validators.required]],\n    recordDuration: [\"\", [Validators.required]],\n    fluencyGrace: [\"\", [Validators.required]],\n    pronunciationGrace: [\"\", [Validators.required]],\n    // words: this.formBuilder.array([], [Validators.required]),\n    words: [\"\", [Validators.required]],\n    audioFile:[null,Validators.required]\n  });\n  // boolean\n  public submitted: boolean = false;\n  public isProgress: boolean = false;\n  public isToast: boolean = false;\n  //any\n  public words: any = [];\n  public retellLectureId: any\n  public isErrText: String = null\n  public subscription: Subscription\n\n  constructor(\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService:SaveService) { }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n  }\n\n  getDataEditForm(data:RetellLecture){\n        this.createRetellLectureForm = this.formBuilder.group({\n          title: [data.title, [Validators.required]],\n          keywords: [data.keywords, [Validators.required]],\n          countMax: [data.countMax, [Validators.required]],\n          duration: [data.duration, [Validators.required]],\n          recordDuration: [data.recordDuration, [Validators.required]],\n          fluencyGrace: [data.fluencyGrace, [Validators.required]],\n          pronunciationGrace: [data.pronunciationGrace, [Validators.required]],\n          words:[data.words, [Validators.required]],\n          audioFile:[null]\n        });\n\n        // this.words = data.words.map(d => ({ word: d.word }))\n  }\n\n  onSave(){\n    this.submitted = true;\n    if (this.createRetellLectureForm.invalid)\n      return\n\n\n    this.isProgress = true\n    \n    this.subscription = this._createService.onSaveRellLecture(\n      this.createRetellLectureForm.value, this.questionCode,this.questionId\n      ).subscribe(\n      (res) => {\n        this.goBack()\n      },\n      (err) => {\n        this.isErrText = err;\n        this.isToast = true;\n        this.isProgress = false;\n      }\n    )\n\n  }\n\n\n\n  get f() {\n    return this.createRetellLectureForm.controls;\n  }\n\n  goBack() {\n    this._createService.goBackPrev();\n  }\n\n  ngOnDestroy(){\n    if(this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n\n}\n","export default \"table {\\n    min-width: 500px;;\\n}\\n\\nthead {\\n    text-align: center;\\n}\\n\\nthead > td {\\n    /* padding: 5px 0; */\\n    height: 45px;\\n    background: #E7E3D4 0% 0% no-repeat padding-box;\\n    box-shadow: 0px 3px 6px #EBEBEB;\\n    border-radius: 4px;\\n    opacity: 1;\\n}\\n\\n/* tr:first-child > td:last-child {\\n    display: none;\\n} */\\n\\ntd label {\\n    color: #6c757d;\\n    display: block;\\n    margin-bottom: 0;\\n}\\n\\ntd .sub-label {\\n    text-transform: uppercase;\\n    color: #d31912;\\n    font-weight: 600;\\n    font-size: 12px;\\n}\\n\\ntd input[type=text] {\\n    height: 45px;\\n}\\n\\ntd.del > a {\\n    width: 40px;\\n    height: 40px;\\n    border-radius: 20px;\\n    margin-left: 5px;\\n    background: #FF1A07 0% 0% no-repeat padding-box;\\n    box-shadow: 0px 3px 6px #FF1A07;\\n    opacity: 0;\\n}\\n\\n.del-icon {\\n    color: #ffffff;\\n}\\n\\ndiv.add {\\n    text-align: center;\\n    margin-top: 10px;\\n}\\n\\ndiv.add > a {\\n    width: 60px;\\n    height: 60px;\\n    border-radius: 30px;\\n    font-size: 0.9rem;\\n    color: #fff;\\n    background: var(--unnamed-color-3b8beb) 0% 0% no-repeat padding-box;\\n    background: #3B8BEB 0% 0% no-repeat padding-box;\\n    box-shadow: 0px 3px 6px #89BEFF;\\n    opacity: 1;\\n    /* padding-top: 23px; */\\n}\\n\\nform div.add {\\n    width: 430px;\\n}\\n\\ntable tr:hover td.del > a { opacity: 1 }\\n\\n.hide {\\n    display: none;\\n}\\n\\n.show {\\n    opacity: 1;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9tYW5hZ2UvbWFuYWdlLXF1ZXN0aW9ucy9xdWVzdGlvbi1jcmVhdGUvc3BlYWtpbmcvd29yZC1jaGVja2VyL3dvcmQtY2hlY2tlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksb0JBQW9CO0lBQ3BCLFlBQVk7SUFDWiwrQ0FBK0M7SUFDL0MsK0JBQStCO0lBQy9CLGtCQUFrQjtJQUNsQixVQUFVO0FBQ2Q7O0FBRUE7O0dBRUc7O0FBRUg7SUFDSSxjQUFjO0lBQ2QsY0FBYztJQUNkLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsZ0JBQWdCO0lBQ2hCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLCtDQUErQztJQUMvQywrQkFBK0I7SUFDL0IsVUFBVTtBQUNkOztBQUVBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQixpQkFBaUI7SUFDakIsV0FBVztJQUNYLG1FQUFtRTtJQUNuRSwrQ0FBK0M7SUFDL0MsK0JBQStCO0lBQy9CLFVBQVU7SUFDVix1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBLDRCQUE0QixXQUFXOztBQUV2QztJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxVQUFVO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL21hbmFnZS9tYW5hZ2UtcXVlc3Rpb25zL3F1ZXN0aW9uLWNyZWF0ZS9zcGVha2luZy93b3JkLWNoZWNrZXIvd29yZC1jaGVja2VyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gICAgbWluLXdpZHRoOiA1MDBweDs7XG59XG5cbnRoZWFkIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbnRoZWFkID4gdGQge1xuICAgIC8qIHBhZGRpbmc6IDVweCAwOyAqL1xuICAgIGhlaWdodDogNDVweDtcbiAgICBiYWNrZ3JvdW5kOiAjRTdFM0Q0IDAlIDAlIG5vLXJlcGVhdCBwYWRkaW5nLWJveDtcbiAgICBib3gtc2hhZG93OiAwcHggM3B4IDZweCAjRUJFQkVCO1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBvcGFjaXR5OiAxO1xufVxuXG4vKiB0cjpmaXJzdC1jaGlsZCA+IHRkOmxhc3QtY2hpbGQge1xuICAgIGRpc3BsYXk6IG5vbmU7XG59ICovXG5cbnRkIGxhYmVsIHtcbiAgICBjb2xvcjogIzZjNzU3ZDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG50ZCAuc3ViLWxhYmVsIHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGNvbG9yOiAjZDMxOTEyO1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgZm9udC1zaXplOiAxMnB4O1xufVxuXG50ZCBpbnB1dFt0eXBlPXRleHRdIHtcbiAgICBoZWlnaHQ6IDQ1cHg7XG59XG5cbnRkLmRlbCA+IGEge1xuICAgIHdpZHRoOiA0MHB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICAgIG1hcmdpbi1sZWZ0OiA1cHg7XG4gICAgYmFja2dyb3VuZDogI0ZGMUEwNyAwJSAwJSBuby1yZXBlYXQgcGFkZGluZy1ib3g7XG4gICAgYm94LXNoYWRvdzogMHB4IDNweCA2cHggI0ZGMUEwNztcbiAgICBvcGFjaXR5OiAwO1xufVxuXG4uZGVsLWljb24ge1xuICAgIGNvbG9yOiAjZmZmZmZmO1xufVxuXG5kaXYuYWRkIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbn1cblxuZGl2LmFkZCA+IGEge1xuICAgIHdpZHRoOiA2MHB4O1xuICAgIGhlaWdodDogNjBweDtcbiAgICBib3JkZXItcmFkaXVzOiAzMHB4O1xuICAgIGZvbnQtc2l6ZTogMC45cmVtO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQ6IHZhcigtLXVubmFtZWQtY29sb3ItM2I4YmViKSAwJSAwJSBuby1yZXBlYXQgcGFkZGluZy1ib3g7XG4gICAgYmFja2dyb3VuZDogIzNCOEJFQiAwJSAwJSBuby1yZXBlYXQgcGFkZGluZy1ib3g7XG4gICAgYm94LXNoYWRvdzogMHB4IDNweCA2cHggIzg5QkVGRjtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC8qIHBhZGRpbmctdG9wOiAyM3B4OyAqL1xufVxuXG5mb3JtIGRpdi5hZGQge1xuICAgIHdpZHRoOiA0MzBweDtcbn1cblxudGFibGUgdHI6aG92ZXIgdGQuZGVsID4gYSB7IG9wYWNpdHk6IDEgfVxuXG4uaGlkZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbn0gXG5cbi5zaG93IHtcbiAgICBvcGFjaXR5OiAxO1xufSJdfQ== */\"","import { Component, OnInit, Input} from '@angular/core';\nimport { FormArray, FormBuilder, Validators } from '@angular/forms';\nimport { Word } from '@app/shared/models/SpeakingModel';\n\n@Component({\n  selector: 'word-checker',\n  templateUrl: './word-checker.component.html',\n  styleUrls: ['./word-checker.component.css']\n})\nexport class WordCheckerComponent implements OnInit {\n  public dialog:any={\n    showText:\"\",\n    isDelete:false,\n    isWarning:true,\n    isconfirmBtn:true\n  }\n\n  @Input() wordGroup\n  @Input() submitted\n  @Input() wordsArray:Array<Word>;\n  @Input() isCreate\n  control: FormArray\n  isDialog: boolean = false\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() { \n    if (this.isCreate) {\n      const control = this.wordGroup.get('words') as FormArray\n      control.push(this.initiateForm(null))\n    } else {\n      setTimeout(() => {     \n        this.wordsArray.forEach(element => {\n          const control = this.wordGroup.get('words') as FormArray\n          control.push(this.initiateForm(element))\n        })\n      }, 2000);    \n    }\n  }\n\n  ngAfterOnInit() {\n    //this.control = this.wordGroup.get('rows') as FormArray\n  }\n\n  initiateForm(data) {\n    return this.fb.group({\n      word: [ data ? data.word : '', [Validators.required]],\n      isDeleteAble: [true]\n    })\n  } \n\n  onAdd(){\n    const control = this.wordGroup.get('words') as FormArray\n    control.push(this.initiateForm(null));\n  }\n\n  onDelete(index: number){\n    const control =  this.wordGroup.get('words') as FormArray\n    if(control.controls.length < 2){\n      this.isDialog = true\n      this.dialog.showText = \"Must have one row at least in Words To Check With Minimum.\"\n      return\n    }\n     \n    control.removeAt(index)\n  }\n\n  get getFormControls() {\n    const control = this.wordGroup.get('words') as FormArray;\n    return control\n  }\n\n  onSubmit(e) {\n    this.isDialog = false\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3dyaXRpbmcvZXNzYXktd3JpdGluZy9lc3NheS13cml0aW5nLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport {  SaveService } from '@app/core/http/serviceIndex';\nimport { ToastService } from '@app/core/services';\nimport { EssaySubWriting, EssayWriting } from '@app/shared/models/WritingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'essay-writing',\n  templateUrl: './essay-writing.component.html',\n  styleUrls: ['./essay-writing.component.css']\n})\nexport class EssayWritingComponent implements OnInit {\n  private questionCode: string;\n  private questionId: string;\n\n  createEssayForm: FormGroup = this.formBuilder.group(\n    {\n      name: [\"\", [Validators.required]],\n      answer: this.formBuilder.group({\n        contentKeywords: [\"\", [Validators.required]],\n        maxWordLimit: [\"\", [Validators.required]],\n        maxKeyword: [\"\", [Validators.required]],\n      }),\n      adviseContent: [\"\", Validators.required]\n    }\n  );\n\n  // boolean\n  public submitted: boolean = false;\n  // any\n  public editorData: any = \"\";\n  public isProgress: boolean = false;\n  public subscription: Subscription;\n\n  constructor(private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder, \n    public toastService: ToastService,\n    private _saveService: SaveService) {\n\n  }\n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n  }\n\n  getDataEditForm(data: EssayWriting) {\n    this.questionId = data.essayId;\n    this.createEssayForm = this.formBuilder.group(\n      {\n        name: [data.name, [Validators.required]],\n        answer: this.formBuilder.group({\n          contentKeywords: [data.answer.contentKeywords, [Validators.required]],\n          maxWordLimit: [data.answer.maxWordLimit, [Validators.required]],\n          maxKeyword: [data.answer.maxKeyword, [Validators.required]],\n        }),\n       \n        adviseContent: [data.adviseContent]\n      }\n    );\n    this.editorData = data.adviseContent;\n  }\n\n  onCreate() {\n    this.submitted = true;\n    if (this.createEssayForm.invalid) {\n      return;\n    } else {\n      this.isProgress = true;\n\n      this.createEssayForm.value.advis\n      this.subscription = this._saveService\n        .onSaveEssay(this.createEssayForm.value, this.questionCode, this.questionId)\n        .subscribe((res) => {\n          this.isProgress = false;\n          this.goBack();\n        });\n    }\n  }\n\n\n  get f() {\n    return this.createEssayForm.controls;\n  }\n\n  getMarkDown(e) {\n    this.editorData = e;\n    this.createEssayForm.get('adviseContent').setValue(e.innerHTML);\n  }\n\n  goBack() {\n    this._saveService.goBackPrev();\n  }\n\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL21hbmFnZS1xdWVzdGlvbnMvcXVlc3Rpb24tY3JlYXRlL3dyaXRpbmcvc3VtbWFyaXplLXdyaXR0ZW4tdGV4dC9zdW1tYXJpemUtd3JpdHRlbi10ZXh0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/save.service';\nimport { SummaryWriting } from '@app/shared/models/WritingModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'summarize-written-text',\n  templateUrl: './summarize-written-text.component.html',\n  styleUrls: ['./summarize-written-text.component.css']\n})\nexport class SummarizeWrittenTextComponent implements OnInit {\n  private questionCode:string;\n  private questionId:string;\n\n  createSummary: FormGroup= this.formBuilder.group({\n    name: [\"\", [Validators.required]],\n    type: [\"\", [Validators.required]],\n    contentKeywords: [\"\", [Validators.required]],\n    vocabularyWords: [\"\", [Validators.required]],\n    maxContentKeywords: [\"\", [Validators.required]],\n    maxWordLimit: [\"\", [Validators.required]],\n    maxVocabularyWords: [\"\", [Validators.required]],\n    unwantedContentKeywords: [\"\", [Validators.required]],\n    question:[\"\",Validators.required],\n    adviseContent:[\"\",Validators.required],\n\n  });\n  // any\n  public editorDataQestion: any = \"\";\n  public editorDataAdvise: any = \"\";\n  // boolean\n  public submitted: boolean = false;\n  public isProgress: boolean = false;\n\n  public subscription: Subscription;\n\n  public typeList: any = [\n    {\n      _id: \"WRITTEN\",\n      name: \"WRITTEN\",\n    },\n  ];\n  constructor(\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _createService:SaveService\n  ) { }\n  \n\n  ngOnInit() {\n    this.questionCode = this._activeRoute.snapshot.params['questionType'];\n    let data = this._activeRoute.snapshot.data['questionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n  }\n\n  getDataEditForm(data: SummaryWriting) {\n    this.questionId = data.summaryId;\n    this.createSummary =this.formBuilder.group({\n      name: [data.name, [Validators.required]],\n      type: [data.type, [Validators.required]],\n      contentKeywords: [data.contentKeywords, [Validators.required]],\n      vocabularyWords: [data.vocabularyWords, [Validators.required]],\n      maxContentKeywords: [data.maxContentKeywords, [Validators.required]],\n      maxWordLimit: [data.maxWordLimit, [Validators.required]],\n      maxVocabularyWords: [data.maxVocabularyWords, [Validators.required]],\n      unwantedContentKeywords: [data.unwantedContentKeywords, [Validators.required]],\n      question:[data.question,Validators.required],\n      adviseContent:[data.adviseContent,Validators.required]\n    });\n    this.editorDataAdvise = data.adviseContent;\n    this.editorDataQestion=data.question;\n  }\n\n\n\n  get f() {\n    return this.createSummary.controls;\n  }\n  goBack() {\n    this._createService.goBackPrev();\n  }\n  getMarkDownForSummaryQuestion(e) {\n    this.editorDataQestion = e;\n    this.createSummary.get('question').setValue(e.innerHTML);\n  }\n  getMarkDownForAdviseSummary(e) {\n    this.editorDataAdvise = e;\n    this.createSummary.get('adviseContent').setValue(e.innerHTML);\n  }\n  onCreate() {\n    this.submitted = true;\n    if (this.createSummary.invalid) {\n      return;\n    } else {\n      this.isProgress = true;\n     \n      this._createService.onSaveSummaryWritting(this.createSummary.value,this.questionCode,this.questionId).subscribe(\n        () => {\n          this.isProgress = false;\n          this.goBack();\n        });\n    }\n  }\n\n\n  \n\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n\n}\n","import { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DetailService } from '@app/core/http/detail.service';\n\n@Injectable()\nexport class QuestionDetailResolver implements Resolve<any> {\n\n    constructor(private question: DetailService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot):\n        Observable<any> {\n\n        const questionUrl = `${route.params['moduleType'].toLowerCase()}/${route.params['questionType']}/${route.params['questionId']}/detail`;\n\n        return this.question.getDetail(questionUrl);\n    }\n}","export class Dictation {\n  questionId: string;\n  title: String;\n  duration: Number;\n  audio: File;\n  answer: String;\n}\n\nexport class DictationEvaluate {\n  questionId: string;\n  answer: string;\n  questionType: string;\n  options: string;\n}\n\n\nexport class FIB {\n  questionId: string;\n  title: String;\n  duration: String;\n  audio: File;\n  paragraph: String;\n}\n\n\nexport class FIBEvaluate {\n  questionId: string;\n  answer: Array<string>;\n  options: string;\n  questionType: string;\n}\n\nexport class MCQEvaluate {\n  questionId: string;\n  answer: Array<Option>;\n  options: Array<Option>;\n  questionType: string;\n}\n\nexport class SummaryListeningEvaluate {\n  questionId: string;\n  totalMinutes: number;\n  totalWordCount: number;\n  version: string\n  yoursummary: string;\n  questionType:string;\n}\n\n\n\n\nexport class HighlightCorrectSummary {\n  questionId: string\n  title: String\n  duration: String\n  file: File\n  question: String\n  answer: String\n  options: String\n}\n\n\nexport class Option {\n  _id: string;\n  property: string\n}\n\n\nexport class HighlightIncorrectWord {\n  questionId: string\n  title: String\n  duration: String\n  file: File\n  paragraph: String\n}\n\nexport class MCQ {\n  questionId: string;\n  title: String;\n  duration: String;\n  audio: File;\n  question: String;\n  answers: string;\n  options: string;\n}\n\n\nexport class SelectMissingWords {\n  questionId: string;\n  title: String;\n  duration: String;\n  audio: File;\n  question: String;\n  answer: string;\n  options: string;\n}\n\nexport class SummaryEvaluation {\n  version: string;\n  yoursummary: string;\n  totalWordCount: number;\n  summaryId: string;\n  totalMinutes: number;\n}\n\n\nexport class SummaryListening {\n  summaryId: string;\n  name: string;\n  type: string;\n  question: string;\n  contentKeywords: string;\n  vocabularyWords: string;\n  maxContentKeywords: number;\n  maxWordLimit: number;\n  adviseContent: string;\n  audio: File;\n}\n"],"sourceRoot":"webpack:///","file":"app-modules-manage-manage-questions-question-create-question-create-module-es5.js"}