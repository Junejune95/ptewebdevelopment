{"version":3,"sources":["./src/app/modules/practise-evaluate/listening-practise/listening-practise.component.html","./src/app/modules/practise-evaluate/reading-practise/reading-practise.component.html","./src/app/modules/practise-evaluate/speaking-practise/speaking-practise.component.html","./src/app/modules/practise-evaluate/writing-practise/writing-practise.component.html","./src/app/modules/practise-evaluate/listening-practise/listening-practise.component.css","./src/app/modules/practise-evaluate/listening-practise/listening-practise.component.ts","./src/app/modules/practise-evaluate/practise-evaluate.module.ts","./src/app/modules/practise-evaluate/prasticeEvaluate-routing.module.ts","./src/app/modules/practise-evaluate/reading-practise/reading-practise.component.css","./src/app/modules/practise-evaluate/reading-practise/reading-practise.component.ts","./src/app/modules/practise-evaluate/reslovers/practise-evaluate-detail.reslover.ts","./src/app/modules/practise-evaluate/speaking-practise/speaking-practise.component.css","./src/app/modules/practise-evaluate/speaking-practise/speaking-practise.component.ts","./src/app/modules/practise-evaluate/writing-practise/writing-practise.component.css","./src/app/modules/practise-evaluate/writing-practise/writing-practise.component.ts"],"names":[],"mappings":"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","file":"app-modules-practise-evaluate-practise-evaluate-module-es2015.acf6c0d95942dec63464.js","sourcesContent":["export default \"<ng-container *ngIf=\\\"!scoreResult; else showScore\\\">\\n    <ng-container *ngIf=\\\"questionList[selectedIndex].question as question\\\">\\n        <header-evaluate-menu [questionCode]=\\\"routeParam.questionType\\\" [question]=\\\"question\\\"\\n            (timerEvent)=\\\"onTimeEnd($event)\\\">\\n            <show-question-count [currentNo]=\\\"selectedIndex+1\\\" [totalCount]=\\\"questionList.length\\\">\\n                <listening-question [questionData]=\\\"question\\\" (answerEmit)=\\\"getAnswer($event)\\\"></listening-question>\\n            </show-question-count>\\n        </header-evaluate-menu>\\n    </ng-container>\\n</ng-container>\\n<ng-template #showScore>\\n    <header-evaluate-menu [questionCode]=\\\"routeParam.questionType\\\">\\n        <user-info [info]=\\\"scoreResult\\\" *ngIf=\\\"routeParam.questionType !='L008'\\\"></user-info>\\n        <ng-container *ngFor=\\\"let score of scoreResult.results;let i=index;\\\">\\n            <show-question-count [currentNo]=\\\"i+1\\\">\\n                <score-by-module [scoreResult]=\\\"score\\\" [moduleName]=\\\"'Listening'\\\"></score-by-module>\\n            </show-question-count>\\n        </ng-container>\\n        <div class=\\\"footer-button-block\\\">\\n            <cancel-btn>Cancel</cancel-btn>\\n        </div>\\n    </header-evaluate-menu>\\n</ng-template>\"","export default \"<header-evaluate-menu [questionCode]=\\\"routeParam.questionType\\\">\\n    <ng-container *ngIf=\\\"!resultScore; else showScore\\\">\\n        <reading-question [questionData]=\\\"detailData\\\" (answerEmit)=\\\"getAnswer($event)\\\"></reading-question>\\n    </ng-container>\\n    <ng-template #showScore>\\n        <score-by-module [scoreResult]=\\\"resultScore\\\" [moduleName]=\\\"'Reading'\\\"></score-by-module>\\n        <div class=\\\"footer-button-block\\\">\\n            <cancel-btn>Cancel</cancel-btn>\\n        </div>\\n    </ng-template>\\n</header-evaluate-menu>\\n\\n<!-- <question-side-menu [questionList]=\\\"questionList\\\" (onSelectedQuestion)=\\\"onSelectedQuestion($event)\\\"></question-side-menu> -->\\n\\n\\n\"","export default \"<ng-container *ngIf=\\\"!isLoading\\\">\\n    <ng-container *ngIf=\\\"!scoreResult ; else showScore\\\">\\n        <header-evaluate-menu [questionCode]=\\\"routeParam.questionType\\\">\\n            <speaking-question [questionData]=\\\"selectedQuestion\\\" (answerEmit)=\\\"getAnswer($event)\\\"\\n                [isnonEvaluate]=\\\"true\\\">\\n            </speaking-question>\\n        </header-evaluate-menu>\\n\\n    </ng-container>\\n\\n    <ng-template #showScore>\\n        <header-evaluate-menu [questionCode]=\\\"routeParam.questionType\\\">\\n            <score-by-module [scoreResult]=\\\"scoreResult\\\" [moduleName]=\\\"'Speaking'\\\"></score-by-module>\\n\\n            <button class=\\\"btn btn-retry\\\" (click)=\\\"onRetry()\\\">\\n                <i class=\\\"fa fa-repeat\\\" aria-hidden=\\\"true\\\"></i>\\n                Retry\\n            </button>\\n            <div class=\\\"footer-button-block\\\">\\n                <cancel-btn>Cancel</cancel-btn>\\n                <button class=\\\"btn btn-next\\\" (click)=\\\"onEvaluate()\\\" *ngIf=\\\"!isFinal\\\">AI Scoring</button>\\n            </div>\\n\\n        </header-evaluate-menu>\\n    </ng-template>\\n\\n    <question-side-menu [questionList]=\\\"questionList\\\" (onSelectedQuestion)=\\\"onSelectedQuestion($event)\\\">\\n    </question-side-menu>\\n</ng-container>\"","export default \"<header-evaluate-menu [questionCode]=\\\"routeParam.questionType\\\">\\n    <ng-container [ngSwitch]=\\\"routeParam.questionType\\\">\\n        <ng-container *ngSwitchCase=\\\"'W001'\\\">\\n            <essay-question [essayDetail]=\\\"detailData\\\" (submitEvaluation)=\\\"onSubmit($event)\\\" *ngIf=\\\"!resultScore\\\"></essay-question>\\n            <evaluation-score [scoreData]=\\\"resultScore\\\" *ngIf=\\\"resultScore\\\"></evaluation-score>\\n        </ng-container>\\n\\n        <ng-container *ngSwitchCase=\\\"'W002'\\\">\\n          <summary-question [summaryDetail]=\\\"detailData\\\" (submitEvaluation)=\\\"onSubmit($event)\\\" *ngIf=\\\"!resultScore\\\"></summary-question>\\n          <summary-score [scoreData]=\\\"resultScore\\\" *ngIf=\\\"resultScore\\\"></summary-score>\\n        </ng-container>\\n    </ng-container>\\n    <div class=\\\"footer-button-block\\\" *ngIf=\\\"resultScore\\\">\\n        <cancel-btn></cancel-btn>\\n    </div>\\n</header-evaluate-menu>\\n\\n\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcHJhY3Rpc2UtZXZhbHVhdGUvbGlzdGVuaW5nLXByYWN0aXNlL2xpc3RlbmluZy1wcmFjdGlzZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { EvaluateQuestionService } from '@app/core/http/evaluate-question.service';\nimport { ListeningQuestionComponent } from '@app/shared/question-components/listening-question/listening-question.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-listening-practise',\n  templateUrl: './listening-practise.component.html',\n  styleUrls: ['./listening-practise.component.css']\n})\nexport class ListeningPractiseComponent implements OnInit {\n  @ViewChild(ListeningQuestionComponent, { static: false }) private listeningQuestion: ListeningQuestionComponent;\n  public routeParam: any;\n  public questionList: any;\n  public selectedIndex: number = 0;\n  private answerList: Array<any> = [];\n  private _subscription: Subscription;\n  public scoreResult:any;\n\n  constructor(private _activeRoute: ActivatedRoute, private _service: EvaluateQuestionService) { }\n\n  ngOnInit() {\n    this.routeParam = this._activeRoute.snapshot.params;\n    this.questionList = this._activeRoute.snapshot.data[\"questionDetail\"].questionList;\n\n  }\n\n  getAnswer(answer) {\n    this.answerList.push(answer);\n    if (this.selectedIndex == this.questionList.length - 1) {\n      let finalAnswer = {\n        userAnswers: this.answerList,\n        questionType: this.routeParam.questionType\n      }\n      this._subscription = this._service.onPractiseListeningEvaluate(finalAnswer, this.routeParam)\n        .subscribe((res) => {\n          this.scoreResult=res;\n        })\n    }\n    else {\n      this.selectedIndex += 1;\n    }\n  }\n\n  onTimeEnd(e) {\n    if (e.action === 'done')\n      this.listeningQuestion.onSubmit();\n  }\n\n  ngAfterViewInit(): void {\n    //Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\n    //Add 'implements AfterViewInit' to the class.\n    // console.log(this.listeningQuestion)\n  }\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    if (this._subscription) this._subscription.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WritingPractiseComponent } from './writing-practise/writing-practise.component';\nimport { ReadingPractiseComponent } from '@app/modules/practise-evaluate/reading-practise/reading-practise.component';\nimport { ListeningPractiseComponent } from '@app/modules/practise-evaluate/listening-practise/listening-practise.component';\nimport { SpeakingPractiseComponent } from '@app/modules/practise-evaluate/speaking-practise/speaking-practise.component';\nimport { BasicModule } from '@app/shared/basic-components/basic.module';\nimport { PracticeEvaluateRoutingModule } from '@app/modules/practise-evaluate/prasticeEvaluate-routing.module';\nimport { QuestionComponentsModule } from '@app/shared/question-components/question-components.module';\n\n\n\n@NgModule({\n  declarations: [\n    WritingPractiseComponent,\n    ReadingPractiseComponent,\n    ListeningPractiseComponent,\n    SpeakingPractiseComponent\n  ],\n  imports: [\n    CommonModule,\n    BasicModule,\n    QuestionComponentsModule,\n    PracticeEvaluateRoutingModule\n  ],\n  exports:[\n    PracticeEvaluateRoutingModule\n  ]\n})\nexport class PractiseEvaluateModule { }\n","\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PractiseEvaluateDetailResolver } from '@app/modules/practise-evaluate/reslovers/practise-evaluate-detail.reslover';\nimport { ListeningPractiseComponent } from '@app/modules/practise-evaluate/listening-practise/listening-practise.component';\nimport { ReadingPractiseComponent } from '@app/modules/practise-evaluate/reading-practise/reading-practise.component';\nimport { SpeakingPractiseComponent } from '@app/modules/practise-evaluate/speaking-practise/speaking-practise.component';\nimport { WritingPractiseComponent } from '@app/modules/practise-evaluate/writing-practise/writing-practise.component';\n\n\n\n\nconst routes: Routes = [\n  {\n    path: ':moduleName/:questionType/:questionId/writing-practise',\n    component: WritingPractiseComponent,\n    resolve:{\n      questionDetail:PractiseEvaluateDetailResolver\n    }\n  },\n  {\n    path: ':moduleName/:questionType/:questionId/reading-practise',\n    component: ReadingPractiseComponent,\n    resolve:{\n      questionDetail:PractiseEvaluateDetailResolver\n    }\n  },\n  {\n    path: ':moduleName/:questionType/:questionId/speaking-practise',\n    component: SpeakingPractiseComponent,\n    resolve:{\n      questionDetail:PractiseEvaluateDetailResolver\n    }\n  },\n  {\n    path: ':moduleName/:questionType/:questionId/listening-practise',\n    component: ListeningPractiseComponent,\n    resolve:{\n      questionDetail:PractiseEvaluateDetailResolver\n    }\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers:[\n    PractiseEvaluateDetailResolver\n  ]\n})\nexport class PracticeEvaluateRoutingModule { }","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcHJhY3Rpc2UtZXZhbHVhdGUvcmVhZGluZy1wcmFjdGlzZS9yZWFkaW5nLXByYWN0aXNlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { EvaluateQuestionService } from '@app/core/http/evaluate-question.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-reading-practise',\n  templateUrl: './reading-practise.component.html',\n  styleUrls: ['./reading-practise.component.css']\n})\nexport class ReadingPractiseComponent implements OnInit {\n  public questionList:any=[];\n  public routeParam:any;\n  public detailData:any;\n  public resultScore:any;\n\n  private _subscription:Subscription;\n  \n  constructor(private _activeRoute:ActivatedRoute,private readingService:EvaluateQuestionService) { }\n\n  ngOnInit() {\n    this.routeParam=this._activeRoute.snapshot.params;\n    this.detailData = this._activeRoute.snapshot.data[\"questionDetail\"];\n  }\n\n  getAnswer(answer){\n    this._subscription = this.readingService.onPractiseReadingEvaluate(answer, this.routeParam)\n    .subscribe((res) => {\n      this.resultScore = res;\n      this.resultScore.questionType=this.routeParam.questionType\n    })\n  }\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    if(this._subscription) this._subscription.unsubscribe();\n  }\n\n  onSelectedQuestion(ques){\n    this.detailData=ques;\n  }\n}\n","import { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DetailService } from '@app/core/http/detail.service';\n\n@Injectable()\nexport class PractiseEvaluateDetailResolver implements Resolve<any> {\n\n    constructor(private question: DetailService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot):\n        Observable<any> {\n        let moduleName=route.params['moduleName'].toLowerCase();\n        const routeUrl = `${moduleName}/${route.params['questionType']}/${route.params['questionId']}/${moduleName}-practise`;\n\n        return this.question.getDetail(routeUrl);\n    }\n}","export default \".btn-retry {\\n    background-color: #dedbdb;\\n    color: var(--text-fade-color);\\n    border: solid 1px;\\n    border-radius: 0;\\n    padding: 0.4em 1.3em;\\n    font-size: 1.2em;\\n    margin-bottom: -140px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wcmFjdGlzZS1ldmFsdWF0ZS9zcGVha2luZy1wcmFjdGlzZS9zcGVha2luZy1wcmFjdGlzZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLDZCQUE2QjtJQUM3QixpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLG9CQUFvQjtJQUNwQixnQkFBZ0I7SUFDaEIscUJBQXFCO0FBQ3pCIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wcmFjdGlzZS1ldmFsdWF0ZS9zcGVha2luZy1wcmFjdGlzZS9zcGVha2luZy1wcmFjdGlzZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ0bi1yZXRyeSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2RlZGJkYjtcbiAgICBjb2xvcjogdmFyKC0tdGV4dC1mYWRlLWNvbG9yKTtcbiAgICBib3JkZXI6IHNvbGlkIDFweDtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgIHBhZGRpbmc6IDAuNGVtIDEuM2VtO1xuICAgIGZvbnQtc2l6ZTogMS4yZW07XG4gICAgbWFyZ2luLWJvdHRvbTogLTE0MHB4O1xufSJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { EvaluateQuestionService } from '@app/core/http/evaluate-question.service';\nimport { SpeakingEvaluate } from '@app/shared/models/SpeakingModel';\nimport { SpeakingQuestionComponent } from '@app/shared/question-components/speaking-question/speaking-question.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-speaking-practise',\n  templateUrl: './speaking-practise.component.html',\n  styleUrls: ['./speaking-practise.component.css']\n})\nexport class SpeakingPractiseComponent implements OnInit {\n  @ViewChild(SpeakingQuestionComponent, { static: false }) private speakingQuestion: SpeakingQuestionComponent;\n\n\n  public routeParam: any;\n  public questionList: any;\n  public scoreResult: any;\n  public selectedQuestion: any;\n  public answers: any;\n  public isLoading:boolean=false;\n\n  private _subscription: Subscription;\n\n  constructor(private _activeRoute: ActivatedRoute, private _service: EvaluateQuestionService) { }\n\n  ngOnInit() {\n    this.routeParam = this._activeRoute.snapshot.params;\n    this.questionList = this._activeRoute.snapshot.data[\"questionDetail\"].questionList;\n    this.selectedQuestion = this.questionList[0].question;\n  }\n\n  onRetry() {\n    this.scoreResult = null;\n  }\n  getAnswer(answer: SpeakingEvaluate) {\n    this.answers = answer;\n    \n    if (answer.isNoEvaluate) {\n      this.scoreResult = {};\n      this.scoreResult.file = answer.blobUrl;\n      this.scoreResult.isNoEvaluate = answer.isNoEvaluate;\n      this.scoreResult.questionType = answer.questionType;\n      this.scoreResult.question = this.selectedQuestion.paragraph;\n      this.scoreResult.audioFile = this.selectedQuestion.audioFile;\n      this.scoreResult.imageFile = this.selectedQuestion.imageFile;\n    } else {\n      this._subscription = this._service.onPractiseSpeakingEvaluate(answer, this.routeParam)\n        .subscribe((res) => {\n          this.scoreResult = res;\n        })\n    }\n  }\n\n  onEvaluate() {\n    this.isLoading=true;\n    let ans:any={};\n    ans.file=this.answers.file;\n    ans.questionType=this.answers.questionType;\n    ans.questionId=this.answers.questionId;\n    this.scoreResult=null;\n  \n    this._subscription = this._service.onPractiseSpeakingEvaluate(ans, this.routeParam)\n      .subscribe((res) => {\n        this.scoreResult = res;\n        if(this.scoreResult)\n        this.scoreResult.isNoEvaluate=false;\n        this.isLoading=false;\n      })\n  }\n  onTimeEnd(e) {\n    if (e.action === 'done')\n      this.speakingQuestion.onSubmit();\n  }\n\n  ngAfterViewInit(): void {\n    //Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\n    //Add 'implements AfterViewInit' to the class.\n    // console.log(this.listeningQuestion)\n  }\n\n  onSelectedQuestion(ques) {\n    this.selectedQuestion = ques;\n    this.scoreResult = null;\n  }\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    if (this._subscription) this._subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcHJhY3Rpc2UtZXZhbHVhdGUvd3JpdGluZy1wcmFjdGlzZS93cml0aW5nLXByYWN0aXNlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { EvaluateQuestionService } from '@app/core/http/evaluate-question.service';\nimport { EssayQuestionComponent } from '@app/shared/question-components/essay-question/essay-question.component';\nimport { Subscription } from 'rxjs';\nimport { Options } from 'selenium-webdriver';\n\n@Component({\n  selector: 'app-writing-practise',\n  templateUrl: './writing-practise.component.html',\n  styleUrls: ['./writing-practise.component.css']\n})\nexport class WritingPractiseComponent implements OnInit {\n  public routeParam\n  public detailData: any;\n  public resultScore: any;\n\n  private _subscription: Subscription;\n\n\n  constructor(private _activeRoute: ActivatedRoute, private writingService: EvaluateQuestionService) { }\n\n \n\n  ngOnInit() {\n    this.routeParam = this._activeRoute.snapshot.params;\n    this.detailData = this._activeRoute.snapshot.data[\"questionDetail\"]\n  }\n\n  onSubmit(data) {\n    this._subscription = this.writingService.onPractiseWritingEvaluate(data, this.routeParam)\n      .subscribe((res) => {\n        this.resultScore = res;\n      })\n  }\n\n  ngOnDestroy(): void {\n    if (this._subscription)\n      this._subscription.unsubscribe();\n  }\n\n\n\n}\n"],"sourceRoot":"webpack:///"}