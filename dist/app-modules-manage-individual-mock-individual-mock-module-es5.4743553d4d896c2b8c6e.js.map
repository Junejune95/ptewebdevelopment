{"version":3,"sources":["src/app/modules/manage/individual-mock/individual-mock-create/individual-mock-create.component.html","src/app/modules/manage/individual-mock/mock-board/mock-board.component.html","src/app/modules/manage/individual-mock/mock-lists/mock-lists.component.html","src/app/modules/manage/individual-mock/mocks/mocks.component.html","src/app/modules/manage/individual-mock/individual-mock-create/individual-mock-create.component.css","src/app/modules/manage/individual-mock/individual-mock-create/individual-mock-create.component.ts","src/app/modules/manage/individual-mock/individual-mock.module.ts","src/app/modules/manage/individual-mock/individualMock-routing.module.ts","src/app/modules/manage/individual-mock/mock-board/mock-board.component.css","src/app/modules/manage/individual-mock/mock-board/mock-board.component.ts","src/app/modules/manage/individual-mock/mock-lists/mock-lists.component.css","src/app/modules/manage/individual-mock/mock-lists/mock-lists.component.ts","src/app/modules/manage/individual-mock/mocks/mocks.component.css","src/app/modules/manage/individual-mock/mocks/mocks.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,4/MAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,4ZAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,k7EAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,8KAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,4/BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACef,QAAa,6BAA6B,GAA1C,MAAa,6BAAb,CAA0C;AA0CxC,MAAA,WAAA,CACU,YADV,EAEU,WAFV,EAGU,aAHV,EAIU,YAJV,EAImC;AAHzB,aAAA,YAAA,GAAA,YAAA;AACA,aAAA,WAAA,GAAA,WAAA;AACA,aAAA,aAAA,GAAA,aAAA;AACA,aAAA,YAAA,GAAA,YAAA;AA3CH,aAAA,UAAA,GAAwB,KAAK,WAAL,CAAiB,KAAjB,CAAuB;AACpD,UAAA,IAAI,EAAE,CAAC,EAAD,EAAK,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAL,CAD8C;AAEpD,UAAA,MAAM,EAAE,CAAC,EAAD,EAAK,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAL;AAF4C,SAAvB,CAAxB;AAMA,aAAA,QAAA,GAAgB,EAAhB,CAqC4B,CAnCnC;;AACO,aAAA,OAAA,GAAmB,IAAnB;AACA,aAAA,SAAA,GAAqB,KAArB;AACA,aAAA,KAAA,GAAiB,IAAjB;AACA,aAAA,UAAA,GAAsB,IAAtB;AACA,aAAA,QAAA,GAAoB,KAApB,CA8B4B,CA5BnC;;AACO,aAAA,WAAA,GAAmB,CAAC,QAAD,EAAW,UAAX,CAAnB;AACA,aAAA,MAAA,GAAc;AACnB,UAAA,QAAQ,EAAE,EADS;AAEnB,UAAA,QAAQ,EAAE,KAFS;AAGnB,UAAA,SAAS,EAAE,IAHQ;AAInB,UAAA,YAAY,EAAE;AAJK,SAAd;AAcA,aAAA,WAAA,GAA2B;AAChC,UAAA,KAAK,EAAE,EADyB;AAEhC,UAAA,IAAI,EAAE,CAF0B;AAGhC,UAAA,UAAU,EAAE,aAHoB;AAIhC,UAAA,aAAa,EAAE,MAJiB;AAKhC,UAAA,MAAM,EAAE;AALwB,SAA3B;AAeN;;AAED,MAAA,QAAQ,GAAA;AACN,aAAK,UAAL,GAAkB,KAAK,YAAL,CAAkB,QAAlB,CAA2B,QAA3B,CAAoC,GAApC,CAAwC,YAAxC,CAAlB;AACA,aAAK,SAAL,GAAiB,KAAK,YAAL,CAAkB,QAAlB,CAA2B,IAA3B,CAAgC,cAAhC,EAAgD,SAAjE;AACA,aAAK,YAAL,GAAoB,KAAK,SAAL,CAAe,CAAf,CAApB;AACA,aAAK,MAAL,GAAc,KAAK,YAAL,CAAkB,QAAlB,CAA2B,QAA3B,CAAoC,GAApC,CAAwC,UAAxC,CAAd;;AACA,YAAI,KAAK,MAAT,EAAiB;AACf,eAAK,QAAL,GAAgB,KAAK,YAAL,CAAkB,QAAlB,CAA2B,IAA3B,CAAgC,YAAhC,CAAhB;AACA,eAAK,UAAL,GAAkB,KAAK,WAAL,CAAiB,KAAjB,CAAuB;AACvC,YAAA,IAAI,EAAE,CAAC,KAAK,QAAL,CAAc,MAAd,CAAD,EAAwB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAxB,CADiC;AAEvC,YAAA,MAAM,EAAE,CAAC,KAAK,QAAL,CAAc,QAAd,CAAD,EAA0B,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAA1B;AAF+B,WAAvB,CAAlB;AAID,SAND,MAQE,KAAK,QAAL,GAAgB,KAAK,uBAAL,EAAhB;AAEH;;AAGD,MAAA,uBAAuB,GAAA;AACrB,YAAI,UAAU,GAAG;AAAE,UAAA,IAAI,EAAE,EAAR;AAAY,UAAA,MAAM,EAAE,EAApB;AAAwB,UAAA,QAAQ,EAAE;AAAlC,SAAjB;AACA,aAAK,SAAL,CAAe,GAAf,CAAmB,CAAC,IAAG;AACrB,UAAA,UAAU,CAAC,CAAC,CAAC,YAAH,CAAV,GAA6B;AAAE,YAAA,gBAAgB,EAAE,EAApB;AAAwB,YAAA,IAAI,EAAE;AAA9B,WAA7B;AACD,SAFD;AAGA,eAAO,UAAP;AACD;;AAED,MAAA,SAAS,GAAA;AACP,aAAK,SAAL,GAAiB,IAAjB;AACA,YAAI,KAAK,UAAL,CAAgB,OAApB,EAA6B,OAA7B,KACK;AACH,eAAK,OAAL,GAAe,KAAf;AACA,eAAK,QAAL,CAAc,IAAd,GAAqB,KAAK,UAAL,CAAgB,KAAhB,CAAsB,MAAtB,CAArB;AACA,eAAK,QAAL,CAAc,MAAd,GAAuB,KAAK,UAAL,CAAgB,KAAhB,CAAsB,QAAtB,CAAvB;AAEA,eAAK,SAAL,GAAiB,KAAjB;AACA,eAAK,gBAAL;AACA,UAAA,UAAU,CAAC,MAAK;AACd,gBAAI,KAAK,gBAAT,EACE,KAAK,gBAAL,CAAsB,aAAtB,CAAoC,KAApC,GAA4C,KAAK,UAAL,GAAkB,gBAA9D;AACH,WAHS,EAGP,GAHO,CAAV;AAID;AAGF;;AAED,MAAA,SAAS,GAAA;AACP,aAAK,OAAL,GAAe,IAAf;AACD;;AAED,MAAA,KAAK,CAAC,WAAD,EAAY;AACf,YAAI,CAAC,KAAK,UAAL,GAAkB,gBAAnB,IAAuC,CAAC,KAAK,UAAL,GAAkB,IAAlB,CAAuB,MAAnE,EAA2E;AACzE,eAAK,QAAL,GAAgB,IAAhB;AACA,eAAK,MAAL,CAAY,QAAZ,GAAuB,kBAAvB;AACA;AACD,SAJD,MAKK;AACH,eAAK,SAAL,GAAiB,KAAjB;AACA,eAAK,WAAL,CAAiB,WAAjB;AACD;AAEF;;AAED,MAAA,WAAW,CAAC,IAAD,EAAK;AACd,aAAK,UAAL,GAAkB,IAAlB;;AACA,YAAI,IAAI,CAAC,YAAL,IAAqB,KAAK,YAAL,CAAkB,YAA3C,EAAyD;AACvD,eAAK,YAAL,GAAoB,IAApB;AACA,cAAI,KAAK,gBAAT,EACE,KAAK,gBAAL,CAAsB,aAAtB,CAAoC,KAApC,GAA4C,KAAK,UAAL,GAAkB,gBAA9D;AACF,eAAK,UAAL,GAAkB,IAAlB;AACA,eAAK,gBAAL;AACD;AAEF;;AAGD,MAAA,gBAAgB,GAAA;AACd,aAAK,YAAL,GAAoB,KAAK,aAAL,CAAmB,qBAAnB,CAAyC,KAAK,WAA9C,EAA2D;AAAE,UAAA,UAAU,EAAE,KAAK,UAAL,CAAgB,iBAAhB,EAAd;AAAmD,UAAA,YAAY,EAAE,KAAK,YAAL,CAAkB;AAAnF,SAA3D,EACjB,SADiB,CACN,GAAD,IAAuB;AAChC,eAAK,aAAL,GAAqB,GAAG,CAAC,SAAzB;AACA,eAAK,WAAL,GAAmB,GAAG,CAAC,MAAvB;AACA,eAAK,UAAL,GAAkB,KAAlB;AACD,SALiB,CAApB;AAMD;;AAGD,MAAA,OAAO,CAAC,KAAD,EAAM;AACX,aAAK,UAAL,GAAkB,gBAAlB,GAAqC,KAArC;AACD;;AAED,MAAA,MAAM,GAAA;AACJ,YAAI,CAAC,KAAK,UAAL,GAAkB,gBAAnB,IAAuC,CAAC,KAAK,UAAL,GAAkB,IAAlB,CAAuB,MAAnE,EAA2E;AACzE,eAAK,QAAL,GAAgB,IAAhB;AACA,eAAK,MAAL,CAAY,QAAZ,GAAuB,kBAAvB;AACD,SAHD,MAGO;AACL,cAAI,KAAK,WAAL,EAAJ,EAAwB;AACtB,iBAAK,QAAL,GAAgB,IAAhB;AACA,iBAAK,MAAL,CAAY,QAAZ,GAAuB,yCAAvB;AACA;AACD;;AACD,eAAK,SAAL,GAAiB,IAAjB;AACA,eAAK,UAAL,GAAkB,IAAlB;AACA,eAAK,WAAL,CAAiB,KAAK,YAAtB;AAGA,eAAK,YAAL,GAAoB,KAAK,YAAL,CAAkB,oBAAlB,CAAuC,KAAK,QAA5C,EAAsD,KAAK,UAA3D,EAAuE,KAAK,MAA5E,EAAoF,SAApF,CAA+F,GAAD,IAAQ;AACxH,iBAAK,UAAL,GAAkB,KAAlB;AACA,iBAAK,MAAL;AACD,WAHmB,CAApB;AAID;AAEF;;AAED,MAAA,WAAW,GAAA;AACT,YAAI,GAAJ;AACA,aAAK,SAAL,CAAe,GAAf,CAAmB,CAAC,IAAG;AACrB,UAAA,GAAG,GAAG,KAAK,QAAL,CAAc,CAAC,CAAC,YAAhB,EAA8B,IAA9B,CAAmC,MAAnC,IAA6C,CAAnD;;AACA,cAAI,GAAG,IAAI,IAAX,EAAiB;AACf,mBAAO,GAAP;AACD;AACF,SALD;AAMA,eAAO,GAAP;AACD;;AAED,MAAA,UAAU,CAAC,CAAD,EAAE;AACV,aAAK,WAAL,CAAiB,IAAjB,GAAwB,CAAxB;AACA,aAAK,gBAAL;AACD;;AAED,MAAA,UAAU,CAAC,UAAD,EAAW;AACnB,YAAI,KAAK,YAAL,CAAkB,UAAlB,CAAJ,EACE,KAAK,UAAL,GAAkB,IAAlB,CAAuB,MAAvB,CAA8B,KAAK,UAAL,GAAkB,IAAlB,CAAuB,OAAvB,CAA+B,UAA/B,CAA9B,EAA0E,CAA1E,EADF,KAGE,KAAK,UAAL,GAAkB,IAAlB,CAAuB,IAAvB,CAA4B,UAA5B;AACH;;AAED,MAAA,UAAU,GAAA;AACR,eAAO,KAAK,QAAL,CAAc,KAAK,YAAL,CAAkB,YAAhC,CAAP;AACD;;AAGD,MAAA,YAAY,CAAC,GAAD,EAAI;AACd,eAAO,KAAK,UAAL,GAAkB,IAAlB,CAAuB,QAAvB,CAAgC,GAAhC,CAAP;AACD;;AAED,UAAI,CAAJ,GAAK;AACH,eAAO,KAAK,UAAL,CAAgB,QAAvB;AACD;;AAED,MAAA,YAAY,CAAC,CAAD,EAAW;AACrB,aAAK,QAAL,GAAgB,KAAhB;AACD;;AAID,MAAA,MAAM,GAAA;AACJ,aAAK,YAAL,CAAkB,UAAlB;AACD;;AAED,MAAA,MAAM,CAAC,UAAD,EAAW;AACf,aAAK,KAAL,GAAa,CAAC,KAAK,KAAN,GAAc,KAAK,KAAL,GAAa,IAA3B,GAAkC,KAAK,KAAL,GAAa,KAA5D;AACA,aAAK,WAAL,CAAiB,aAAjB,GAAiC,KAAK,KAAL,GAAa,KAAb,GAAqB,MAAtD;AACA,aAAK,WAAL,CAAiB,UAAjB,GAA8B,UAA9B;AACA,aAAK,gBAAL;AACD;;AAGD,MAAA,WAAW,CAAC,CAAD,EAAE;AACX,aAAK,WAAL,CAAiB,MAAjB,GAA0B,CAA1B;AACA,aAAK,gBAAL;AACD;;AAGD,MAAA,WAAW,GAAA;AACT,YAAI,KAAK,YAAT,EACE,KAAK,YAAL,CAAkB,WAAlB;AACH;;AAlOuC,KAA1C;;;YA2C0B,4CAAA,CAAA,gBAAA;;YACD,2CAAA,CAAA,aAAA;;YACE,8DAAA,CAAA,kBAAA;;YACD,wDAAA,CAAA,aAAA;;;AA7C0B,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAjD,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,kBAAV,EAA8B;AAAE,MAAA,MAAM,EAAE;AAAV,KAA9B,CAAiD,E,uEAAA,CAAA,E,uCAAA,E,kBAAA,E,KAAyB,CAAzB;AADvC,IAAA,6BAA6B,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALzC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,4BADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,mJAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKyC,E,uEA2ChB,4CAAA,CAAA,gBAAA,C,EACD,2CAAA,CAAA,aAAA,C,EACE,8DAAA,CAAA,kBAAA,C,EACD,wDAAA,CAAA,aAAA,C,EA9CgB,CAAA,EAA7B,6BAA6B,CAA7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUb,QAAa,oBAAoB,GAAjC,MAAa,oBAAb,CAAiC,EAAjC;AAAa,IAAA,oBAAoB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAbhC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,YAAY,EAAE,CAAC,mDAAA,CAAA,gBAAA,CAAD,EAAiB,6DAAA,CAAA,oBAAA,CAAjB,EAAqC,6DAAA,CAAA,oBAAA,CAArC,EAAwD,wHAAA,CAAA,+BAAA,CAAxD,CADN;AAER,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,8FAAA,CAAA,6BAAA,CAFO,EAGP,sEAAA,CAAA,aAAA,CAHO,EAIP,2CAAA,CAAA,qBAAA,CAJO,EAKP,2CAAA,CAAA,aAAA,CALO,CAFD;AASR,MAAA,OAAO,EAAC,CACN,8FAAA,CAAA,6BAAA,CADM;AATA,KAAT,CAagC,CAAA,EAApB,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdb,UAAM,MAAM,GAAW,CACrB;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,SAAS,EAAE,sFAAA,CAAA,gBAAA,CAFb;AAGE,MAAA,OAAO,EAAE;AACP,QAAA,YAAY,EAAE,iFAAA,CAAA,uBAAA;AADP,OAHX;AAME,MAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE;AADF,OANR;AASE,MAAA,QAAQ,EAAC,CACP;AACE,QAAA,IAAI,EAAE,EADR;AAEE,QAAA,SAAS,EAAC,gGAAA,CAAA,oBAAA;AAFZ,OADO,EAKP;AACE,QAAA,IAAI,EAAE,aADR;AAEE,QAAA,SAAS,EAAC,gGAAA,CAAA,oBAAA;AAFZ,OALO,EASP;AACE,QAAA,IAAI,EAAE,oBADR;AAEE,QAAA,SAAS,EAAC,wHAAA,CAAA,+BAAA,CAFZ;AAGE,QAAA,OAAO,EAAC;AACN,UAAA,YAAY,EAAC,kFAAA,CAAA,sBAAA;AADP;AAHV,OATO,EAgBP;AACE,QAAA,IAAI,EAAE,8BADR;AAEE,QAAA,SAAS,EAAC,wHAAA,CAAA,+BAAA,CAFZ;AAGE,QAAA,OAAO,EAAC;AACN,UAAA,YAAY,EAAC,kFAAA,CAAA,sBAAA,CADP;AAEN,UAAA,UAAU,EAAC,gFAAA,CAAA,qBAAA;AAFL,SAHV;AAOE,QAAA,IAAI,EAAE;AACJ,UAAA,UAAU,EAAE;AADR;AAPR,OAhBO;AATX,KADqB,CAAvB;AAqDA,QAAa,2BAA2B,GAAxC,MAAa,2BAAb,CAAwC,EAAxC;AAAa,IAAA,2BAA2B,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAVvC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CAAD,CADD;AAER,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAD,CAFD;AAGR,MAAA,SAAS,EAAE,CACT,iFAAA,CAAA,uBAAA,CADS,EAET,gFAAA,CAAA,qBAAA,CAFS,EAGT,kFAAA,CAAA,sBAAA,CAHS;AAHH,KAAT,CAUuC,CAAA,EAA3B,2BAA2B,CAA3B;;;;;;;;;;;;;;;;AChEb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,QAAa,kBAAkB,GAA/B,MAAa,kBAAb,CAA+B;AAI7B,MAAA,WAAA,CAAoB,YAApB,EAAwD,OAAxD,EAAsE;AAAlD,aAAA,YAAA,GAAA,YAAA;AAAoC,aAAA,OAAA,GAAA,OAAA;AAAmB;;AAE3E,MAAA,QAAQ,GAAA;AACN,aAAK,YAAL,GAAkB,KAAK,YAAL,CAAkB,QAAlB,CAA2B,IAA3B,CAAgC,cAAhC,CAAlB;AACD;;AAED,MAAA,QAAQ,CAAC,IAAD,EAAK;AACX,aAAK,OAAL,CAAa,QAAb,CAAsB,CAAC,IAAI,CAAC,UAAN,CAAtB,EAAyC;AAAE,UAAA,UAAU,EAAE,KAAK;AAAnB,SAAzC;AAED;;AAb4B,KAA/B;;;YAImC,4CAAA,CAAA,gBAAA;;YAA+B,4CAAA,CAAA,QAAA;;;AAJrD,IAAA,kBAAkB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL9B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,gBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,2HAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK8B,E,uEAII,4CAAA,CAAA,gBAAA,C,EAA+B,4CAAA,CAAA,QAAA,C,EAJnC,CAAA,EAAlB,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACTb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,07DAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,kBAAkB,GAA/B,MAAa,kBAAb,CAA+B;AAQ7B,MAAA,WAAA,CAAoB,YAApB,EAA0D,aAA1D,EAAyF;AAArE,aAAA,YAAA,GAAA,YAAA;AAAsC,aAAA,aAAA,GAAA,aAAA;AALnD,aAAA,WAAA,GAA2B,EAA3B;AACA,aAAA,SAAA,GAAqB,KAArB;AAIwF;;AAE/F,MAAA,QAAQ,GAAA;AACN,aAAK,SAAL,GAAiB,IAAjB;AACA,aAAK,aAAL,GAAqB,KAAK,YAAL,CAAkB,QAAlB,CAA2B,MAA3B,CAAkC,YAAlC,CAArB;;AAEA,aAAK,YAAL,CAAkB,WAAlB,CAA8B,SAA9B,CACG,MAAD,IAAW;AAET,cAAI,MAAM,CAAC,IAAX,EAAiB;AACf,iBAAK,WAAL,CAAiB,IAAjB,GAAwB,MAAM,CAAC,IAA/B;AACA,iBAAK,WAAL,CAAiB,KAAjB,GAAyB,MAAM,CAAC,KAAhC;AACD,WAHD,MAGO,IAAI,MAAM,CAAC,MAAX,EAAmB;AACxB,iBAAK,WAAL,CAAiB,MAAjB,GAA0B,MAAM,CAAC,MAAjC;AACD,WAFM,MAEA;AACL,iBAAK,WAAL,CAAiB,IAAjB,GAAwB,CAAxB;AACA,iBAAK,WAAL,CAAiB,KAAjB,GAAyB,EAAzB;AACA,iBAAK,WAAL,CAAiB,aAAjB,GAAiC,MAAjC;AACA,iBAAK,WAAL,CAAiB,UAAjB,GAA8B,MAA9B;AACD;;AACD,eAAK,WAAL;AACD,SAfH;AAiBD;;AAED,MAAA,WAAW,GAAA;AAET,aAAK,YAAL,GAAoB,KAAK,aAAL,CAAmB,WAAnB,CAA+B,KAAK,WAApC,EAAiD,KAAK,aAAtD,EACjB,SADiB,CACN,GAAD,IAA4B;AACrC,eAAK,KAAL,GAAa,GAAG,CAAC,SAAjB;AACA,eAAK,WAAL,GAAmB,GAAG,CAAC,MAAvB;AACA,eAAK,SAAL,GAAiB,KAAjB;AACD,SALiB,CAApB;AAMD;;AAED,MAAA,UAAU,CAAC,IAAD,EAAK;AACb,YAAI,GAAG,GAAG;AACR,UAAA,QAAQ,EAAE,IAAI,CAAC;AADP,SAAV;AAGA,aAAK,YAAL,GAAoB,KAAK,aAAL,CAAmB,wBAAnB,CAA4C,IAAI,CAAC,IAAL,CAAU,UAAtD,EAAkE,GAAlE,EAAuE,KAAK,aAA5E,EAA2F,SAA3F,CAAsG,GAAD,IAAQ;AAC/H,eAAK,WAAL;AACD,SAFmB,CAApB;AAGD;;AAGD,MAAA,UAAU,CAAC,IAAD,EAAK;AACb,aAAK,YAAL,GAAoB,KAAK,aAAL,CAAmB,mBAAnB,CAAuC,IAAI,CAAC,UAA5C,EAAwD,KAAK,aAAL,CAAmB,WAAnB,EAAxD,EAA0F,WAA1F,EACjB,SADiB,CACN,GAAD,IAAQ;AACjB,eAAK,WAAL;AACD,SAHiB,CAApB;AAID;;AAED,MAAA,WAAW,GAAA;AACT;AACA;AACA,YAAI,KAAK,YAAT,EAAuB,KAAK,YAAL,CAAkB,WAAlB;AACxB;;AAhE4B,KAA/B;;;YAQoC,4CAAA,CAAA,gBAAA;;YAAuC,wDAAA,CAAA,kBAAA;;;AAR9D,IAAA,kBAAkB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL9B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,gBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,2HAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK8B,E,uEAQK,4CAAA,CAAA,gBAAA,C,EAAuC,wDAAA,CAAA,kBAAA,C,EAR5C,CAAA,EAAlB,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACbb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iOAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOf,QAAa,cAAc,GAA3B,MAAa,cAAb,CAA2B;AAEzB,MAAA,WAAA,GAAA,CAAiB;;AAEjB,MAAA,QAAQ,GAAA,CACP;;AALwB,KAA3B;AAAa,IAAA,cAAc,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL1B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,WADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,iHAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK0B,E,yEAAA,CAAA,EAAd,cAAc,CAAd","sourcesContent":["export default \"<header-route-menu-light [currentPageName]=\\\"'Individual Mock Test'\\\" [moduleName]=\\\"moduleName\\\"></header-route-menu-light>\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\"d-flex step-wrapper\\\">\\n        <div class=\\\"step-1\\\" [ngClass]=\\\"{ 'step-active': isStep1 == true }\\\">\\n            <p>Step 1</p>\\n        </div>\\n        <div class=\\\"step-2\\\" [ngClass]=\\\"{ 'step-active': isStep1 == false }\\\">\\n            <p>Step 2</p>\\n        </div>\\n    </div>\\n\\n    <div *ngIf=\\\"isStep1\\\">\\n        <form [formGroup]=\\\"createForm\\\">\\n            <div class=\\\"row my-2\\\">\\n                <div class=\\\"col-md-12 mb-2\\\">\\n                    <label-text>Mock Test Title</label-text>\\n                    <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control pb_height-50 reverse;\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\" placeholder=\\\"Write Mock Test Title\\\" />\\n                </div>\\n            </div>\\n            <div class=\\\"row mb-2\\\">\\n                <div class=\\\"col-md-12 mb-2\\\">\\n                    <label-text>Select Status</label-text>\\n                    <select  class=\\\"select-box form-control\\\" formControlName=\\\"status\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.status.errors }\\\">\\n                        <option value=\\\"\\\" disabled selected hidden>Select Status</option>\\n\\n                        <option *ngFor=\\\"let status of statusLists\\\" [ngValue]=\\\"status\\\">{{ status }}\\n                        </option>\\n                    </select>\\n               \\n                </div>\\n            </div>\\n            <div class=\\\"footer-button-block\\\">\\n                <cancel-btn>Cancel</cancel-btn>\\n                <button class=\\\"btn btn-next\\\" (click)=\\\"goToStep2()\\\">Continue</button>\\n            </div>\\n        </form>\\n    </div>\\n    <dialog-box *ngIf=\\\"isDialog\\\" [dialogEntry]=\\\"dialog\\\" (onconfirm)=\\\"onSubmit($event)\\\"></dialog-box>\\n    <div *ngIf=\\\"!isStep1\\\" class=\\\"d-flex flex-column\\\">\\n        <div class=\\\"tab-wrapper\\\">\\n            <div class=\\\"d-flex align-items-end\\\">\\n                <button [class]=\\\"selectedType.questionType === type.questionType ? 'tab-active' : 'tab-default'\\\"\\n                    (click)=\\\"onTab(type)\\\" *ngFor=\\\"let type of qTypeList; let i = index\\\">\\n                    {{ type.questionType }}\\n                </button>\\n            </div>\\n            <div class=\\\"tab-block\\\">\\n                <div class=\\\"row my-2 mark-wrapper\\\">\\n                    <div class=\\\"col-md-12 mb-2\\\">\\n                        <label class=\\\"lbl-text\\\">Mark Distribution(OUT OF 100)</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                            (input)=\\\"onInput($event.target.value)\\\"\\n                            oninput=\\\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\\\"\\n                            [ngClass]=\\\"{ 'is-invalid': submitted && !getMockObj.markDistribution }\\\"\\n                            placeholder=\\\"Write Mock Test Title\\\" #markDistribution/>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <show-entries (data)=\\\"selectedData($event)\\\"></show-entries>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <search-box [hint]=\\\"'Search Question'\\\" (searchData)=\\\"searchDatas($event)\\\" [isEmit]=\\\"true\\\">\\n                        </search-box>\\n                    </div>\\n                </div>\\n\\n                <ng-container *ngIf=\\\"isProgress; else showData\\\">\\n                    <div>\\n                        <table-loading [tType]=\\\"'c4-1'\\\"></table-loading>\\n                    </div>\\n                </ng-container>\\n                <ng-template #showData>\\n                    <table role=\\\"table\\\" class=\\\"table-responsive\\\">\\n                        <thead role=\\\"rowgroup\\\">\\n                            <tr role=\\\"row\\\">\\n                                <th role=\\\"columnheader\\\" (click)=\\\"fitter('createdDate')\\\" class=\\\"fitter-able\\\"\\n                                    [class.fitter-active]='tableFilter.sortColumn==\\\"createdDate\\\"'>Created Date</th>\\n\\n                                <th role=\\\"columnheader\\\" (click)=\\\"fitter('name')\\\" class=\\\"fitter-able\\\"\\n                                    [class.fitter-active]='tableFilter.sortColumn==\\\"name\\\"'>Name</th>\\n\\n                                <th role=\\\"columnheader\\\">Question Name</th>\\n\\n                                <th role=\\\"columnheader\\\" style=\\\"width: 20%;\\\">Action</th>\\n                            </tr>\\n                        </thead>\\n\\n                        <tbody role=\\\"rowgroup\\\">\\n                            <ng-container *ngFor=\\\"let data of questionLists\\\">\\n                                <tr role=\\\"row\\\" (click)=\\\"selectfile(data.questionId)\\\"\\n                                    [class.table-selected]=\\\"isQIdInclude(data.questionId)== true\\\">\\n                                    <td role=\\\"cell\\\">{{data.createdDate | defaultDate}}</td>\\n\\n                                    <td role=\\\"cell\\\">{{data.name}}</td>\\n                                    <td role=\\\"cell\\\">{{data.questionType}}</td>\\n                                    <td>\\n                                        <action-btn-gp [btnName]=\\\"'view'\\\" [directLink]=\\\"\\\" isNewTab=\\\"true\\\">\\n                                        </action-btn-gp>\\n                                    </td>\\n                                </tr>\\n                            </ng-container>\\n\\n                            <tr *ngIf=\\\"tableFilter.totalCount == 0\\\" role=\\\"row\\\">\\n                                <td colspan=\\\"4\\\" class=\\\"text-center\\\">\\n                                    No Data Exit\\n                                </td>\\n                            </tr>\\n                        </tbody>\\n\\n                    </table>\\n\\n                        <pagination [tableFilter]='tableFilter' (getPage)=\\\"changePage($event)\\\">\\n                        </pagination>\\n\\n                    <div class=\\\"footer-button-block\\\">\\n                        <button class=\\\"btn btn-cancel\\\" (click)=\\\"backStep1()\\\">Cancel</button>\\n                        <button class=\\\"btn btn-next\\\" (click)=\\\"onSave()\\\">Submit</button>\\n                    </div>\\n\\n                    <dialog-box *ngIf=\\\"isDialog\\\" (onconfirm)=\\\"checkconfirm($event)\\\" [dialogEntry]=\\\"dialog\\\"></dialog-box>\\n\\n                </ng-template>\\n            </div>\\n\\n        </div>\\n\\n\\n\\n    </div>\\n</div>\"","export default \"<header-route-menu-light [currentPageName]=\\\"'Mock Test'\\\" [moduleName]=\\\"'Question Bank'\\\"\\n></header-route-menu-light>\\n<div class=\\\"row\\\">\\n    <ng-container *ngFor=\\\"let qb of questionBank.questionBank\\\">\\n        <div class=\\\"col-md-6 col-xl-3\\\">\\n            <question-card [questionBank]=\\\"qb\\\" (click)=\\\"goToList(qb)\\\" [isManage]=\\\"true\\\"></question-card>\\n        </div>\\n    </ng-container>\\n</div>\\n\"","export default \"<header-route-menu-light [currentPageName]=\\\"'Question Bank'\\\" [moduleName]=\\\"currentModule\\\"\\n    [prevUrl]=\\\"'../'\\\"\\n    [createRoute]=\\\"'alchemist-academy/manage/full-mock-test/create'\\\"></header-route-menu-light>\\n\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 p-0\\\">\\n        <show-entries></show-entries>\\n    </div>\\n    <div class=\\\"col-md-6 p-0\\\">\\n        <search-box [hint]=\\\"'Search'\\\"></search-box>\\n    </div>\\n</div>\\n<ng-container *ngIf=\\\"isLoading; else showData\\\">\\n    <div>\\n        <table-loading [tType]=\\\"'c3-3'\\\"></table-loading>\\n    </div>\\n\\n</ng-container>\\n<ng-template #showData>\\n    <table role=\\\"table\\\" class=\\\"table-responsive\\\">\\n        <thead role=\\\"rowgroup\\\">\\n            <tr role=\\\"row\\\">\\n                <th role=\\\"columnheader\\\" class=\\\"fitter-able\\\" (click)=\\\"fitter('name')\\\"\\n                    [class.fitter-active]='tableFilter.sortColumn==\\\"name\\\"'>Name</th>\\n\\n                <th role=\\\"columnheader\\\" style=\\\"width: 30%;\\\">Status</th>\\n\\n                <th role=\\\"columnheader\\\" style=\\\"width: 15%;\\\">Action</th>\\n            </tr>\\n        </thead>\\n\\n\\n        <tbody role=\\\"rowgroup\\\" [class]=\\\"currentModule.moduleName\\\">\\n            <ng-container *ngFor=\\\"let data of mocks\\\">\\n                <tr role=\\\"row\\\">\\n                    <td role=\\\"cell\\\">{{data.name}}</td>\\n                    <td role=\\\"cell\\\">{{data.status}}</td>\\n                    <td>\\n                        <action-btn-gp [btnName]=\\\"'start'\\\" [data]=\\\"data\\\" *ngIf=\\\"data.isActive == 'Not Active'\\\"\\n                            (onSubmit)=\\\"startClass($event)\\\"></action-btn-gp>\\n                        <action-btn-gp [btnName]=\\\"'end'\\\" [data]=\\\"data\\\" *ngIf=\\\"data.isActive == 'Running'\\\"\\n                            (onSubmit)=\\\"startClass($event)\\\"></action-btn-gp>\\n                        <action-btn-gp [btnName]=\\\"'edit'\\\" [editId]=\\\"data.questionId\\\"></action-btn-gp>\\n                        <action-btn-gp [btnName]=\\\"'delete'\\\" [data]=\\\"data\\\" (onSubmit)=\\\"deleteMock($event)\\\">\\n                        </action-btn-gp>\\n                    </td>\\n\\n            </ng-container>\\n\\n\\n\\n            <tr *ngIf=\\\"tableFilter.totalCount == 0\\\" role=\\\"row\\\">\\n                <td colspan=\\\"4\\\" class=\\\"text-center\\\">\\n                    No Data Exit\\n                </td>\\n            </tr>\\n        </tbody>\\n\\n    </table>\\n\\n        <pagination [totalCount]='tableFilter.totalCount'>\\n        </pagination>\\n\\n</ng-template>\"","export default \"\\n<header-route-menu [currentPageName]=\\\"'Manage'\\\"></header-route-menu>\\n\\n<div class=\\\"container-fluid mt--6\\\">\\n\\n   <router-outlet></router-outlet>\\n   \\n\\n</div>\\n\\n\\n\"","export default \".mark-wrapper {\\n    background: var(--sidemenu-active);\\n    padding: 15px;\\n    border-radius: 10px;\\n}\\n\\n.lbl-text{\\n    color: var(--primary-color);\\n    font-weight: 500;\\n    font-size: 18;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9tYW5hZ2UvaW5kaXZpZHVhbC1tb2NrL2luZGl2aWR1YWwtbW9jay1jcmVhdGUvaW5kaXZpZHVhbC1tb2NrLWNyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0NBQWtDO0lBQ2xDLGFBQWE7SUFDYixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSwyQkFBMkI7SUFDM0IsZ0JBQWdCO0lBQ2hCLGFBQWE7QUFDakIiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL21hbmFnZS9pbmRpdmlkdWFsLW1vY2svaW5kaXZpZHVhbC1tb2NrLWNyZWF0ZS9pbmRpdmlkdWFsLW1vY2stY3JlYXRlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFyay13cmFwcGVyIHtcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1zaWRlbWVudS1hY3RpdmUpO1xuICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbn1cblxuLmxibC10ZXh0e1xuICAgIGNvbG9yOiB2YXIoLS1wcmltYXJ5LWNvbG9yKTtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGZvbnQtc2l6ZTogMTg7XG59Il19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SaveService } from '@app/core/http/save.service';\nimport { TableListService } from '@app/core/http/table-list.service';\nimport { QuestionsList } from '@app/shared/models/question-list';\nimport { TableFilter } from '@app/shared/models/table-filter';\n\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-individual-mock-create',\n  templateUrl: './individual-mock-create.component.html',\n  styleUrls: ['./individual-mock-create.component.css']\n})\nexport class IndividualMockCreateComponent implements OnInit {\n  @ViewChild('markDistribution', { static: false }) private markDistribution;\n\n  public createForm: FormGroup = this.formBuilder.group({\n    name: [\"\", [Validators.required]],\n    status: [\"\", [Validators.required]],\n  });\n\n  public selectedType: any;\n  public mockData: any = [];\n\n  // boolean\n  public isStep1: boolean = true\n  public submitted: boolean = false\n  public isAsc: boolean = true\n  public isProgress: boolean = true;\n  public isDialog: boolean = false\n\n  // any\n  public statusLists: any = [\"ACTIVE\", \"INACTIVE\"]\n  public dialog: any = {\n    showText: \"\",\n    isDelete: false,\n    isWarning: true,\n    isconfirmBtn: false\n  }\n  public questionLists: any\n  public mockId: any\n  // table\n\n  public moduleName: string;\n  public subscription: Subscription\n  public qTypeList: any;\n\n  public tableFilter = <TableFilter>{\n    limit: 10,\n    page: 1,\n    sortColumn: 'createdDate',\n    sortDirection: 'desc',\n    search: ''\n  };\n\n  constructor(\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _tableService: TableListService,\n    private _saveService: SaveService\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.moduleName = this._activeRoute.snapshot.paramMap.get(\"moduleName\");\n    this.qTypeList = this._activeRoute.snapshot.data['questionType'].questions;\n    this.selectedType = this.qTypeList[0];\n    this.mockId = this._activeRoute.snapshot.paramMap.get(\"detailId\");\n    if (this.mockId) {\n      this.mockData = this._activeRoute.snapshot.data['mockDetail']\n      this.createForm = this.formBuilder.group({\n        name: [this.mockData['name'], [Validators.required]],\n        status: [this.mockData['status'], [Validators.required]],\n      });\n    }\n    else\n      this.mockData = this.generateMockFinalFormat();\n\n  }\n\n\n  generateMockFinalFormat() {\n    let createData = { name: '', status: '', duration: 0 }\n    this.qTypeList.map(q => {\n      createData[q.questionType] = { markDistribution: '', list: [] }\n    })\n    return createData\n  }\n\n  goToStep2() {\n    this.submitted = true\n    if (this.createForm.invalid) return\n    else {\n      this.isStep1 = false;\n      this.mockData.name = this.createForm.value['name'];\n      this.mockData.status = this.createForm.value['status'];\n\n      this.submitted = false;\n      this.getQuestionLists();\n      setTimeout(() => {\n        if (this.markDistribution)\n          this.markDistribution.nativeElement.value = this.getMockObj().markDistribution;\n      }, 100);\n    }\n\n\n  }\n\n  backStep1() {\n    this.isStep1 = true;\n  }\n\n  onTab(seletedType) {\n    if (!this.getMockObj().markDistribution || !this.getMockObj().list.length) {\n      this.isDialog = true\n      this.dialog.showText = \"Select Question.\"\n      return\n    }\n    else {\n      this.submitted = false;\n      this.addMockData(seletedType);\n    }\n\n  }\n\n  addMockData(type) {\n    this.isProgress = true;\n    if (type.questionType != this.selectedType.questionType) {\n      this.selectedType = type;\n      if (this.markDistribution)\n        this.markDistribution.nativeElement.value = this.getMockObj().markDistribution;\n      this.isProgress = true;\n      this.getQuestionLists();\n    }\n\n  }\n\n\n  getQuestionLists() {\n    this.subscription = this._tableService.getManageQuestionList(this.tableFilter, { moduleType: this.moduleName.toLocaleLowerCase(), questionType: this.selectedType.questionType })\n      .subscribe((res: QuestionsList) => {\n        this.questionLists = res.questions;\n        this.tableFilter = res.filter;\n        this.isProgress = false;\n      })\n  }\n\n\n  onInput(value) {\n    this.getMockObj().markDistribution = value;\n  }\n\n  onSave() {\n    if (!this.getMockObj().markDistribution || !this.getMockObj().list.length) {\n      this.isDialog = true\n      this.dialog.showText = \"Select Question.\"\n    } else {\n      if (this.isEmptyMock()) {\n        this.isDialog = true\n        this.dialog.showText = \"Select question for all questions type.\"\n        return\n      }\n      this.submitted = true\n      this.isProgress = true\n      this.addMockData(this.selectedType);\n\n\n      this.subscription = this._saveService.onSaveIndividualMock(this.mockData, this.moduleName, this.mockId).subscribe((res) => {\n        this.isProgress = false\n        this.goBack();\n      })\n    }\n\n  }\n\n  isEmptyMock() {\n    let res: boolean;\n    this.qTypeList.map(q => {\n      res = this.mockData[q.questionType].list.length == 0;\n      if (res == true) {\n        return res;\n      }\n    });\n    return res;\n  }\n\n  changePage(e) {\n    this.tableFilter.page = e;\n    this.getQuestionLists();\n  }\n\n  selectfile(selectedId) {\n    if (this.isQIdInclude(selectedId))\n      this.getMockObj().list.splice(this.getMockObj().list.indexOf(selectedId), 1);\n    else\n      this.getMockObj().list.push(selectedId)\n  }\n\n  getMockObj() {\n    return this.mockData[this.selectedType.questionType];\n  }\n\n\n  isQIdInclude(qId) {\n    return this.getMockObj().list.includes(qId)\n  }\n\n  get f() {\n    return this.createForm.controls;\n  }\n\n  checkconfirm(e: boolean) {\n    this.isDialog = false;\n  }\n\n\n\n  goBack() {\n    this._saveService.goBackPrev();\n  }\n\n  fitter(sortColumn) {\n    this.isAsc = !this.isAsc ? this.isAsc = true : this.isAsc = false;\n    this.tableFilter.sortDirection = this.isAsc ? 'asc' : 'desc';\n    this.tableFilter.sortColumn = sortColumn;\n    this.getQuestionLists();\n  }\n\n\n  searchDatas(e) {\n    this.tableFilter.search = e\n    this.getQuestionLists();\n  }\n\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe()\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MocksComponent } from './mocks/mocks.component';\nimport { MockBoardComponent } from './mock-board/mock-board.component';\nimport { MockListsComponent } from './mock-lists/mock-lists.component';\nimport { IndividualMockRoutingModule } from '@app/modules/manage/individual-mock/individualMock-routing.module';\nimport { BasicModule } from '@app/shared/basic-components/basic.module';\nimport { IndividualMockCreateComponent } from '@app/modules/manage/individual-mock/individual-mock-create/individual-mock-create.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [MocksComponent, MockBoardComponent, MockListsComponent,IndividualMockCreateComponent],\n  imports: [\n    CommonModule,\n    IndividualMockRoutingModule,\n    BasicModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  exports:[\n    IndividualMockRoutingModule,\n  ]\n})\nexport class IndividualMockModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, Route } from \"@angular/router\";\nimport { OtherDetailResolver } from '@app/modules/manage/reslovers/other-detail.reslover';\nimport { OtherQuestionResolver } from '@app/modules/manage/reslovers/otherQuestion.reslover';\nimport { QuestionTypeResolver } from '@app/modules/manage/reslovers/questions-type.reslover';\nimport { IndividualMockCreateComponent } from '@app/modules/manage/individual-mock/individual-mock-create/individual-mock-create.component';\nimport { MockBoardComponent } from '@app/modules/manage/individual-mock/mock-board/mock-board.component';\nimport { MockListsComponent } from '@app/modules/manage/individual-mock/mock-lists/mock-lists.component';\nimport { MocksComponent } from '@app/modules/manage/individual-mock/mocks/mocks.component';\n\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: MocksComponent,\n    resolve: {\n      questionBank: OtherQuestionResolver\n    },\n    data: {\n      type: 'mock-test'\n    },\n    children:[\n      {\n        path: \"\",\n        component:MockBoardComponent,\n      },\n      {\n        path: \":moduleName\",\n        component:MockListsComponent,\n      },\n      {\n        path: \":moduleName/create\",\n        component:IndividualMockCreateComponent,\n        resolve:{\n          questionType:QuestionTypeResolver\n        }\n      },\n      {\n        path: \":moduleName/create/:detailId\",\n        component:IndividualMockCreateComponent,\n        resolve:{\n          questionType:QuestionTypeResolver,\n          mockDetail:OtherDetailResolver\n        },\n        data: {\n          detailName: 'mock-test'\n        },\n      }\n    ]\n\n  }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    OtherQuestionResolver,\n    OtherDetailResolver,\n    QuestionTypeResolver\n  ]\n})\n\nexport class IndividualMockRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL2luZGl2aWR1YWwtbW9jay9tb2NrLWJvYXJkL21vY2stYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CheckProgress } from '@app/shared/models/check-progress';\n\n@Component({\n  selector: 'app-mock-board',\n  templateUrl: './mock-board.component.html',\n  styleUrls: ['./mock-board.component.css']\n})\nexport class MockBoardComponent implements OnInit {\n\n  public questionBank:CheckProgress;\n\n  constructor(private _activeRoute:ActivatedRoute,private _router:Router) { }\n\n  ngOnInit() {\n    this.questionBank=this._activeRoute.snapshot.data[\"questionBank\"];\n  }\n\n  goToList(data){\n    this._router.navigate([data.moduleType], { relativeTo: this._activeRoute });\n\n  }\n\n}\n","export default \"\\n/* table responsive */\\n\\n@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {\\n    /*\\n                      Label the data\\n                  You could also use a data-* attribute and content for this. That way \\\"bloats\\\" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.\\n                      */\\n    td:nth-of-type(1):before {\\n        content: \\\"Name\\\";\\n    }\\n    td:nth-of-type(2):before {\\n        content: \\\"Status\\\";\\n    }\\n    td:nth-of-type(3):before {\\n        content: \\\"Action\\\";\\n    }\\n\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9tYW5hZ2UvaW5kaXZpZHVhbC1tb2NrL21vY2stbGlzdHMvbW9jay1saXN0cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxxQkFBcUI7O0FBRXJCO0lBQ0k7Ozt1QkFHbUI7SUFDbkI7UUFDSSxlQUFlO0lBQ25CO0lBQ0E7UUFDSSxpQkFBaUI7SUFDckI7SUFDQTtRQUNJLGlCQUFpQjtJQUNyQjs7QUFFSiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL2luZGl2aWR1YWwtbW9jay9tb2NrLWxpc3RzL21vY2stbGlzdHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLyogdGFibGUgcmVzcG9uc2l2ZSAqL1xuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2MHB4KSwgKG1pbi1kZXZpY2Utd2lkdGg6IDc2OHB4KSBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDEwMjRweCkge1xuICAgIC8qXG4gICAgICAgICAgICAgICAgICAgICAgTGFiZWwgdGhlIGRhdGFcbiAgICAgICAgICAgICAgICAgIFlvdSBjb3VsZCBhbHNvIHVzZSBhIGRhdGEtKiBhdHRyaWJ1dGUgYW5kIGNvbnRlbnQgZm9yIHRoaXMuIFRoYXQgd2F5IFwiYmxvYXRzXCIgdGhlIEhUTUwsIHRoaXMgd2F5IG1lYW5zIHlvdSBuZWVkIHRvIGtlZXAgSFRNTCBhbmQgQ1NTIGluIHN5bmMuIExlYSBWZXJvdSBoYXMgYSBjbGV2ZXIgd2F5IHRvIGhhbmRsZSB3aXRoIHRleHQtc2hhZG93LlxuICAgICAgICAgICAgICAgICAgICAgICovXG4gICAgdGQ6bnRoLW9mLXR5cGUoMSk6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJOYW1lXCI7XG4gICAgfVxuICAgIHRkOm50aC1vZi10eXBlKDIpOmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiU3RhdHVzXCI7XG4gICAgfVxuICAgIHRkOm50aC1vZi10eXBlKDMpOmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiQWN0aW9uXCI7XG4gICAgfVxuXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TableListService, } from '@app/core/http/serviceIndex';\nimport { IndividualMock, IndividualMockList, } from '@app/shared/models/prediction';\nimport { TableFilter } from '@app/shared/models/table-filter';\nimport { MockTest } from '@app/shared/models/CommonModel';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-mock-lists',\n  templateUrl: './mock-lists.component.html',\n  styleUrls: ['./mock-lists.component.css']\n})\nexport class MockListsComponent implements OnInit {\n  public currentModule: string;\n\n  public tableFilter = <TableFilter>{};\n  public isLoading: boolean = false;\n  public mocks: IndividualMock[];\n  private subscription: Subscription;\n\n  constructor(private _activeRoute: ActivatedRoute, private _tableService: TableListService,) { }\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.currentModule = this._activeRoute.snapshot.params['moduleName'];\n\n    this._activeRoute.queryParams.subscribe(\n      (params) => {\n\n        if (params.page) {\n          this.tableFilter.page = params.page;\n          this.tableFilter.limit = params.limit;\n        } else if (params.search) {\n          this.tableFilter.search = params.search;\n        } else {\n          this.tableFilter.page = 1;\n          this.tableFilter.limit = 10;\n          this.tableFilter.sortDirection = 'desc';\n          this.tableFilter.sortColumn = 'name';\n        }\n        this.getMockList();\n      }\n    )\n  }\n\n  getMockList() {\n\n    this.subscription = this._tableService.getMockList(this.tableFilter, this.currentModule)\n      .subscribe((res: IndividualMockList) => {\n        this.mocks = res.questions;\n        this.tableFilter = res.filter;\n        this.isLoading = false;\n      });\n  }\n\n  startClass(data) {\n    let obj = {\n      isActive: data.isProgess,\n    };\n    this.subscription = this._tableService.onStartClassByPrediction(data.data.questionId, obj, this.currentModule).subscribe((res) => {\n      this.getMockList();\n    });\n  }\n\n\n  deleteMock(data) {\n    this.subscription = this._tableService.onDeleteOtherModule(data.questionId, this.currentModule.toLowerCase(), 'mock-test')\n      .subscribe((res) => {\n        this.getMockList()\n      })\n  }\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    if (this.subscription) this.subscription.unsubscribe();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL2luZGl2aWR1YWwtbW9jay9tb2Nrcy9tb2Nrcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mocks',\n  templateUrl: './mocks.component.html',\n  styleUrls: ['./mocks.component.css']\n})\nexport class MocksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"app-modules-manage-individual-mock-individual-mock-module-es5.4743553d4d896c2b8c6e.js"}