{"version":3,"sources":["src/app/modules/manage/predictions/predictions-board/predictions-board.component.html","src/app/modules/manage/predictions/predictions-create/predictions-create.component.html","src/app/modules/manage/predictions/predictions-list/predictions-list.component.html","src/app/modules/manage/predictions/predictions/predictions.component.html","src/app/modules/manage/predictions/predictions-board/predictions-board.component.css","src/app/modules/manage/predictions/predictions-board/predictions-board.component.ts","src/app/modules/manage/predictions/predictions-create/predictions-create.component.css","src/app/modules/manage/predictions/predictions-create/predictions-create.component.ts","src/app/modules/manage/predictions/predictions-list/predictions-list.component.css","src/app/modules/manage/predictions/predictions-list/predictions-list.component.ts","src/app/modules/manage/predictions/predictions-routing.module.ts","src/app/modules/manage/predictions/predictions.module.ts","src/app/modules/manage/predictions/predictions/predictions.component.css","src/app/modules/manage/predictions/predictions/predictions.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<header-route-menu-light [currentPageName]=\\\"'Prediction File'\\\" [moduleName]=\\\"'Question Bank'\\\"\\n></header-route-menu-light>\\n<div class=\\\"row\\\">\\n    <ng-container *ngFor=\\\"let qb of questionBank.questionBank\\\">\\n        <div class=\\\"col-md-6 col-xl-3\\\">\\n            <question-card [questionBank]=\\\"qb\\\" (click)=\\\"goToList(qb)\\\" [isManage]=\\\"true\\\"></question-card>\\n        </div>\\n    </ng-container>\\n</div>\"","export default \"<header-route-menu-light [currentPageName]=\\\"'Prediction File'\\\" [moduleName]=\\\"moduleName\\\"></header-route-menu-light>\\n\\n<div class=\\\"container py-3\\\">\\n  <div>\\n    <div class=\\\"d-flex step-wrapper\\\">\\n      <div class=\\\"step-1\\\" [ngClass]=\\\"{ 'step-active': isStep1 == true }\\\">\\n        <p>Step 1</p>\\n      </div>\\n      <div class=\\\"step-2\\\" [ngClass]=\\\"{ 'step-active': isStep1 == false }\\\">\\n        <p>Step 2</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"isStep1\\\">\\n    <form [formGroup]=\\\"createForm\\\">\\n      <div class=\\\"row my-2\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <label-text>Prediction File Name</label-text>\\n          <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\" placeholder=\\\"Write Prediction File Name\\\" />\\n        </div>\\n      </div>\\n      <div class=\\\"row mb-2\\\">\\n        <div class=\\\"col-md-12 mb-2\\\">\\n          <label-text>Select Plan Type</label-text>\\n          <select class=\\\"select-box form-control\\\" formControlName=\\\"type\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.type.errors }\\\">\\n            <option value=\\\"\\\" disabled selected hidden>Select Type</option>\\n            <option *ngFor=\\\"let type of typeList;let i=index\\\" [ngValue]=\\\"type.questionType\\\">{{ type.questionName }}\\n            </option>\\n          </select>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"footer-button-block\\\">\\n        <button class=\\\"btn btn-cancel\\\" (click)=\\\"goBack()\\\">Cancel</button>\\n        <button class=\\\"btn btn-next\\\" (click)=\\\"goToStep2()\\\">Continue</button>\\n      </div>\\n\\n\\n    </form>\\n  </div>\\n  <div *ngIf=\\\"!isStep1\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <show-entries (data)=\\\"selectedData($event)\\\"></show-entries>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <search-box [hint]=\\\"'Search Question'\\\" (searchData)=\\\"searchDatas($event)\\\" [isEmit]=\\\"true\\\"></search-box>\\n      </div>\\n    </div>\\n\\n    <ng-container *ngIf=\\\"!selectedLists; else showData\\\">\\n      <div>\\n        <table-loading [tType]=\\\"'c4-1'\\\"></table-loading>\\n      </div>\\n    </ng-container>\\n    <ng-template #showData>\\n      <table role=\\\"table\\\" class=\\\"table-responsive\\\">\\n        <thead role=\\\"rowgroup\\\">\\n          <tr role=\\\"row\\\">\\n            <th role=\\\"columnheader\\\" (click)=\\\"fitter('createdDate')\\\" class=\\\"fitter-able\\\"\\n              [class.fitter-active]='tableFilter.sortColumn==\\\"createdDate\\\"'>Created Date</th>\\n\\n            <th role=\\\"columnheader\\\" (click)=\\\"fitter('name')\\\" class=\\\"fitter-able\\\"\\n              [class.fitter-active]='tableFilter.sortColumn==\\\"name\\\"'>Name</th>\\n\\n            <th role=\\\"columnheader\\\">Question Name</th>\\n\\n            <th role=\\\"columnheader\\\" style=\\\"width: 20%;\\\">Action</th>\\n          </tr>\\n        </thead>\\n\\n        <tbody role=\\\"rowgroup\\\">\\n          <ng-container *ngFor=\\\"let data of selectedLists\\\">\\n            <tr role=\\\"row\\\" (click)=\\\"selectfile(data.questionId)\\\"\\n              [class.table-selected]=\\\"selectedQues.includes(data.questionId) == true\\\">\\n              <td role=\\\"cell\\\">{{data.createdDate | defaultDate}}</td>\\n\\n              <td role=\\\"cell\\\">{{data.name}}</td>\\n              <td role=\\\"cell\\\">{{data.questionType}}</td>\\n              <td>\\n                <action-btn-gp [btnName]=\\\"'view'\\\" [directLink]=\\\"\\\" isNewTab=\\\"true\\\"></action-btn-gp>\\n              </td>\\n            </tr>\\n          </ng-container>\\n\\n          <tr *ngIf=\\\"tableFilter.totalCount == 0\\\" role=\\\"row\\\">\\n            <td colspan=\\\"4\\\" class=\\\"text-center\\\">\\n              No Data Exit\\n            </td>\\n          </tr>\\n        </tbody>\\n\\n      </table>\\n\\n      <pagination [tableFilter]='tableFilter' (getPage)=\\\"changePage($event)\\\">\\n      </pagination>\\n\\n      <div class=\\\"footer-button-block\\\">\\n        <button class=\\\"btn btn-cancel\\\" (click)=\\\"backStep1()\\\">Cancel</button>\\n        <button class=\\\"btn btn-next\\\" (click)=\\\"checkAvaiable()\\\">Submit</button>\\n      </div>\\n\\n      <dialog-box *ngIf=\\\"isDialog\\\" (onconfirm)=\\\"checkconfirm($event)\\\" [dialogEntry]=\\\"dialog\\\"></dialog-box>\\n\\n    </ng-template>\\n\\n  </div>\\n</div>\"","export default \"<header-route-menu-light [currentPageName]=\\\"'Question Bank'\\\" [moduleName]=\\\"currentModule\\\"\\n    [createRoute]=\\\"'alchemist-academy/manage/full-mock-test/create'\\\"></header-route-menu-light>\\n\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 p-0\\\">\\n        <show-entries></show-entries>\\n    </div>\\n    <div class=\\\"col-md-6 p-0\\\">\\n        <search-box [hint]=\\\"'Search'\\\"></search-box>\\n    </div>\\n</div>\\n<ng-container *ngIf=\\\"isLoading; else showData\\\">\\n    <div>\\n        <table-loading [tType]=\\\"'c3-3'\\\"></table-loading>\\n    </div>\\n\\n</ng-container>\\n<ng-template #showData>\\n    <table role=\\\"table\\\" class=\\\"table-responsive\\\">\\n        <thead role=\\\"rowgroup\\\">\\n            <tr role=\\\"row\\\">\\n                <th role=\\\"columnheader\\\" class=\\\"fitter-able\\\" (click)=\\\"fitter('name')\\\"\\n                    [class.fitter-active]='tableFilter.sortColumn==\\\"name\\\"'>Name</th>\\n\\n                <th role=\\\"columnheader\\\" style=\\\"width: 30%;\\\">Question Type</th>\\n\\n                <th role=\\\"columnheader\\\" style=\\\"width: 15%;\\\">Action</th>\\n            </tr>\\n        </thead>\\n\\n\\n        <tbody role=\\\"rowgroup\\\" [class]=\\\"currentModule.moduleName\\\">\\n            <ng-container *ngFor=\\\"let data of predictions\\\">\\n                <tr role=\\\"row\\\">\\n                    <td role=\\\"cell\\\">{{data.name}}</td>\\n                    <td role=\\\"cell\\\">{{data.questionName}}</td>\\n                    <td>\\n                        <action-btn-gp [btnName]=\\\"'start'\\\" [data]=\\\"data\\\" *ngIf=\\\"data.isActive == 'Not Active'\\\"\\n                            (onSubmit)=\\\"startClass($event)\\\"></action-btn-gp>\\n                        <action-btn-gp [btnName]=\\\"'end'\\\" [data]=\\\"data\\\" *ngIf=\\\"data.isActive == 'Running'\\\"\\n                            (onSubmit)=\\\"startClass($event)\\\"></action-btn-gp>\\n                        <action-btn-gp [btnName]=\\\"'edit'\\\" [editId]=\\\"data.questionId\\\"></action-btn-gp>\\n                        <action-btn-gp [btnName]=\\\"'delete'\\\" [data]=\\\"data\\\" (onSubmit)=\\\"deletePrediction($event)\\\">\\n                        </action-btn-gp>\\n                    </td>\\n\\n            </ng-container>\\n\\n\\n\\n            <tr *ngIf=\\\"tableFilter.totalCount == 0\\\" role=\\\"row\\\">\\n                <td colspan=\\\"4\\\" class=\\\"text-center\\\">\\n                    No Data Exit\\n                </td>\\n            </tr>\\n        </tbody>\\n\\n    </table>\\n\\n    <pagination [totalCount]='tableFilter.totalCount'>\\n    </pagination>\\n\\n</ng-template>\"","export default \"\\n\\n<header-route-menu [currentPageName]=\\\"'Manage'\\\"></header-route-menu>\\n\\n<div class=\\\"container-fluid mt--6\\\">\\n\\n   <router-outlet></router-outlet>\\n   \\n\\n</div>\\n\\n\\n\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL3ByZWRpY3Rpb25zL3ByZWRpY3Rpb25zLWJvYXJkL3ByZWRpY3Rpb25zLWJvYXJkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CheckProgress } from '@app/shared/models/check-progress';\n\n@Component({\n  selector: 'app-predictions-board',\n  templateUrl: './predictions-board.component.html',\n  styleUrls: ['./predictions-board.component.css']\n})\nexport class PredictionsBoardComponent implements OnInit {\n\n  public questionBank:CheckProgress;\n\n  constructor(private _activeRoute:ActivatedRoute,private _router:Router) { }\n\n  ngOnInit() {\n    this.questionBank=this._activeRoute.snapshot.data[\"questionBank\"];\n  }\n\n  goToList(data){\n    this._router.navigate([data.moduleType], { relativeTo: this._activeRoute });\n\n  }\n\n}\n","export default \"\\n\\n\\n.hidden {\\n    overflow-x: hidden;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9tYW5hZ2UvcHJlZGljdGlvbnMvcHJlZGljdGlvbnMtY3JlYXRlL3ByZWRpY3Rpb25zLWNyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUdBO0lBQ0ksa0JBQWtCO0FBQ3RCIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9tYW5hZ2UvcHJlZGljdGlvbnMvcHJlZGljdGlvbnMtY3JlYXRlL3ByZWRpY3Rpb25zLWNyZWF0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG5cblxuLmhpZGRlbiB7XG4gICAgb3ZlcmZsb3cteDogaGlkZGVuO1xufVxuXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonService } from '@app/core/http/common.service';\nimport { SaveService } from '@app/core/http/save.service';\nimport { TableListService } from '@app/core/http/table-list.service';\nimport { PredictionDetail } from '@app/shared/models/prediction';\nimport { PredictionFile, User } from '@app/shared/models/CommonModel';\nimport { QuestionsList } from '@app/shared/models/question-list';\nimport { TableFilter } from '@app/shared/models/table-filter';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-predictions-create',\n  templateUrl: './predictions-create.component.html',\n  styleUrls: ['./predictions-create.component.css']\n})\nexport class PredictionsCreateComponent implements OnInit {\n  public moduleName:string;\n\n\n  public dialog: any = {\n    showText: \"\",\n    isDelete: false,\n    isWarning: true,\n    isconfirmBtn: false\n  }\n\n  createForm: FormGroup;\n  public typeList: any ;\n\n  public selectedLists: any = [];\n  public selectedQues:Array<string>=[];\n  // any\n  public predictionID: any;\n\n  public searchData: any;\n  tableFilter = <TableFilter>{\n    page:1,\n    limit:10,\n    sortColumn:'createdDate',\n    sortDirection:'desc',\n    search:null\n  };\n\n  // boolean\n  public isStep1: boolean = true;\n  public submitted: boolean = false;\n  public isAsc: boolean = true;\n  public isDialog: boolean = false;\n  public isProgress: boolean = true;\n  public subscription: Subscription;\n\n  constructor(\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _saveService: SaveService,\n    private _cservice: CommonService,\n    private _tableService:TableListService\n  ) {\n    this.createForm = this.formBuilder.group({\n      name: [\"\", [Validators.required]],\n      type: [\"\", [Validators.required]],\n    });\n  }\n\n  ngOnInit() {\n    this.moduleName = this._activeRoute.snapshot.params['moduleName'];\n    this.typeList=this._activeRoute.snapshot.data['questionType'].questions;\n    let data = this._activeRoute.snapshot.data['predictionDetail'];\n    if (data)\n      this.getDataEditForm(data);\n\n  }\n\n  getDataEditForm(data: PredictionDetail) {\n    this.predictionID=data.predictionId;\n    this.createForm =  this.formBuilder.group({\n      name: [data.name, [Validators.required]],\n      type: [data.questionType, [Validators.required]],\n    });\n    this.selectedQues=data.questions;\n  }\n\n\n  goToStep2() {\n    this.submitted = true;\n    if (this.createForm.invalid) {\n      return;\n    } else {\n\n      this.isStep1 = false;\n      this.tableFilter={\n        page:1,\n        limit:10,\n        sortColumn:'createdDate',\n        sortDirection:'desc'\n      };\n      this.getSelectLists();\n    }\n  }\n\n  backStep1() {\n    this.isStep1 = true;\n    this.tableFilter={\n      page:1,\n      limit:10,\n      sortColumn:'createdDate',\n      sortDirection:'desc'\n    };\n  }\n\n  selectedData(e) {\n    this.tableFilter.limit = e;\n    this.getSelectLists();\n  }\n\n  searchDatas(e) {\n    this.tableFilter.search = e;\n    this.getSelectLists();\n  }\n\n  get f() {\n    return this.createForm.controls;\n  }\n\n  getSelectLists() {\n    this.selectedLists =null;\n    let module={\n      moduleType:this.moduleName,\n      questionType:this.createForm.value.type\n    };\n    this.subscription=this._tableService.getManageQuestionList(this.tableFilter,module)\n    .subscribe((res:QuestionsList)=>{\n      this.tableFilter=res.filter;\n      this.selectedLists=res.questions;\n    })\n \n  }\n\n  selectfile(id) {\n    let index = this.selectedQues.indexOf(id);\n    if (this.selectedQues.includes(id)) {\n      this.selectedQues.splice(index, 1);\n    } else {\n      this.selectedQues.push(id);\n    }\n  }\n\n  onSave() {\n    this.isProgress=true;\n    let obj = new PredictionFile();\n    obj.name = this.createForm.value.name;\n    obj.questionType = this.createForm.value.type;\n    obj.questions = this.selectedQues;\n    this.subscription = this._saveService.onSavePrediction(obj,this.moduleName,this.predictionID).subscribe((res) => {\n      this.goBack();\n    });\n  }\n\n\n  goBack() {\n    this._cservice.goBackPrev();\n  }\n\n  changePage(e) {\n    this.tableFilter.page = e;\n    this.getSelectLists();\n  }\n\n  checkAvaiable() {\n    if (this.selectedQues.length == 0) {\n      this.isDialog = true;\n      this.dialog.showText = 'Select Question!'\n    } else {\n      this.onSave();\n    }\n  }\n\n  checkconfirm(e) {\n    this.isDialog = e;\n  }\n\n\n  fitter(sortColumn) {\n    this.isAsc = !this.isAsc ? this.isAsc = true : this.isAsc = false;\n    this.tableFilter.sortDirection = this.isAsc ? 'asc' : 'desc';\n    this.tableFilter.sortColumn = sortColumn;\n    this.getSelectLists();\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n","export default \"/* table responsive */\\n\\n@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {\\n    /*\\n                      Label the data\\n                  You could also use a data-* attribute and content for this. That way \\\"bloats\\\" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.\\n                      */\\n    td:nth-of-type(1):before {\\n        content: \\\"Name\\\";\\n    }\\n    td:nth-of-type(2):before {\\n        content: \\\"Question Type\\\";\\n    }\\n    td:nth-of-type(3):before {\\n        content: \\\"Action\\\";\\n    }\\n\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9tYW5hZ2UvcHJlZGljdGlvbnMvcHJlZGljdGlvbnMtbGlzdC9wcmVkaWN0aW9ucy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEscUJBQXFCOztBQUVyQjtJQUNJOzs7dUJBR21CO0lBQ25CO1FBQ0ksZUFBZTtJQUNuQjtJQUNBO1FBQ0ksd0JBQXdCO0lBQzVCO0lBQ0E7UUFDSSxpQkFBaUI7SUFDckI7O0FBRUoiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL21hbmFnZS9wcmVkaWN0aW9ucy9wcmVkaWN0aW9ucy1saXN0L3ByZWRpY3Rpb25zLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIHRhYmxlIHJlc3BvbnNpdmUgKi9cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjBweCksIChtaW4tZGV2aWNlLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAvKlxuICAgICAgICAgICAgICAgICAgICAgIExhYmVsIHRoZSBkYXRhXG4gICAgICAgICAgICAgICAgICBZb3UgY291bGQgYWxzbyB1c2UgYSBkYXRhLSogYXR0cmlidXRlIGFuZCBjb250ZW50IGZvciB0aGlzLiBUaGF0IHdheSBcImJsb2F0c1wiIHRoZSBIVE1MLCB0aGlzIHdheSBtZWFucyB5b3UgbmVlZCB0byBrZWVwIEhUTUwgYW5kIENTUyBpbiBzeW5jLiBMZWEgVmVyb3UgaGFzIGEgY2xldmVyIHdheSB0byBoYW5kbGUgd2l0aCB0ZXh0LXNoYWRvdy5cbiAgICAgICAgICAgICAgICAgICAgICAqL1xuICAgIHRkOm50aC1vZi10eXBlKDEpOmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiTmFtZVwiO1xuICAgIH1cbiAgICB0ZDpudGgtb2YtdHlwZSgyKTpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIlF1ZXN0aW9uIFR5cGVcIjtcbiAgICB9XG4gICAgdGQ6bnRoLW9mLXR5cGUoMyk6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJBY3Rpb25cIjtcbiAgICB9XG5cbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { EvaluateQuestionService } from '@app/core/http/evaluate-question.service';\nimport { TableListService } from '@app/core/http/table-list.service';\nimport { Prediction, PredictionList } from '@app/shared/models/prediction';\nimport { TableFilter } from '@app/shared/models/table-filter';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-predictions-list',\n  templateUrl: './predictions-list.component.html',\n  styleUrls: ['./predictions-list.component.css']\n})\nexport class PredictionsListComponent implements OnInit {\n\n  public currentModule:string;\n\n  public tableFilter=<TableFilter>{};\n  public isLoading:boolean=false;\n  public predictions:Prediction[];\n  private subscription:Subscription;\n  private isAsc:boolean=false;\n\n  constructor(private _activeRoute:ActivatedRoute,private _tableService:TableListService,) { }\n\n  ngOnInit() {\n    this.currentModule=this._activeRoute.snapshot.params['moduleName'];\n    this._activeRoute.queryParams.subscribe(\n      (params) => {\n        if (params.page) {\n          this.tableFilter.page = params.page;\n          this.tableFilter.limit = params.limit;\n        } else if (params.search) {\n          this.tableFilter.search = params.search;\n        } else{\n          this.tableFilter.page = 1;\n          this.tableFilter.limit = 10;\n          this.tableFilter.sortDirection = 'desc';\n          this.tableFilter.sortColumn = 'name';\n        }\n        this.gePredictionsList();\n      }\n    )\n  }\n\n  gePredictionsList() {\n    this.isLoading = true;\n    this.subscription = this._tableService.getPredictionList(this.tableFilter,this.currentModule,'prediction')\n      .subscribe((res:PredictionList) => {\n        this.predictions=res.questions;\n        this.tableFilter = res.filter;\n        this.isLoading = false;\n      });\n  }\n\n  startClass(data){\n    let obj = {\n      isActive: data.isProgess,\n    };\n    this.subscription=this._tableService.onStartClassByPrediction(data.data.questionId, obj,this.currentModule).subscribe((res) => {\n      this.gePredictionsList();\n    });\n  }\n\n  deletePrediction(data){\n    this.subscription=this._tableService.onDeleteOtherModule(data.questionId,this.currentModule.toLowerCase(),'prediction')\n    .subscribe((res)=>{\n      this.gePredictionsList();\n    })\n  }\n\n\n  fitter(sortColumn) {\n    this.isAsc = !this.isAsc ? this.isAsc = true : this.isAsc = false;\n    this.tableFilter.sortDirection = this.isAsc ? 'asc' : 'desc';\n    this.tableFilter.sortColumn = sortColumn;\n    this.gePredictionsList();\n  }\n\n\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    if(this.subscription) this.subscription.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, Route } from \"@angular/router\";\nimport { OtherDetailResolver } from '@app/modules/manage/reslovers/other-detail.reslover';\nimport { OtherQuestionResolver } from '@app/modules/manage/reslovers/otherQuestion.reslover';\nimport { QuestionTypeResolver } from '@app/modules/manage/reslovers/questions-type.reslover';\nimport { PredictionsBoardComponent } from '@app/modules/manage/predictions/predictions-board/predictions-board.component';\nimport { PredictionsCreateComponent } from '@app/modules/manage/predictions/predictions-create/predictions-create.component';\nimport { PredictionsListComponent } from '@app/modules/manage/predictions/predictions-list/predictions-list.component';\nimport { PredictionsComponent } from '@app/modules/manage/predictions/predictions/predictions.component';\n\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component:PredictionsComponent,\n    resolve: {\n      questionBank: OtherQuestionResolver\n    },\n    data:{\n      type:'prediction'\n    } ,\n    children:[\n      {\n        path: \"\",\n        component:PredictionsBoardComponent,\n      },\n      {\n        path: \":moduleName\",\n        component:PredictionsListComponent,\n      },\n      {\n        path: \":moduleName/create\",\n        component:PredictionsCreateComponent,\n        resolve:{\n          questionType:QuestionTypeResolver\n        }\n      },\n      {\n        path: \":moduleName/create/:detailId\",\n        component:PredictionsCreateComponent,\n        resolve:{\n          questionType:QuestionTypeResolver,\n          predictionDetail:OtherDetailResolver\n        },\n        data:{\n          detailName:'prediction'\n        } ,\n      }\n\n    ]\n  },\n  \n];\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers:[\n    OtherQuestionResolver,\n    QuestionTypeResolver,\n    OtherDetailResolver\n  ]\n})\n\nexport class PredictionsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PredictionsListComponent } from './predictions-list/predictions-list.component';\nimport { PredictionsCreateComponent } from './predictions-create/predictions-create.component';\nimport { PredictionsRoutingModule } from '@app/modules/manage/predictions/predictions-routing.module';\nimport { PredictionsBoardComponent } from './predictions-board/predictions-board.component';\nimport { BasicModule } from '@app/shared/basic-components/basic.module';\nimport { PredictionsComponent } from './predictions/predictions.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [PredictionsListComponent, PredictionsCreateComponent, PredictionsBoardComponent, PredictionsComponent],\n  imports: [\n    CommonModule,\n    PredictionsRoutingModule,\n    BasicModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  exports:[\n    PredictionsRoutingModule\n  ]\n})\nexport class PredictionsModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlL3ByZWRpY3Rpb25zL3ByZWRpY3Rpb25zL3ByZWRpY3Rpb25zLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-predictions',\n  templateUrl: './predictions.component.html',\n  styleUrls: ['./predictions.component.css']\n})\nexport class PredictionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"app-modules-manage-predictions-predictions-module-es5.js"}