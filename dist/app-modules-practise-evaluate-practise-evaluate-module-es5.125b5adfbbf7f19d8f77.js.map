{"version":3,"sources":["src/app/modules/practise-evaluate/listening-practise/listening-practise.component.html","src/app/modules/practise-evaluate/reading-practise/reading-practise.component.html","src/app/modules/practise-evaluate/speaking-practise/speaking-practise.component.html","src/app/modules/practise-evaluate/writing-practise/writing-practise.component.html","src/app/modules/practise-evaluate/listening-practise/listening-practise.component.css","src/app/modules/practise-evaluate/listening-practise/listening-practise.component.ts","src/app/modules/practise-evaluate/practise-evaluate.module.ts","src/app/modules/practise-evaluate/prasticeEvaluate-routing.module.ts","src/app/modules/practise-evaluate/reading-practise/reading-practise.component.css","src/app/modules/practise-evaluate/reading-practise/reading-practise.component.ts","src/app/modules/practise-evaluate/reslovers/practise-evaluate-detail.reslover.ts","src/app/modules/practise-evaluate/speaking-practise/speaking-practise.component.css","src/app/modules/practise-evaluate/speaking-practise/speaking-practise.component.ts","src/app/modules/practise-evaluate/writing-practise/writing-practise.component.css","src/app/modules/practise-evaluate/writing-practise/writing-practise.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ng-container *ngIf=\\\"!scoreResult; else showScore\\\">\\n    <ng-container *ngIf=\\\"questionList[selectedIndex].question as question\\\">\\n        <header-evaluate-menu [questionCode]=\\\"routeParam.questionType\\\" [question]=\\\"question\\\"\\n            (timerEvent)=\\\"onTimeEnd($event)\\\">\\n            <show-question-count [currentNo]=\\\"selectedIndex+1\\\" [totalCount]=\\\"questionList.length\\\">\\n                <listening-question [questionData]=\\\"question\\\" (answerEmit)=\\\"getAnswer($event)\\\"></listening-question>\\n            </show-question-count>\\n        </header-evaluate-menu>\\n    </ng-container>\\n</ng-container>\\n<ng-template #showScore>\\n    <header-evaluate-menu [questionCode]=\\\"routeParam.questionType\\\">\\n        <user-info [info]=\\\"scoreResult\\\" *ngIf=\\\"routeParam.questionType !='L008'\\\"></user-info>\\n        <ng-container *ngFor=\\\"let score of scoreResult.results;let i=index;\\\">\\n            <show-question-count [currentNo]=\\\"i+1\\\">\\n                <score-by-module [scoreResult]=\\\"score\\\" [moduleName]=\\\"'Listening'\\\"></score-by-module>\\n            </show-question-count>\\n        </ng-container>\\n        <div class=\\\"footer-button-block\\\">\\n            <cancel-btn>Cancel</cancel-btn>\\n        </div>\\n    </header-evaluate-menu>\\n</ng-template>\"","export default \"<header-evaluate-menu [questionCode]=\\\"routeParam.questionType\\\">\\n    <ng-container *ngIf=\\\"!resultScore; else showScore\\\">\\n        <reading-question [questionData]=\\\"detailData\\\" (answerEmit)=\\\"getAnswer($event)\\\"></reading-question>\\n    </ng-container>\\n    <ng-template #showScore>\\n        <score-by-module [scoreResult]=\\\"resultScore\\\" [moduleName]=\\\"'Reading'\\\"></score-by-module>\\n        <div class=\\\"footer-button-block\\\">\\n            <cancel-btn>Cancel</cancel-btn>\\n        </div>\\n    </ng-template>\\n</header-evaluate-menu>\\n\\n<!-- <question-side-menu [questionList]=\\\"questionList\\\" (onSelectedQuestion)=\\\"onSelectedQuestion($event)\\\"></question-side-menu> -->\\n\\n\\n\"","export default \"<ng-container *ngIf=\\\"!isLoading\\\">\\n    <ng-container *ngIf=\\\"!scoreResult ; else showScore\\\">\\n        <header-evaluate-menu [questionCode]=\\\"routeParam.questionType\\\">\\n            <speaking-question [questionData]=\\\"selectedQuestion\\\" (answerEmit)=\\\"getAnswer($event)\\\"\\n                [isnonEvaluate]=\\\"false\\\">\\n            </speaking-question>\\n        </header-evaluate-menu>\\n\\n    </ng-container>\\n\\n    <ng-template #showScore>\\n        <header-evaluate-menu [questionCode]=\\\"routeParam.questionType\\\">\\n            <score-by-module [scoreResult]=\\\"scoreResult\\\" [moduleName]=\\\"'Speaking'\\\"></score-by-module>\\n\\n            <button class=\\\"btn btn-retry\\\" (click)=\\\"onRetry()\\\">\\n                <i class=\\\"fa fa-repeat\\\" aria-hidden=\\\"true\\\"></i>\\n                Retry\\n            </button>\\n            <div class=\\\"footer-button-block\\\">\\n                <cancel-btn>Cancel</cancel-btn>\\n                <!-- <button class=\\\"btn btn-next\\\" (click)=\\\"onEvaluate()\\\" *ngIf=\\\"!isFinal\\\">AI Scoring</button> -->\\n            </div>\\n\\n        </header-evaluate-menu>\\n    </ng-template>\\n\\n    <question-side-menu [questionList]=\\\"questionList\\\" (onSelectedQuestion)=\\\"onSelectedQuestion($event)\\\">\\n    </question-side-menu>\\n</ng-container>\"","export default \"<header-evaluate-menu [questionCode]=\\\"routeParam.questionType\\\">\\n    <ng-container [ngSwitch]=\\\"routeParam.questionType\\\">\\n        <ng-container *ngSwitchCase=\\\"'W001'\\\">\\n            <essay-question [essayDetail]=\\\"detailData\\\" (submitEvaluation)=\\\"onSubmit($event)\\\" *ngIf=\\\"!resultScore\\\"></essay-question>\\n            <evaluation-score [scoreData]=\\\"resultScore\\\" *ngIf=\\\"resultScore\\\"></evaluation-score>\\n        </ng-container>\\n\\n        <ng-container *ngSwitchCase=\\\"'W002'\\\">\\n          <summary-question [summaryDetail]=\\\"detailData\\\" (submitEvaluation)=\\\"onSubmit($event)\\\" *ngIf=\\\"!resultScore\\\"></summary-question>\\n          <summary-score [scoreData]=\\\"resultScore\\\" *ngIf=\\\"resultScore\\\"></summary-score>\\n        </ng-container>\\n    </ng-container>\\n    <div class=\\\"footer-button-block\\\" *ngIf=\\\"resultScore\\\">\\n        <cancel-btn></cancel-btn>\\n    </div>\\n</header-evaluate-menu>\\n\\n\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcHJhY3Rpc2UtZXZhbHVhdGUvbGlzdGVuaW5nLXByYWN0aXNlL2xpc3RlbmluZy1wcmFjdGlzZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { EvaluateQuestionService } from '@app/core/http/evaluate-question.service';\nimport { ListeningQuestionComponent } from '@app/shared/question-components/listening-question/listening-question.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-listening-practise',\n  templateUrl: './listening-practise.component.html',\n  styleUrls: ['./listening-practise.component.css']\n})\nexport class ListeningPractiseComponent implements OnInit {\n  @ViewChild(ListeningQuestionComponent, { static: false }) private listeningQuestion: ListeningQuestionComponent;\n  public routeParam: any;\n  public questionList: any;\n  public selectedIndex: number = 0;\n  private answerList: Array<any> = [];\n  private _subscription: Subscription;\n  public scoreResult:any;\n\n  constructor(private _activeRoute: ActivatedRoute, private _service: EvaluateQuestionService) { }\n\n  ngOnInit() {\n    this.routeParam = this._activeRoute.snapshot.params;\n    this.questionList = this._activeRoute.snapshot.data[\"questionDetail\"].questionList;\n\n  }\n\n  getAnswer(answer) {\n    this.answerList.push(answer);\n    if (this.selectedIndex == this.questionList.length - 1) {\n      let finalAnswer = {\n        userAnswers: this.answerList,\n        questionType: this.routeParam.questionType\n      }\n      this._subscription = this._service.onPractiseListeningEvaluate(finalAnswer, this.routeParam)\n        .subscribe((res) => {\n          this.scoreResult=res;\n        })\n    }\n    else {\n      this.selectedIndex += 1;\n    }\n  }\n\n  onTimeEnd(e) {\n    if (e.action === 'done')\n      this.listeningQuestion.onSubmit();\n  }\n\n  ngAfterViewInit(): void {\n    //Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\n    //Add 'implements AfterViewInit' to the class.\n    // console.log(this.listeningQuestion)\n  }\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    if (this._subscription) this._subscription.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WritingPractiseComponent } from './writing-practise/writing-practise.component';\nimport { ReadingPractiseComponent } from '@app/modules/practise-evaluate/reading-practise/reading-practise.component';\nimport { ListeningPractiseComponent } from '@app/modules/practise-evaluate/listening-practise/listening-practise.component';\nimport { SpeakingPractiseComponent } from '@app/modules/practise-evaluate/speaking-practise/speaking-practise.component';\nimport { BasicModule } from '@app/shared/basic-components/basic.module';\nimport { PracticeEvaluateRoutingModule } from '@app/modules/practise-evaluate/prasticeEvaluate-routing.module';\nimport { QuestionComponentsModule } from '@app/shared/question-components/question-components.module';\n\n\n\n@NgModule({\n  declarations: [\n    WritingPractiseComponent,\n    ReadingPractiseComponent,\n    ListeningPractiseComponent,\n    SpeakingPractiseComponent\n  ],\n  imports: [\n    CommonModule,\n    BasicModule,\n    QuestionComponentsModule,\n    PracticeEvaluateRoutingModule\n  ],\n  exports:[\n    PracticeEvaluateRoutingModule\n  ]\n})\nexport class PractiseEvaluateModule { }\n","\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PractiseEvaluateDetailResolver } from '@app/modules/practise-evaluate/reslovers/practise-evaluate-detail.reslover';\nimport { ListeningPractiseComponent } from '@app/modules/practise-evaluate/listening-practise/listening-practise.component';\nimport { ReadingPractiseComponent } from '@app/modules/practise-evaluate/reading-practise/reading-practise.component';\nimport { SpeakingPractiseComponent } from '@app/modules/practise-evaluate/speaking-practise/speaking-practise.component';\nimport { WritingPractiseComponent } from '@app/modules/practise-evaluate/writing-practise/writing-practise.component';\n\n\n\n\nconst routes: Routes = [\n  {\n    path: ':moduleName/:questionType/:questionId/writing-practise',\n    component: WritingPractiseComponent,\n    resolve:{\n      questionDetail:PractiseEvaluateDetailResolver\n    }\n  },\n  {\n    path: ':moduleName/:questionType/:questionId/reading-practise',\n    component: ReadingPractiseComponent,\n    resolve:{\n      questionDetail:PractiseEvaluateDetailResolver\n    }\n  },\n  {\n    path: ':moduleName/:questionType/:questionId/speaking-practise',\n    component: SpeakingPractiseComponent,\n    resolve:{\n      questionDetail:PractiseEvaluateDetailResolver\n    }\n  },\n  {\n    path: ':moduleName/:questionType/:questionId/listening-practise',\n    component: ListeningPractiseComponent,\n    resolve:{\n      questionDetail:PractiseEvaluateDetailResolver\n    }\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers:[\n    PractiseEvaluateDetailResolver\n  ]\n})\nexport class PracticeEvaluateRoutingModule { }","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcHJhY3Rpc2UtZXZhbHVhdGUvcmVhZGluZy1wcmFjdGlzZS9yZWFkaW5nLXByYWN0aXNlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { EvaluateQuestionService } from '@app/core/http/evaluate-question.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-reading-practise',\n  templateUrl: './reading-practise.component.html',\n  styleUrls: ['./reading-practise.component.css']\n})\nexport class ReadingPractiseComponent implements OnInit {\n  public questionList:any=[];\n  public routeParam:any;\n  public detailData:any;\n  public resultScore:any;\n\n  private _subscription:Subscription;\n  \n  constructor(private _activeRoute:ActivatedRoute,private readingService:EvaluateQuestionService) { }\n\n  ngOnInit() {\n    this.routeParam=this._activeRoute.snapshot.params;\n    this.detailData = this._activeRoute.snapshot.data[\"questionDetail\"];\n  }\n\n  getAnswer(answer){\n    this._subscription = this.readingService.onPractiseReadingEvaluate(answer, this.routeParam)\n    .subscribe((res) => {\n      this.resultScore = res;\n      this.resultScore.questionType=this.routeParam.questionType\n    })\n  }\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    if(this._subscription) this._subscription.unsubscribe();\n  }\n\n  onSelectedQuestion(ques){\n    this.detailData=ques;\n  }\n}\n","import { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DetailService } from '@app/core/http/detail.service';\n\n@Injectable()\nexport class PractiseEvaluateDetailResolver implements Resolve<any> {\n\n    constructor(private question: DetailService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot):\n        Observable<any> {\n        let moduleName=route.params['moduleName'].toLowerCase();\n        const routeUrl = `${moduleName}/${route.params['questionType']}/${route.params['questionId']}/${moduleName}-practise`;\n\n        return this.question.getDetail(routeUrl);\n    }\n}","export default \".btn-retry {\\n    background-color: #dedbdb;\\n    color: var(--text-fade-color);\\n    border: solid 1px;\\n    border-radius: 0;\\n    padding: 0.4em 1.3em;\\n    font-size: 1.2em;\\n    margin-bottom: -140px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wcmFjdGlzZS1ldmFsdWF0ZS9zcGVha2luZy1wcmFjdGlzZS9zcGVha2luZy1wcmFjdGlzZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLDZCQUE2QjtJQUM3QixpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLG9CQUFvQjtJQUNwQixnQkFBZ0I7SUFDaEIscUJBQXFCO0FBQ3pCIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wcmFjdGlzZS1ldmFsdWF0ZS9zcGVha2luZy1wcmFjdGlzZS9zcGVha2luZy1wcmFjdGlzZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ0bi1yZXRyeSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2RlZGJkYjtcbiAgICBjb2xvcjogdmFyKC0tdGV4dC1mYWRlLWNvbG9yKTtcbiAgICBib3JkZXI6IHNvbGlkIDFweDtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgIHBhZGRpbmc6IDAuNGVtIDEuM2VtO1xuICAgIGZvbnQtc2l6ZTogMS4yZW07XG4gICAgbWFyZ2luLWJvdHRvbTogLTE0MHB4O1xufSJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { EvaluateQuestionService } from '@app/core/http/evaluate-question.service';\nimport { SpeakingEvaluate } from '@app/shared/models/SpeakingModel';\nimport { SpeakingQuestionComponent } from '@app/shared/question-components/speaking-question/speaking-question.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-speaking-practise',\n  templateUrl: './speaking-practise.component.html',\n  styleUrls: ['./speaking-practise.component.css']\n})\nexport class SpeakingPractiseComponent implements OnInit {\n  @ViewChild(SpeakingQuestionComponent, { static: false }) private speakingQuestion: SpeakingQuestionComponent;\n\n\n  public routeParam: any;\n  public questionList: any;\n  public scoreResult: any;\n  public selectedQuestion: any;\n  public answers: any;\n  public isLoading: boolean = false;\n\n  private _subscription: Subscription;\n\n  constructor(private _activeRoute: ActivatedRoute, private _service: EvaluateQuestionService) { }\n\n  ngOnInit() {\n    this.routeParam = this._activeRoute.snapshot.params;\n    this.questionList = this._activeRoute.snapshot.data[\"questionDetail\"].questionList;\n    this.selectedQuestion = this.questionList[0].question;\n  }\n\n  onRetry() {\n    this.scoreResult = null;\n  }\n  getAnswer(answer: SpeakingEvaluate) {\n    this.answers = answer;\n\n    if (answer.isNoEvaluate) {\n      this.scoreResult = {};\n      this.scoreResult.file = answer.blobUrl;\n      this.scoreResult.isNoEvaluate = answer.isNoEvaluate;\n      this.scoreResult.questionType = answer.questionType;\n      this.scoreResult.question = this.selectedQuestion.paragraph;\n      this.scoreResult.audioFile = this.selectedQuestion.audioFile;\n      this.scoreResult.imageFile = this.selectedQuestion.imageFile;\n    } else {\n      this._subscription = this._service.onPractiseSpeakingEvaluate(answer, this.routeParam)\n        .subscribe((res) => {\n          this.scoreResult = res;\n          // this.scoreResult.blobUrl =  answer.blobUrl;\n        })\n    }\n  }\n\n  onEvaluate() {\n    this.isLoading = true;\n    let ans = {\n      // file:this.answers.file,\n      questionType: this.answers.questionType,\n      questionId: this.answers.questionId,\n      transcript: this.answers.transcript,\n      items: this.answers.items\n    };\n\n    this.scoreResult = null;\n\n    this._subscription = this._service.onPractiseSpeakingEvaluate(ans, this.routeParam)\n      .subscribe((res) => {\n        this.scoreResult = res;\n        // this.scoreResult.audioFile = this.answers.blobUrl;\n        if (this.scoreResult)\n          this.scoreResult.isNoEvaluate = false;\n        this.isLoading = false;\n      });\n  }\n  onTimeEnd(e) {\n    if (e.action === 'done')\n      this.speakingQuestion.onSubmit();\n  }\n\n  ngAfterViewInit(): void {\n    //Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\n    //Add 'implements AfterViewInit' to the class.\n    // console.log(this.listeningQuestion)\n  }\n\n  onSelectedQuestion(ques) {\n    this.selectedQuestion = ques;\n    this.scoreResult = null;\n  }\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    if (this._subscription) this._subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcHJhY3Rpc2UtZXZhbHVhdGUvd3JpdGluZy1wcmFjdGlzZS93cml0aW5nLXByYWN0aXNlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { EvaluateQuestionService } from '@app/core/http/evaluate-question.service';\nimport { EssayQuestionComponent } from '@app/shared/question-components/essay-question/essay-question.component';\nimport { Subscription } from 'rxjs';\nimport { Options } from 'selenium-webdriver';\n\n@Component({\n  selector: 'app-writing-practise',\n  templateUrl: './writing-practise.component.html',\n  styleUrls: ['./writing-practise.component.css']\n})\nexport class WritingPractiseComponent implements OnInit {\n  public routeParam\n  public detailData: any;\n  public resultScore: any;\n\n  private _subscription: Subscription;\n\n\n  constructor(private _activeRoute: ActivatedRoute, private writingService: EvaluateQuestionService) { }\n\n \n\n  ngOnInit() {\n    this.routeParam = this._activeRoute.snapshot.params;\n    this.detailData = this._activeRoute.snapshot.data[\"questionDetail\"]\n  }\n\n  onSubmit(data) {\n    this._subscription = this.writingService.onPractiseWritingEvaluate(data, this.routeParam)\n      .subscribe((res) => {\n        this.resultScore = res;\n      })\n  }\n\n  ngOnDestroy(): void {\n    if (this._subscription)\n      this._subscription.unsubscribe();\n  }\n\n\n\n}\n"],"sourceRoot":"webpack:///","file":"app-modules-practise-evaluate-practise-evaluate-module-es5.125b5adfbbf7f19d8f77.js"}